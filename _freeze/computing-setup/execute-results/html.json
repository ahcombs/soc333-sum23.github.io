{
  "hash": "9e1348c13c053ce9adab1235fbc57582",
  "result": {
    "markdown": "---\ntitle: \"Computing setup instructions\"\nexecute: \n  eval: false\n---\n\n\n# Computing in Sociol 333\n\nThis page will introduce you to the course computing workflow.\nWe will set up everything you need in order to start using R, RStudio, Git, and GitHub--four powerful programs that you will be learning to use to analyze data in this class.\n\nR is a programming language, like Python, C++, Java, and many others.\nThat means it can be used to do all kinds of things.\nIts primary strength, however, is data analysis, and it is used by many social scientists, statisticians, data scientists, and others to clean, model, transform, and visualize all kinds of data.\n\nRStudio is an interface for using R\\--basically, a nice text editor with bells and whistles that are specific to writing code.\nThere are other ways to write programs in R, but most people use RStudio because it is both powerful and free.\n\n::: callout-tip\nR is the name of the programming language itself and RStudio is a convenient interface.\n:::\n\nGit and GitHub are the collaboration and version control system that we will be using throughout the course.\nThey can be used for any kind of file--not just R.\nIt is likely you'll run into them if you ever do any work involving writing code that needs to be made available to others.\n\n::: callout-tip\nGit is a version control system (like \"Track Changes\" features from Microsoft Word but more powerful) and GitHub is the home for your Git-based projects on the internet (like Box but much better).\n:::\n\nToday, we simply aim to get these four tools set up and talking to one another.\n\n**The good news:** All of this only needs to be done one time--after this, you're set not just for the rest of this class, but for whenever you use these tools again in future!\n\n**The bad news:** It's a tedious and nonintuitive process.\nIf you find it frustrating and/or confusing, it's not just you.\nStick with it, and ask when you get stuck--we will take as much time as necessary to make sure it works for everyone.\n\n## Goals\n\nBy time you go through the steps on this page and in the [tech setup repo](https://github.com/soc333-sum23/tech-setup) that it pairs with, you will...\n\n-   Have a functioning R, RStudio, Git, and GitHub setup\n-   Have an introduction to our course workflow using R, RStudio, Git, and GitHub\n-   Gain practice writing a reproducible report using Quarto\n-   Practice version control using GitHub\n\n# Getting set up!\n\nI recommend you find someone with the same operating system as you to work together on this with.\n\n## Part A: R and RStudio\n\n### Step 1: Download and install both [R](https://cran.r-project.org/) and [RStudio](https://posit.co/download/rstudio-desktop/)\n\nThose links again:\n\n-   Download R: <https://cran.r-project.org/>\n\n-   Download RStudio: <https://posit.co/download/rstudio-desktop/>\n\nFollow the prompts your computer gives you to install both programs.\n\n[These instructions](https://rstudio-education.github.io/hopr/starting.html) might help if you get stuck.\n\nNow open RStudio.\nYou should see a screen that looks something like this:\n\n![](images/computingimages/rstudio.png)\n\nWe will go through what the different pieces of this interface are in more detail another day.\nFor now, all you need to know is that the box on the left hand side labeled \"Console\", where the blue `>` is, is where you will be copy/pasting and running the code that is given to you in the next sections.\n\n### Step 2: Install some packages\n\nYou will need a couple of what are called \"packages\" to complete the rest of these steps.\nPackages are basically bundles of code that people write and release that make it easier to do specific tasks in R.\n\nCopy and paste the following code into the RStudio console.\nThen hit enter.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"usethis\")\ninstall.packages(\"gitcreds\")\n```\n:::\n\n\nYour computer might take a few moments to download and install the required code.\nThen you should see a message in the console saying `The downloaded binary packages are in`, followed by a file path.\nThis means the installation worked.\n\n## Part B: Git and GitHub\n\nThese instructions are adapted from the [How to Set up Git]{.underline} section [of this webpage](https://rfortherestofus.com/2021/02/how-to-use-git-github-with-r/).\nThat page contains some videos that might help you if you prefer learning that way--but know that a couple of things are slightly out of date.\n\n### Step 3. Do you already have Git?\n\nOpen RStudio.\nLook at the console (left hand window).\nYou should see another tab right next to the word \"Console\" that says \"Terminal.\" Click on this.\nIn the terminal window, paste the following code, then hit enter:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nwhich git\n```\n:::\n\n\n::: callout-note\nThe console sends instructions to R.\nThe terminal, on the other hand, sends instructions to the operating system of your computer.\nThe terminal is often used to install and update things and create/delete/move files on your computer.\n:::\n\nThis checks if you have git installed.\nIf so, it will show a file path--on a mac, something like `/usr/local/bin/git.` Congrats, you're good to go!\nMove to **Step 5.**\n\nIf instead you see something like `git: command not found` , you need to install git.\nProceed to **Step 4.**\n\n### Step 4: Install Git\n\nThe process varies somewhat by operating system (mac vs windows vs linux).\nI recommend following the appropriate [instructions here](https://happygitwithr.com/install-git.html#install-git-windows).\n\n### Step 5: Configure Git\n\nPaste the following code into the RStudio console (you may have to click back into the console if you are still in the terminal from Step 3), edit it to contain your GitHub username and email address, then hit enter.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::use_git_config(\n  user.name = \"Your_GitHub_username\",\n  user.email = \"your_github_email@example.com\"\n)\n```\n:::\n\n\n## Part C: Connect R/RStudio to Git/GitHub\n\nThis is adapted from the [Connect RStudio and GitHub]{.underline} section of [this page](https://rfortherestofus.com/2021/02/how-to-use-git-github-with-r/) (same as above).\n\n### Step 6: Create a Personal Access Token on GitHub\n\nPersonal access tokens are like passwords--they allow GitHub to make sure that it really is your computer that is trying to modify things in your account.\nHere you'll create a token in GitHub.\nThen in Step 7 you'll provide the same token to R.\nThen the two will be able to communicate with one another.\n\nEnter the following code in the RStudio console and hit enter:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::create_github_token()\n```\n:::\n\n\nThis will take you to the right page on GitHub.\nEnter a description.\n**Make sure you change the expiration to be longer than 30 days,** so that everything will keep working at least until the end of this course.\nYou can leave all other options at their default values.\n\nThen copy the token GitHub provides you to your clipboard.\nIt is best to leave this window open until the next step is finished so that you can re-copy this if needed--if you lose it, you will have to create another one.\n\n### Step 7: Store the personal access token to connect R/RStudio and GitHub\n\nEnter the following code in the RStudio console, then hit enter:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngitcreds::gitcreds_set()\n```\n:::\n\n\nEnter the personal access token you copied in Step 6 when prompted.\n\n## Part D: Testing your new setup!\n\n### Step 8: Clone the test repo & start a new RStudio project\n\nEverything should now be set up!\nNow, we'll test whether it is working correctly.\n\n-   Go to the course organization at <https://github.com/soc333-sum23>.\n    Click on the repo called **tech-setup-yourname**.\n    You will copy these files to your computer (known as \"cloning\"), make a change, and upload your changes back to GitHub (known as \"pushing\") to confirm that everything is working correctly.\n\n-   Follow the \"How to clone a git repo\" section of [these instructions](https://soc333-sum23.github.io/computing-clonerepo.html) to clone the repo so that you can open its files in RStudio.\n\n-   In RStudio, click *tech-setup-test.qmd* in the files pane (bottom right) to open the template Quarto file.\n\n-   Follow the instructions in the file to make a change and commit it.\n\n# This isn't working...\n\n-   If you get stuck, come talk to me.\n-   Depending on your setup, it may be simpler to access RStudio through containers. Containers allow you to code through a browser, meaning you can skip all the downloading steps (though you still must connect RStudio and GitHub). See [these instructions](https://sta199-f22-1.github.io/labs/lab-0.html) for how to set this up.\n",
    "supporting": [
      "computing-setup_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}