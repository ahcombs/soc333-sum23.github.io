{
  "hash": "a6f22e4545923ff5833b8e53f1311d53",
  "result": {
    "markdown": "---\ntitle: \"Visualizing various types of data\"\nsubtitle: \"Lecture 4\"\ndate: \"September 8, 2022\"\nformat: revealjs\n---\n\n\n# Warm up\n\n\n::: {.cell}\n\n:::\n\n\n## **Identifying variable types** {.smaller}\n\n::: question\nIdentify the type of each of the following variables.\n\n-   Favorite food\n-   Number of classes you're taking this semester\n-   Zip code\n:::\n\n## Questions from the prepare materials?\n\n\n```{=html}\n<iframe src=\"https://app.sli.do/event/9mqwqdqbgesgLASUHGpwU8/embed/polls/52941ba5-0668-4cad-9b86-82505db6b862\" width=\"900\" height=\"600\"></iframe>\n```\n\n## **The way data is displayed matters**\n\n::: question\nWhat do these three plots show?\n:::\n\n![Source: [#barbarplots](https://cogtales.wordpress.com/2016/06/06/congratulations-barbarplots/)](images/04/bar-plot-meme.png){fig-alt=\"Three representations of the same data: Bar plot of means, box plots, histograms.\" fig-align=\"center\"}\n\n# Application exercise\n\n## `ae-02-viz-data-types`\n\n::: appex\n-   Go to the course [GitHub org](https://github.com/sta199-f22-1) and find your ae-02-viz-data-types (repo name will be suffixed with your GitHub name).\n-   Clone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\n-   Render, commit, and push your edits by the AE deadline -- 3 days from today.\n:::\n\n## Recap of AE {.smaller}\n\n-   Pick geoms based on data types.\n-   Set appropriate binwidths for histograms.\n-   Turn off legends when they provide redundant information with `show.legend = FALSE`.\n-   Create plots with multiple geoms, and pay attention to order.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}