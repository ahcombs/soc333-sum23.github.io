{
  "hash": "8e9ba5199faa3e68e5be5f23116d9648",
  "result": {
    "markdown": "---\ntitle: \"Interpreting results\"\nsubtitle: \"Lecture 17\"\ndate: \"June 15, 2023\"\nformat: \n  revealjs:\n    smaller: true\n---\n\n\n\n\n## Logistics\n\n-   Four classes left. No class Monday. We're almost there! :)\n\n. . .\n\n-   Finishing up the project:\n\n    -   Project component 3: submit for grading by next Tuesday (June 20)\n\n. . .\n\n```         \n-   Final paper \n\n    -   use (revised!) elements of your proposal, descriptive stats, and results to turn your question into a (concise) paper.\n    -   More detailed instructions and example will be posted soon\n    -   Due Wednesday June 28 11:59pm\n```\n\n. . .\n\n```         \n-   Final presentation\n\n    -   Short! ~5-10 minutes\n    -   Briefly introduce your question, say a bit about why it's interesting, show your results, and talk about what you conclude from them. \n    -   Most on Monday June 26 (last day of class)\n    \n```\n\n. . .\n\n```         \n    -   **Looking for a few volunteers to go on Thursday June 22 instead!**\n    \n        -   Benefits: \n        -   More time afterwards to focus on your final paper (finish up the semester early?)\n        -   No stress while you watch day 2 \n        -   Everyone gets more flexibility on time\n        -   What's your favorite kind of donut? :)\n```\n\n## Today {.smaller}\n\n-   Interpreting results!\n\n## The (approximate) data analysis process {.smaller}\n\n::: columns\n::: {.column width=\"73%\"}\n-   Determine topic ✓\n-   Find data; learn what observations and variables are available ✓\n-   Write research question ✓\n-   Describe distributions of relevant variables ✓\n-   Prepare data frame for analysis ✓\n-   Describe relationships between variables ✓\n-   Perform statistical tests ✓\n-   **Communicate results**\n:::\n\n::: {.column width=\"27%\"}\n![](images/07/cycle.png)\n:::\n:::\n\n# So you have a p value...\n\n## What can you do with it?\n\n-   Rejecting/failing to reject hypotheses is useful\n-   But it's also statistics-speak, not effective communication\n\n## Problems with p values\n\n-   arbitrary cutoffs\n-   file drawer problem\n-   doesn't pay attention to whether the effect is important\n-   sometimes you reject when you shouldn't (5% of the time)\n\n## Solutions: best analysis practices\n\n-   descriptive statistics! pay attention to effect sizes.\n-   repeat things! use different data or different analysis techniques. If you get the same thing twice you're less likely to be wrong.\n\n## Objectivity: no one is objective\n-   mesearch is helpful sometimes\n\n## Statistics reflects biases\n\n-   It's not objective\n-   We make choices that have implications\n-   Treating all members of a group as the same\n-   Reference categories\n-   How we pick categories--what options are offered. Treating categories as fixed when maybe they shouldn't be.\n-   How to combat? Make good choices. If you can't fix it, you can point it out as a limitation\n\n## Media reports: use Joseph's material\n\n## Ethics? \n\n## Reading for Tuesday\n\n-   There's an article linked on the course calendar. Mess around with the interactive element!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}