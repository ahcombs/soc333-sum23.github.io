{
  "hash": "2ffcc21c949a1c952a17938d9a220871",
  "result": {
    "markdown": "---\ntitle: \"Hypothesis tests pt 2\"\nsubtitle: \"Lecture 14\"\ndate: \"June 12, 2023\"\nformat: revealjs\nsmaller: true\n---\n\n\n\n\n## Logistics {.smaller}\n\n-   Project component 2 is graded\n\n    -   Check GitHub issues for written feedback\n    -   Grades on Sakai\n\n-   Exercise grades up to date too\n\n-   Project component 3, results: draft by Thursday (June 15), submit for grading next Tuesday (June 20)\n\n    -   Drafts should be complete--meaning you attempted all parts\n\n## Today {.smaller}\n\n-   Hypothesis tests in more specifics\n\n## Recap from last time: Hypothesis test process\n\n::: incremental\n-   Start with a null hypothesis (boring result; nothing is happening; no group differences) and an alternative hypothesis (the other possibility)\n\n-   In the world where your null hypothesis is true, would your sample be super weird?\n\n    -   We have statistical tests for this\n\n-   If so, we reject the null hypothesis in favor of the alternative hypothesis\n\n-   If not, we fail to reject the null hypothesis\n\n    -   \"Fail\" sounds harsh but this is normal and fine! We do analysis to find out if our predictions are true--sometimes they aren't and that's valuable to know.\n:::\n\n## How do I know if my sample is weird?\n\n-   Would it fall within the distribution of the samples you would get under the null hypothesis?\n\n![](images/13/clt_n20_newsample.png)\n\n## How do I know if my sample is weird?\n\n::: incremental\n-   We take advantage of the fact that the expected samples under the null hypothesis are (under most circumstances) normally distributed (bell-shaped)--the Central Limit Theorem guarantees it.\n-   There is math that describes the shape of normal distributions\n-   Z scores tell us how many standard deviations away from the expected mean our sample is.\n:::\n\n## Z scores and percentiles\n\n-   Percentile: What percent of the data is below a particular observation\n-   Something that can be calculated with software (like R)\n\n    -   The `pnorm()` function takes a Z score and gives you the corresponding percentile\n\n![](images/13/nel_percentile.png)\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(q = 1) # q is the Z score (yes, it's confusing). \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8413447\n```\n:::\n\n```{.r .cell-code}\n# Nel's Z score is 1 because their SAT score is 1 standard \n# deviation above the mean for all test-takers.\n```\n:::\n\n\n-   Conclusion: 84% of SAT-takers score below Nel.\n\n## TODO: Z score and percentile exercise\n\n## Z scores and percentiles\n\n-   68% of observations are within 1 standard deviation of the mean\n-   95% are within 2 sds\n-   99.7% are within 3 sds\n\n![](images/13/percentiles.png)\n\n## P values\n\n-   Usually\n",
    "supporting": [
      "14-hypothesistests2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}