{
  "hash": "a54a27f536672e3530817716d40773e7",
  "result": {
    "markdown": "---\ntitle: \"Data import\"\nsubtitle: \"Lecture 9\"\ndate: \"September 27, 2022\"\nformat: revealjs\n---\n\n\n# Warm up\n\n\n::: {.cell}\n\n:::\n\n\n## While you wait for class to begin...\n\n::: callout-important\nCome up with at least one question you'd like to see answered in the Exam 1 review on Thursday.\n\nGo to [slido.com](https://www.slido.com/) and submit your question with the code **#sta199exam1**.\n\nYou can also upvote others' questions.\n:::\n\n## Announcements {.smaller}\n\n-   Lab 3 due Friday night (11:59 pm) -- but I strongly recommend you finish and submit it before the exam begins!\n\n-   Exam 1 is released on Thursday at noon and is due at 2pm on Monday.\n\n    -   No TA OH during the exam.\n\n    -   I will have OH 4-5pm on Friday (on Zoom).\n\n    -   Any clarification questions must be **emailed to me** only.\n\n    -   No Slack use during the exam, even about non-exam related questions.\n\n## Exam study tips\n\n-   Take notes that you can reference\n-   Review feedback given to you on graded work\n-   Revisit AEs\n-   Review suggested solutions\n-   Ask questions\n\n## New resources\n\nOn the course website:\n\n-   More links to package documentation on the useful links page: <https://sta199-f22-1.github.io/course-links.html>\n-   New page with links to cheatsheets: <https://sta199-f22-1.github.io/computing-cheatsheets.html>\n\n# From last time\n\n## Continue from last time: `ae-06`\n\n::: appex\n-   Go to your container and open your `ae-06` project.\n-   Render, commit, and push.\n\n::: callout-important\nYou will see an error.\nRead it and do as it says!\n:::\n\n- Pull.\n\n- Once again, render, commit, and push.\n:::\n\n## Recap of AE {.smaller}\n\n-   A vector can only have one type of elements in it. Placing elements with different types into a vector cases type coercion.\n-   Factor is a class that R uses for categorical data and factors allow us to customize order and behaviour of levels.\n\n# Reading data into R\n\n## Reading rectangular data\n\n-   Using [**readr**](https://readr.tidyverse.org/):\n    -   Most commonly: `read_csv()`\n    -   Maybe also: `read_tsv()`, `read_delim()`, etc.\n-   Using [**readxl**](https://readxl.tidyverse.org/): `read_excel()`\n-   Using [**googlesheets4**](https://googlesheets4.tidyverse.org/): `read_sheet()` -- We haven't covered this in the videos, but might be useful for your projects\n\n# Application exercise\n\n## `ae-07`\n\n::: appex\n-   Go to the course [GitHub org](https://github.com/sta199-f22-1) and find your `ae-07` (repo name will be suffixed with your GitHub name).\n-   Clone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\n-   Render, commit, and push your edits by the AE deadline -- 3 days from today.\n:::\n",
    "supporting": [
      "09-data-import_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}