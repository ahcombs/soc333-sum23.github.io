{
  "hash": "cea665b2fa62c5151f404cd1a809840c",
  "result": {
    "markdown": "---\ntitle: \"Describing data: part 1\"\nsubtitle: \"Lecture 7\"\ndate: \"May 30, 2023\"\nformat: revealjs\n---\n\n\n## Logistics\n\n-   Final project proposals due tonight\n\n-   Late work policy\n\n    -   You have 3 late days to use through the semester; no questions asked\n    -   Applies to project components and assignments\n\n-   Homework 1, Intro to R: available now; due Thursday night (it's short)\n\n## Today\n\n-   Data analysis process\n-   Univariate summaries: what do my variables look like?\n-   Today's exercise: in R! Clone project repo now (**ex-5-30-yourusername**)\n\n    -   [Instructions: Computing -> Cloning and committing](https://soc333-sum23.github.io/computing-clonerepo.html)\n\n## The (approximate) data analysis process {.smaller}\n\n::: columns\n::: {.column width=\"73%\"}\n::: incremental\n-   Determine topic\n-   Find data; learn what observations and variables are available\n-   Write research question\n-   Describe distributions of relevant variables\n-   Prepare data frame for analysis\n-   Describe relationships between variables\n-   Perform statistical tests/write models\n-   Communicate results\n:::\n:::\n\n::: {.column width=\"27%\"}\n::: fragment\n![](images/07/cycle.png)\n:::\n:::\n:::\n\n## The (approximate) data analysis process {.smaller}\n\n::: columns\n::: {.column width=\"73%\"}\n-   Determine topic ✓\n-   Find data; learn what observations and variables are available ✓\n-   Write research question ✓\n-   Describe distributions of relevant variables\n-   Prepare data frame for analysis\n-   Describe relationships between variables\n-   Perform statistical tests/write models\n-   Communicate results\n:::\n\n::: {.column width=\"27%\"}\n![](images/07/cycle.png)\n:::\n:::\n\n## The (approximate) data analysis process {.smaller}\n\n::: columns\n::: {.column width=\"73%\"}\n-   Determine topic ✓\n-   Find data; learn what observations and variables are available ✓\n-   Write research question ✓\n-   **Describe distributions of relevant variables**\n-   **Prepare data frame for analysis**\n-   **Describe relationships between variables**\n-   Perform statistical tests/write models\n-   Communicate results\n:::\n\n::: {.column width=\"27%\"}\n![](images/07/cycle.png)\n:::\n:::\n\n## Project component 2: Descriptive statistics\n\nGoals: \n\n::: {.incremental}\n\n-   Understand how your variables are distributed in your data\n\n-   Make any necessary modifications data frame\n\n    -   Remove irrelevant observations\n    -   Modify or create variables\n\n-   Describe the relationships between your variables \n:::\n\n# Understanding how your variables are distributed\n\n\n\n\n\n## Method 1: With numbers\n\n-   Summary statistics\n-   What makes sense depends on variable type\n\n## R syntax for today\n\n-   To access specific variables: `dataframe$variable`\n-   Functions do things with variables/other inputs: `do_this(with_this)`\n-   We can save results as *objects* to use later with `<-`: `an_object_name <- some_function(some_input)`\n    -   eg: `meanvalue <- mean(dataframe$variable)`\n\n## Examples: EADA data on sports teams {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(sports)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 879\nColumns: 8\n$ school             <chr> \"Duke\", \"Duke\", \"Duke\", \"Duke\", \"Duke\", \"Duke\", \"Du…\n$ year               <dbl> 2003, 2003, 2003, 2003, 2003, 2003, 2003, 2003, 200…\n$ division           <chr> \"NCAA Division I-A\", \"NCAA Division I-A\", \"NCAA Div…\n$ teamgender         <chr> \"men\", \"men\", \"men\", \"men\", \"men\", \"men\", \"men\", \"m…\n$ sport              <chr> \"Baseball\", \"Basketball\", \"Fencing\", \"Football\", \"G…\n$ ncoaches           <dbl> 3, 4, 1, 10, 2, 3, 3, 2, 2, 3, 3, 4, 4, 8, 6, 13, 2…\n$ nplayers           <dbl> 33, 15, 19, 81, 12, 45, 23, 32, 11, 50, 35, 35, 30,…\n$ player_coach_ratio <dbl> 11.000000, 3.750000, 19.000000, 8.100000, 6.000000,…\n```\n:::\n:::\n\n# Categorical variables\n\n## Categorical: What are the options? {.smaller}\n\n-   `unique()`\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(sports$school)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Duke\" \"UNC\" \n```\n:::\n:::\n\n\n:::\n\n::: {.fragment}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(sports$sport)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Baseball\"                  \"Basketball\"               \n [3] \"Fencing\"                   \"Football\"                 \n [5] \"Golf\"                      \"Lacrosse\"                 \n [7] \"Soccer\"                    \"Swimming and Diving\"      \n [9] \"Tennis\"                    \"Track and Field X Country\"\n[11] \"Wrestling\"                 \"All Track Combined\"       \n[13] \"Field Hockey\"              \"Rowing\"                   \n[15] \"Volleyball\"                \"Gymnastics\"               \n[17] \"Softball\"                 \n```\n:::\n:::\n\n:::\n\n## Categorical: counts for one variable\n\n-   Counts: `table()`\n\n    -   `useNA = \"always\"` tells R to let you know if any observations are missing information\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(sports$school, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nDuke  UNC <NA> \n 423  456    0 \n```\n:::\n:::\n\n\n## Categorical: counts for two variables\n\n-   Still `table()`, but use two variables as arguments\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(sports$teamgender, sports$school, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       \n        Duke UNC <NA>\n  men    209 209    0\n  women  214 247    0\n  <NA>     0   0    0\n```\n:::\n:::\n\n\n# TODO: Exercise with categorical variables\n\n# Numeric variables \n\n## Numeric: Distributions\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-describingpt1_files/figure-revealjs/unnamed-chunk-7-1.png){width=480}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-describingpt1_files/figure-revealjs/unnamed-chunk-8-1.png){width=480}\n:::\n:::\n\n:::\n:::\n\n\n## Summarizing a distribution\n\n-   Center\n-   Spread\n-   Shape\n\n## Center\n\nSay we measure heights of 7 people (in inches):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheights <- c(67, 70, 80, 61, 70, 71, 62)\n```\n:::\n\n\n\n::: incremental\n-   Mean\n\n    -   The average\n    -   Add everything together and divide by the number of values: (66 + 70 + 80 + 62 + 68 + 71 + 62)/7 = 68.7\n    -   `mean()`\n:::\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 68.71429\n```\n:::\n:::\n\n:::\n\n## Center\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheights\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 67 70 80 61 70 71 62\n```\n:::\n:::\n\n\n\n::: incremental\n\n-   Median\n\n    -   The middle value\n    -   Order them least to greatest, select the one in the middle\n    -   61, 62, 67, **70**, 70, 71, 80\n    -   `median()`\n:::\n\n::: {.fragment}\n    \n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 70\n```\n:::\n:::\n\n:::\n\n## Spread\n\n-   Minimum and maximum\n\n::: {.cell}\n\n```{.r .cell-code}\nmin(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 61\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmax(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 80\n```\n:::\n:::\n\n\n## Spread: quartiles {.smaller}\n-   **percentiles**\n-   lowest 1/4 of your data is below the 25th percentile, lowest 1/2 below 50%, etc\n-   Calculated the same way as the median\n-   `quantile()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquantile(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  0%  25%  50%  75% 100% \n61.0 64.5 70.0 70.5 80.0 \n```\n:::\n:::\n\n\n## Spread: standard deviation\n\n-   Measure of degree of variation in data: bigger standard deviation = more variation\n-   Used to establish statistical significance--we'll come back to this later\n-   `sd()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheights_moresimilar <- c(60, 63, 62, 60, 61, 61, 64)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nheights\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 67 70 80 61 70 71 62\n```\n:::\n\n```{.r .cell-code}\nheights_moresimilar\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 60 63 62 60 61 61 64\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(heights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6.369571\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(heights_moresimilar)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.511858\n```\n:::\n:::\n\n\n## summary(): (almost) everything all at once\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(sports$nplayers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   5.00   15.00   28.00   35.63   40.00  148.00 \n```\n:::\n:::\n\n\n## Summary statistics functions and missing values {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(acs12$income)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n:::\n\n\n-   NA! What!\n\n::: incremental\n-   Summary statistics functions will return NA if any of the observations are missing information for the variable\n-   Always check for missing data!\n-   Use the `na.rm = TRUE` option to tell the function to ignore the NA values. \n:::\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(acs12$income)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n      0       0    3000   23600   33700  450000     377 \n```\n:::\n:::\n\n:::\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(acs12$income, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 23599.98\n```\n:::\n:::\n\n:::\n\n\n\n## TODO: exercise on center and spread\n\n## Shape\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-describingpt1_files/figure-revealjs/unnamed-chunk-24-1.png){width=480}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-describingpt1_files/figure-revealjs/unnamed-chunk-25-1.png){width=480}\n:::\n:::\n\n:::\n:::\n\n\n## Shape\n\n-   We'll go over how to make plots later\n-   But summary statistics tell you things about shape too\n\n## Skew\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-describingpt1_files/figure-revealjs/unnamed-chunk-26-1.png){width=480}\n:::\n:::\n\nRight-skewed data\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-describingpt1_files/figure-revealjs/unnamed-chunk-27-1.png){width=480}\n:::\n:::\n\nLeft-skewed data\n:::\n:::\n\n## Skew\n\n-   Extreme values influence the mean more than the median\n-   When mean is higher than median: data might be skewed right (and vice versa)\n\n## Example: American Community Survey commute time\n\ntime_to_work: Travel time to work, in minutes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_commute <- mean(acs12$time_to_work, na.rm = TRUE)\nmedian_commute <- median(acs12$time_to_work, na.rm = TRUE)\n```\n:::\n\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_commute\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 25.99745\n```\n:::\n:::\n\n:::\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian_commute\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20\n```\n:::\n:::\n\n:::\n\n## Example: American Community Survey commute time\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07-describingpt1_files/figure-revealjs/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n\n\n## Shape: Quartiles\n\n-   Location of quartiles also tells you something about shape\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(acs12$time_to_work)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n      1      10      20      26      30     163    1217 \n```\n:::\n:::\n\n\n## Review {.smaller}\n\n-   We just covered how to get a better understanding of the variables in your data set\n\n...\n\n-   Categorical data: look at the available categories and how many observations are in each category\n\n    -   `unique(dataframe$variable)`\n    -   `table(dataframe$variable, useNA = \"always\")`\n    -   `table(dataframe$variable1, dataframe$variable2, useNA = \"always\")`\n    \n...\n\n-   Numeric data: Look at summary statistics that tell you something about the distribution\n    -   `summary(dataframe$variable)`\n    -   `sd(dataframe$variable, na.rm = TRUE)`\n    \n",
    "supporting": [
      "07-describingpt1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}