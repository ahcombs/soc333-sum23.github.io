{
  "hash": "04cbe74a994260de88be6e3837aaf01b",
  "result": {
    "markdown": "---\ntitle: \"Meet the toolkit\"\nsubtitle: \"Lecture 2\"\ndate: \"September 1, 2022\"\nformat: revealjs\n---\n\n\n# Making STA 199 a success\n\n## Five tips for success\n\n1.  Complete all the preparation work before class.\n2.  Ask questions.\n3.  Do the readings and watch the videos.\n4.  Do the homework and lab.\n5.  Don't procrastinate and don't let a week pass by with lingering questions.\n\n## Learning during a pandemic\n\nI want to make sure that you learn everything you were hoping to learn from this class.\nIf this requires flexibility, please don't hesitate to ask.\n\n::: incremental\n-   You never owe me personal information about your health (mental or physical) but you're always welcome to talk to me. If I can't help, I likely know someone who can.\n-   I want you to learn lots of things from this class, but I primarily want you to stay healthy, balanced, and grounded.\n:::\n\n## Course FAQ\n\n**Q - What data science background does this course assume?**\\\nA - None.\n\n. . .\n\n**Q - Is this an intro stat course?**\\\nA - While statistics $\\ne$ data science, they are very closely related and have tremendous of overlap.\nHence, this course is a great way to get started with statistics.\nHowever this course is *not* your typical high school statistics course.\n\n. . .\n\n**Q - Will we be doing computing?**\\\nA - Yes.\n\n## Course FAQ\n\n**Q - Is this an intro CS course?**\\\nA - No, but many themes are shared.\n\n. . .\n\n**Q - What computing language will we learn?**\\\nA - R.\n\n. . .\n\n**Q: Why not language X?**\\\nA: We can discuss that over â˜•.\n\n## Course toolkit {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n**Course operation**\n\n-   Materials: [sta199-f22-1.github.io](https://sta199-f22-1.github.io/)\n-   Submission: Gradescope\n-   Discussion: Slack\n-   Gradebook: Sakai\n:::\n\n::: {.column width=\"50%\"}\n**Doing data science**\n\n-   Computing:\n    -   R\n    -   RStudio\n    -   tidyverse\n    -   Quarto\n-   Version control and collaboration:\n    -   Git\n    -   GitHub\n:::\n:::\n\n# Toolkit: Computing\n\n## Learning goals {.smaller}\n\nBy the end of the course, you will be able to...\n\n::: incremental\n-   gain insight from data\n-   gain insight from data, **reproducibly**\n-   gain insight from data, reproducibly, **using modern programming tools and techniques**\n-   gain insight from data, reproducibly **and collaboratively**, using modern programming tools and techniques\n-   gain insight from data, reproducibly **(with literate programming and version control)** and collaboratively, using modern programming tools and techniques\n:::\n\n# Reproducible data analysis\n\n## Reproducibility checklist {.smaller}\n\n::: question\nWhat does it mean for a data analysis to be \"reproducible\"?\n:::\n\n. . .\n\n**Near-term goals:**\n\n-   Are the tables and figures reproducible from the code and data?\n-   Does the code actually do what you think it does?\n-   In addition to what was done, is it clear *why* it was done?\n\n. . .\n\n**Long-term goals:**\n\n-   Can the code be used for other data?\n-   Can you extend the code to do other things?\n\n## Toolkit for reproducibility\n\n-   Scriptability $\\rightarrow$ R\n-   Literate programming (code, narrative, output in one place) $\\rightarrow$ Quarto\n-   Version control $\\rightarrow$ Git / GitHub\n\n# R and RStudio\n\n## R and RStudio {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/02/r-logo.png){fig-alt=\"R logo\" fig-align=\"center\"}\n\n-   R is an open-source statistical **programming language**\n-   R is also an environment for statistical computing and graphics\n-   It's easily extensible with *packages*\n:::\n\n::: {.column .fragment width=\"50%\"}\n![](images/02/rstudio-logo.png){fig-alt=\"RStudio logo\"}\n\n-   RStudio is a convenient interface for R called an **IDE** (integrated development environment), e.g. *\"I write R code in the RStudio IDE\"*\n-   RStudio is not a requirement for programming with R, but it's very commonly used by R programmers and data scientists\n:::\n:::\n\n## R vs. RStudio\n\n[![](images/02/r_vs_rstudio.png){fig-alt=\"On the left: a car engine. On the right: a car dashboard. The engine is labelled R. The dashboard is labelled RStudio.\" fig-align=\"center\" width=\"1001\"}](https://moderndive.com/1-getting-started.html)\n\n::: aside\nSource: [Modern Dive](https://moderndive.com/1-getting-started.html).\n:::\n\n## R packages\n\n::: incremental\n-   **Packages**: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data<sup>1</sup>\n\n-   As of September 2022, there are over 18,000 R packages available on **CRAN** (the Comprehensive R Archive Network)<sup>2</sup>\n\n-   We're going to work with a small (but important) subset of these!\n:::\n\n::: aside\n<sup>1</sup> Wickham and Bryan, [R Packages](https://r-pkgs.org/).\n\n<sup>2</sup> [CRAN contributed packages](https://cran.r-project.org/web/packages/).\n:::\n\n## Tour: R and RStudio\n\n![](images/02/tour-r-rstudio.png)\n\n## A short list (for now) of R essentials\n\n-   Functions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n```\n:::\n\n\n. . .\n\n-   Packages are installed with the `install.packages()` function and loaded with the `library` function, once per session:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"package_name\")\nlibrary(package_name)\n```\n:::\n\n\n## R essentials (continued)\n\n-   Columns (variables) in data frames are accessed with `$`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataframe$var_name\n```\n:::\n\n\n. . .\n\n-   Object documentation can be accessed with `?`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?mean\n```\n:::\n\n\n## tidyverse\n\n::: columns\n::: {.column width=\"50%\"}\n[![](images/02/tidyverse.png){fig-alt=\"Hex logos for dplyr, ggplot2, forcats, tibble, readr, stringr, tidyr, and purrr\"}](https://tidyverse.org)\n:::\n\n::: {.column width=\"50%\"}\n[tidyverse.org](https://www.tidyverse.org/)\n\n-   The **tidyverse** is an opinionated collection of R packages designed for data science\n-   All packages share an underlying philosophy and a common grammar\n:::\n:::\n\n# Quarto\n\n## Quarto\n\n::: incremental\n-   Fully reproducible reports -- each time you render the analysis is ran from the beginning\n-   Code goes in chunks narrative goes outside of chunks\n-   A visual editor for a familiar / Google docs-like editing experience\n:::\n\n## Tour: Quarto\n\n![](images/02/tour-quarto.png){fig-alt=\"RStudio IDE with a Quarto document, source code on the left and output on the right. Annotated to show the YAML, a link, a header, and a code chunk.\" fig-align=\"center\"}\n\n## Environments\n\n::: callout-important\nThe environment of your Quarto document is separate from the Console!\n:::\n\nRemember this, and expect it to bite you a few times as you're learning to work with Quarto!\n\n## Environments\n\n::: columns\n::: {.column width=\"50%\"}\nFirst, run the following in the console:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 2\nx * 3\n```\n:::\n\n\n<br>\n\n::: {.question .fragment}\nAll looks good, eh?\n:::\n:::\n\n::: {.column .fragment width=\"50%\"}\nThen, add the following in an R chunk in your Quarto document\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx * 3\n```\n:::\n\n\n<br>\n\n::: {.question .fragment}\nWhat happens?\nWhy the error?\n:::\n:::\n:::\n\n## How will we use Quarto?\n\n-   Every assignment / report / project / etc. is an Quarto document\n-   You'll always have a template Quarto document to start with\n-   The amount of scaffolding in the template will decrease over the semester\n\n## What's with all the hexes?\n\n![](images/02/hexes.jpeg){fig-alt=\"Hex logos for many packages\" fig-align=\"center\"}\n\n## Your turn! {.smaller}\n\n::: appex\n`ae-0-bechdel-quarto`\n\n-   [The Bechdel test](https://en.wikipedia.org/wiki/Bechdel_test) asks whether a work of fiction features at least two women who talk to each other about something other than a man, and there must be two women named characters.\n-   Go to the [course GitHub organization](https://github.com/sta199-f22-1) and clone [`ae-0-bechdel-quarto`](https://github.com/sta199-f22-1/ae-0-bechdel-quarto) to [your container](https://cmgr.oit.duke.edu/containers).\n-   Open and render the Quarto document `bechdel.qmd`, review the document, and fill in the blanks.\n:::\n\n# Toolkit: Version control and collaboration\n\n## Git and GitHub {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/02/git-logo.png){fig-alt=\"Git logo\" fig-align=\"center\" width=\"200\"}\n\n-   Git is a version control system -- like \"Track Changes\" features from Microsoft Word, on steroids\n-   It's not the only version control system, but it's a very popular one\n:::\n\n::: {.column width=\"50%\"}\n![](images/02/github-logo.png){fig-alt=\"GitHub logo\" fig-align=\"center\" width=\"200\"}\n\n-   GitHub is the home for your Git-based projects on the internet -- like DropBox but much, much better\n\n-   We will use GitHub as a platform for web hosting and collaboration (and as our course management system!)\n:::\n:::\n\n## Versioning\n\n![](images/02/lego-steps.png){fig-align=\"center\"}\n\n## Versioning\n\n### with human readable messages\n\n![](images/02/lego-steps-commit-messages.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub\n\n![](images/02/whole-game-01.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/02/whole-game-02.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/02/whole-game-03.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/02/whole-game-04.png){fig-align=\"center\"}\n\n## Git and GitHub tips {.smaller}\n\n::: incremental\n-   There are millions of git commands -- ok, that's an exaggeration, but there are a lot of them -- and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\n-   We will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line -- skip that and move on to the next resource unless you feel comfortable trying it out.\n-   There is a great resource for working with git and R: [happygitwithr.com](http://happygitwithr.com/). Some of the content in there is beyond the scope of this course, but it's a good place to look for help.\n:::\n\n## Tour: Git + GitHub\n\n-   In Lab 0 next Monday!\n-   Make sure to create a GitHub account and fill out the Getting to know you survey!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}