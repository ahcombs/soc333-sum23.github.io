{
  "hash": "2e813161efafccd980260ef13b3b4f87",
  "result": {
    "markdown": "---\ntitle: \"Data science ethics: Algorithmic bias + Data privacy\"\nsubtitle: \"Lecture 12\"\ndate: \"October 6, 2022\"\nformat: revealjs\n---\n\n\n# Warm up\n\n\n::: {.cell}\n\n:::\n\n\n## While you wait for class to begin...\n\nOpen your `ae-09` project in RStudio, render your document, and commit and push.\n\n## Announcements {.smaller}\n\n-   ...\n\n# Algorithmic bias\n\n## Two examples\n\n-   Criminal justice: [Machine Bias](https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing) (ProPublica, 2016)\n\n-   Language models: [Stochastic Parrots](https://s10251.pcdn.co/pdf/2021-bender-parrots.pdf) (Bender et. al., 2021)\n\n## Machine Bias {.smaller}\n\n2016 ProPublica article on algorithm used for rating a defendant's risk of future crime:\n\n::: columns\n::: {.column width=\"70%\"}\n> In forecasting who would re-offend, the algorithm made mistakes with black and white defendants at roughly the same rate but in very different ways.\n>\n> -   The formula was particularly likely to falsely flag black defendants as future criminals, wrongly labeling them this way at almost twice the rate as white defendants.\n>\n> -   White defendants were mislabeled as low risk more often than black defendants.\n:::\n\n::: {.column width=\"30%\"}\n![](images/11/machine-bias.png){fig-align=\"center\" width=\"800\"}\n:::\n:::\n\n::: aside\nSource: [ProPublica](https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing)\n:::\n\n## Risk score errors\n\n::: columns\n::: {.column width=\"35%\"}\n::: question\nWhat is common among the defendants who were assigned a high/low risk score for reoffending?\n:::\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"30%\"}\n![](images/11/machine-bias-petty-theft-1.png){fig-align=\"center\" width=\"300\" height=\"250\"} ![](images/11/machine-bias-petty-theft-2.png){fig-align=\"center\" width=\"300\" height=\"180\"}\n:::\n\n::: {.column width=\"30%\"}\n![](images/11/machine-bias-drug-posession-1.png){fig-align=\"center\" width=\"300\" height=\"250\"} ![](images/11/machine-bias-drug-posession-2.png){fig-align=\"center\" width=\"300\" height=\"180\"}\n:::\n:::\n\n## Risk scores\n\n::: columns\n::: {.column width=\"35%\"}\n::: question\nHow can an algorithm that doesn't use race as input data be racist?\n:::\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"60%\"}\n![](images/11/machine-bias-risk-scores.png){fig-align=\"center\" width=\"480\"}\n:::\n:::\n\n## Goggle translate\n\n![](images/11/google-translate.png){fig-align=\"center\"}\n\n::: aside\nSource: [Engadget - Google is working to remove gender bias in its translations](https://www.engadget.com/2018-12-07-google-remove-gender-bias-translations.html)\n:::\n\n## \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}