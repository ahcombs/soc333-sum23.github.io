{
  "hash": "ff4fe527569d8363926679b90c68db0c",
  "result": {
    "markdown": "---\ntitle: \"AE 06: Hotel bookings\"\ncategories: \n  - Application exercise\neditor: visual\n---\n\n\n::: callout-important\nGo to the [course GitHub organization](https://github.com/sta199-f22-1) and locate the repo titled `ae-05-YOUR_GITHUB_USERNAME` to get started.\n\nThis AE is due Sunday, Sep 26 at 11:59pm.\n:::\n\n## Type coercion\n\n-   `c(1, 1L, \"C\")`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(1, 1L, \"C\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1\" \"1\" \"C\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\n1L\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\n\"C\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"C\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#typeof(c(1, 1L, \"C\"))\n```\n:::\n\n\n-   `c(1L / 0, \"A\")`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(1L / 0, \"A\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Inf\" \"A\"  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntypeof(1L)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"integer\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"double\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(1L/0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"double\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(\"A\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#typeof(c(1L / 0, \"A\"))\n```\n:::\n\n\n-   `c(1:3, 5)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(1:3, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3 5\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntypeof(1:3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"integer\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"double\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#typeof(c(1:3, 5))\n```\n:::\n\n\n-   `c(3, \"3+\")`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(3, \"3+\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"3\"  \"3+\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntypeof(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"double\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(\"3+\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#typeof(c(3, \"3+\"))\n```\n:::\n\n\n-   `c(NA, TRUE)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(NA, TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]   NA TRUE\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntypeof(NA)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"logical\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"logical\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#typeof(c(NA, TRUE))\n```\n:::\n\n\n## Hotel bookings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(skimr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# From TidyTuesday: https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-02-11/readme.md\n\nhotels <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv\")\n```\n:::\n\n\nTake a look at the the following visualization.\nHow are the months ordered?\nWhat would be a better order?\nThen, reorder the months on the x-axis (levels of `arrival_date_month`) in a way that makes more sense.\nYou will want to use a function from the **forcats** package, see <https://forcats.tidyverse.org/reference/index.html> for inspiration and help.\n\n![](images/hotel-prices-months.png){fig-align=\"center\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels %>%\n  group_by(hotel, arrival_date_month) %>%   # group by hotel type and arrival month\n  summarise(mean_adr = mean(adr)) %>%       # calculate mean adr for each group\n  ggplot(aes(\n    x = arrival_date_month,                 # x-axis = arrival_date_month\n    y = mean_adr,                           # y-axis = mean_adr calculated above\n    group = hotel,                          # group lines by hotel type\n    color = hotel)                          # and color by hotel type\n  ) +\n  geom_line() +                             # use lines to represent data\n  theme_minimal() +                         # use a minimal theme\n  labs(\n    x = \"Arrival month\",                 # customize labels\n    y = \"Mean ADR (average daily rate)\",\n    title = \"Comparison of resort and city hotel prices across months\",\n    subtitle = \"Resort hotel prices soar in the summer while ciry hotel prices remain relatively constant throughout the year\",\n    color = \"Hotel type\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'hotel'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](ae-06-hotels-types-classes-A_files/figure-html/label-me-1.png){width=672}\n:::\n:::\n\n\n**Stretch goal:** If you finish the above task before time is up, change the y-axis label so the values are shown with dollar signs, e.g. \\$80 instead of 80.\nYou will want to use a function from the **scales** package, see <https://scales.r-lib.org/reference/index.html> for inspiration and help.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n",
    "supporting": [
      "ae-06-hotels-types-classes-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}