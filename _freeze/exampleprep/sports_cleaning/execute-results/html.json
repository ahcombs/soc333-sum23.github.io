{
  "hash": "67c57ea78a9662afc9082c4cf72bcccd",
  "result": {
    "markdown": "This file cleans data downloaded from the Equity in Athletics Data Analysis initiative, managed by the U.S. Department of Education. \n\n[https://ope.ed.gov/athletics/#/](https://ope.ed.gov/athletics/#/)\n\nI downloaded all available equity data for Duke and UNC from 2003 through 2021.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.2          ✔ purrr   1.0.1     \n✔ tibble  3.2.1          ✔ dplyr   1.1.1.9000\n✔ tidyr   1.3.0          ✔ stringr 1.5.0     \n✔ readr   2.1.4          ✔ forcats 1.0.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\nGeneral format information: everything is in separate files, but the format is the same (1 row per school per year).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load and transform the data on number of male and female coaches for mens and womens teams\ncommoncols <- c(\"Survey Year\", \"UNITID\", \"Institution Name\", \"OPE ID\", \"State CD\", \"Classification Name\", \"Classification Other\", \"Sanction Code\", \"Sanction Name\", \"Male Undergraduates\", \"Female Undergraduates\", \"Type of Varsity Sports Teams\")\n\ncoaches <- tibble()\ncoachfiles <- list.files(\"raw/\")[grepl(\"Coaches_\", list.files(\"raw/\"))]\nfor(f in coachfiles){\n  tomerge <- read_csv(paste0(\"raw/\", f), show_col_types = FALSE) |> \n    # we can calculate totals--so drop them; they complicate merging\n    select(-contains(\"Total\")) |> \n    pivot_longer(names_to = c(\"sport\", \"coachgender\", \"coachlevel\", \"assignstatus\"),\n                 names_pattern = \"(.*) ([[:alpha:]]*ale) (.*) Coach (.T)\",\n                 values_to = \"ncoaches\",\n                 cols = -commoncols\n    ) |> \n    filter(!is.na(ncoaches)) |> \n    rename(teamgender = \"Type of Varsity Sports Teams\",\n           school = \"Institution Name\",\n           year = \"Survey Year\",\n           maleug = \"Male Undergraduates\",\n           femaleug = \"Female Undergraduates\",\n           division = \"Classification Name\") |> \n    select(school, year, division, teamgender, sport, coachgender, coachlevel, assignstatus, ncoaches) |> \n    mutate(teamgender = ifelse(teamgender == \"Men's Team\", \"men\", \"women\"),\n           coachgender = ifelse(coachgender == \"Male\", \"men\", \"women\"),\n           coachlevel = ifelse(coachlevel == \"Assistant\", \"assistant\", \"head\"),\n           school = ifelse(school == \"Duke University\", \"Duke\", \"UNC\"))\n  \n  if(nrow(coaches) == 0){\n    coaches <- tomerge\n  } else {\n    coaches <- full_join(coaches, tomerge) \n  }\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %>% select(commoncols)\n\n  # Now:\n  data %>% select(all_of(commoncols))\n\nSee <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(school, year, division, teamgender, sport,\ncoachgender, coachlevel, assignstatus, ncoaches)`\nJoining with `by = join_by(school, year, division, teamgender, sport,\ncoachgender, coachlevel, assignstatus, ncoaches)`\nJoining with `by = join_by(school, year, division, teamgender, sport,\ncoachgender, coachlevel, assignstatus, ncoaches)`\n```\n:::\n\n```{.r .cell-code}\n# Load and transform data on number of athletes\nathletes <- read_csv(\"raw/Athletics_Participation_All_Sports_and_Men's_Women's_and_Coed_Teams_2003_2004_2005_2006_2007_2008_2009_2010_2011_2012_2013_2014_2015_2016_2017_2018_2019_2020_2021.csv\", \n                          show_col_types = FALSE) |> \n  select(-contains(\"Coed\"),\n         -contains(\"Total\")) |> \n  pivot_longer(names_to = c(\"sport\", \"teamgender\"),\n               names_pattern = \"(.*) ([[:alpha:]]*en)'s .*\",\n               values_to = \"nplayers\",\n               cols = -any_of(commoncols)) |> \n  rename(\n    school = \"Institution Name\",\n    year = \"Survey Year\",\n    maleug = \"Male Undergraduates\",\n    femaleug = \"Female Undergraduates\",\n    division = \"Classification Name\") |> \n  filter(!is.na(nplayers)) |> \n  mutate(teamgender = tolower(teamgender),\n         school = ifelse(school == \"Duke University\", \"Duke\", \"UNC\")) |> \n  select(school, year, division, sport, teamgender, nplayers) |> \n  filter(sport != \"Unduplicated Count\")\n\n\n# Merge coach data and athletes data\nnpeople <- full_join(coaches, athletes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(school, year, division, teamgender, sport)`\n```\n:::\n\n```{.r .cell-code}\nsaveRDS(npeople, file = \"sports_npeople.rds\")\nsaveRDS(npeople, file = \"../slides/data/sports_npeople.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load and transform the data on average salaries for coaches on mens and womens teams\n\ncoachsalaries <- tibble()\nsalaryfiles <- list.files(\"raw/\")[grepl(\"Salaries\", list.files(\"raw/\"))]\nfor(f in salaryfiles){\n  coachtype <- str_extract(f, \"^[[:alpha:]]*\")\n  tomerge <- read_csv(paste0(\"raw/\", f), show_col_types = FALSE) |> \n    select(-contains(\"Coed\"), -contains(\"Total\")) |> \n    pivot_longer(names_to = c(\"teamgender\", \"population\"),\n                 names_pattern = \"(.*)'s Team .* per (.*)\",\n                 values_to = \"avsalary\",\n                 cols = c(-any_of(commoncols), -contains(\"Number\"))) |> \n    mutate(population = ifelse(population == \"FTE\", paste0(coachtype, \" FTE\"), population))\n  \n  if(nrow(coachsalaries) == 0){\n    coachsalaries <- tomerge\n  } else {\n    coachsalaries <- full_join(coachsalaries, tomerge) \n  }\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(`Survey Year`, UNITID, `OPE ID`, `Institution Name`,\n`State CD`, `Classification Name`, `Classification Other`, `Sanction Code`,\n`Sanction Name`, `Male Undergraduates`, `Female Undergraduates`, `Men's Team\nNumber of FTEs Included in Average`, `Women's Team Number of FTEs Included in\nAverage`, teamgender, population, avsalary)`\n```\n:::\n\n```{.r .cell-code}\ncoachsalaries <- coachsalaries |> \n    rename(men_fte_n = \"Men's Team Number of FTEs Included in Average\",\n           women_fte_n = \"Women's Team Number of FTEs Included in Average\",\n           men_asstcoach_n = \"Men's Team Number of Assistant Coaches Included in Average\",\n           women_asstcoach_n = \"Women's Team Number of Assistant Coaches Included in Average\",\n           men_headcoach_n = \"Men's Team Number of Head Coaches Included in Average\",\n           women_headcoach_n = \"Women's Team Number of Head Coaches Included in Average\") |> \n    mutate(ncoaches = case_when(teamgender == \"Men\" & str_detect(population, \"FTE\") ~ men_fte_n,\n                                teamgender == \"Women\" & str_detect(population, \"FTE\") ~ women_fte_n,\n                                teamgender == \"Men\" & population == \"Assistant Coach\" ~ men_asstcoach_n,\n                                teamgender == \"Women\" & population == \"Assistant Coach\" ~ women_asstcoach_n,\n                                teamgender == \"Men\" & population == \"Head Coach\" ~ men_headcoach_n,\n                                teamgender == \"Women\" & population == \"Head Coach\" ~ women_headcoach_n,\n    )) |> \n  mutate(coachlevel = tolower(str_extract(population, \"^[[:alpha:]]*\")),\n         emptype = tolower(str_extract(population, \"[[:alpha:]]*$\"))) |> \n  rename(\n    school = \"Institution Name\",\n    year = \"Survey Year\",\n    maleug = \"Male Undergraduates\",\n    femaleug = \"Female Undergraduates\",\n    division = \"Classification Name\") |> \n  select(school, year, division, teamgender, coachlevel, emptype, avsalary, ncoaches) |> \n  mutate(teamgender = tolower(teamgender),\n         school = ifelse(school == \"Duke University\", \"Duke\", \"UNC\"))\n\nsaveRDS(coachsalaries, file = \"../slides/data/sports_coachsalaries.rds\")\nsaveRDS(coachsalaries, file = \"sports_coachsalaries.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load and transform data on aid given to student athletes and recruiting expenses (whole athletic program)\naid <- tibble()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load and transform data on expenses and revenues (sport-specific)\nmoney <- tibble()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}