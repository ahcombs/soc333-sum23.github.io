{
  "hash": "1aca4cd09a366e9c376d579b56e3858d",
  "result": {
    "markdown": "---\ntitle: \"Plotting one variable\"\nformat: html\neditor: visual\n---\n\n\n# Exercise: Plotting a single variable\n\nToday's exercise will use a new dataset: the [Youth Risk Behavior Surveillance System](https://www.openintro.org/data/index.php?data=yrbss) data (`yrbss` in R).\nThis data set contains information from surveys of high school aged kids conducted between 1991 and 2013 across the United States.\nIt contains demographic information and self-reported information on a number of different health and risk-related activities.\n\n## Setup: run this first!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(openintro)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n```\n:::\n:::\n\n\n## Q1: Getting bearings with this data\n\nFirst, we have to get an idea of what's in this new data set!\nSkim over [the dataset documentation](https://www.openintro.org/data/index.php?data=yrbss).\nThen run `glimpse` on `yrbss`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(yrbss)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 13,583\nColumns: 13\n$ age                      <int> 14, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 1…\n$ gender                   <chr> \"female\", \"female\", \"female\", \"female\", \"fema…\n$ grade                    <chr> \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", \"9\", …\n$ hispanic                 <chr> \"not\", \"not\", \"hispanic\", \"not\", \"not\", \"not\"…\n$ race                     <chr> \"Black or African American\", \"Black or Africa…\n$ height                   <dbl> NA, NA, 1.73, 1.60, 1.50, 1.57, 1.65, 1.88, 1…\n$ weight                   <dbl> NA, NA, 84.37, 55.79, 46.72, 67.13, 131.54, 7…\n$ helmet_12m               <chr> \"never\", \"never\", \"never\", \"never\", \"did not …\n$ text_while_driving_30d   <chr> \"0\", NA, \"30\", \"0\", \"did not drive\", \"did not…\n$ physically_active_7d     <int> 4, 2, 7, 0, 2, 1, 4, 4, 5, 0, 0, 0, 4, 7, 7, …\n$ hours_tv_per_school_day  <chr> \"5+\", \"5+\", \"5+\", \"2\", \"3\", \"5+\", \"5+\", \"5+\",…\n$ strength_training_7d     <int> 0, 0, 0, 0, 1, 0, 2, 0, 3, 0, 3, 0, 0, 7, 7, …\n$ school_night_hours_sleep <chr> \"8\", \"6\", \"<5\", \"6\", \"9\", \"8\", \"9\", \"6\", \"<5\"…\n```\n:::\n:::\n\n\n## Q2: Helmets\n\nLet's look first at a categorical variable: `helmet_12m`.\nThis records how often the respondent says that they wore a helmet while riding their bike in the last 12 months.\n\n#### a. Review: What are the possible response options for this variable? What subtype of categorical variable is it (nominal, ordinal, binary)?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(yrbss$helmet_12m)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"never\"        \"did not ride\" NA             \"sometimes\"    \"always\"      \n[6] \"rarely\"       \"most of time\"\n```\n:::\n:::\n\n\nI would call this an ordinal variable.\nIts response options are categories, but they have an innate ordering.\n\n#### b. Review: Make a table showing how many people are in each category for `helmet_12m`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(yrbss$helmet_12m)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n      always did not ride most of time        never       rarely    sometimes \n         399         4549          293         6977          713          341 \n```\n:::\n:::\n\n\n#### c. Make a bar plot of this variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = yrbss, aes(x = helmet_12m)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](ex-6-06-solutions_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n#### d. What's the overall, one-sentence story here? What would you say if someone asked you what the research says about teens' use of bike helmets?\n\nA lot of kids don't ride bikes, but most of the ones who do don't ever wear helmets.\n\n(your brain is important wear your helmet!)\n\n#### e. What is a way this plot could be improved/made clearer/made easier to interpret?\n\nIt would help if the categories were in order, least to most frequent.\nWe could also add better axis labels and drop the NA responses.\n\n## Q3: Strength training\n\nNow let's look at a numeric variable: `strength_training_7d`.\nThis is the number of days the respondent said they did strength training in the week before they took the survey.\n\n#### a. Make a histogram of this variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = yrbss, aes(x = strength_training_7d)) + \n  geom_histogram(binwidth = 1) + \n  labs(x = \"Weekly strength training days\",\n       y = \"Number of students\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1176 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ex-6-06-solutions_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n#### b. Edit your code above to make there be one bin per day. In other words, we want the width of each bin to be 1. Then rerun your plot.\n\n*Hint: use the `binwidth` or `bins` options for `geom_histogram`*\n\n#### c. Edit your code above to add more meaningful labels to the axes. Then rerun your plot.\n\n## Extra credit\n\n### Q4: TV\n\n#### a. Create a plot showing the distribution of how many hours of TV students report watching on school days.\n\n*Hint: this is measured in hours, so it seems like it should be a numeric variable--but is that how it's treated in the data? Look back at the `glimpse()` output and/or find the response options of the variable to see.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyrbss |> \n  mutate(hours_tv_per_school_day = factor(hours_tv_per_school_day, \n                                          levels = c(\"do not watch\", \"<1\", \"1\", \"2\", \"3\", \"4\", \"5+\"))) |> \n  filter(!is.na(hours_tv_per_school_day)) |> \n  ggplot(aes(x = hours_tv_per_school_day)) +\n  geom_bar() + \n  labs(x = \"Hours\",\n       y = \"\",\n       title = \"Distribution of amount of TV students watch on school nights\")\n```\n\n::: {.cell-output-display}\n![](ex-6-06-solutions_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n#### b. Edit your code in (a) to add better axis labels and a title.\n\n#### c. Edit your code in (a) to drop the NA values before plotting.\n\n#### d. Edit your code in (a) to put the bar for \"do not watch\" first, to the left of \"\\<1\".\n\n*Hint: You'll need to change the order of the variable levels in the data frame before you plot the data. Use the template code below--edit as necessary and paste it into the correct place in your own code.*\n\n*Additionally: some of these values are numbers, but even so, the variable as a whole is treated as categorical--this means all values need quotation marks around them, even the numbers. You can tell this from the `glimpse()` output: the numbers for this variable are in quotes there, while they are not for the strictly numeric variables like height.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutate(yrbss, \n       hours_tv_per_school_day = factor(hours_tv_per_school_day, \n                                        levels = XXXX))\n```\n:::\n",
    "supporting": [
      "ex-6-06-solutions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}