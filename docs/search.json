[
  {
    "objectID": "labs/lab-2.html",
    "href": "labs/lab-2.html",
    "title": "Lab 2 - wrangling-data",
    "section": "",
    "text": "Important\n\n\n\nThis lab is due Monday, Sep 19 at 11:59pm."
  },
  {
    "objectID": "labs/lab-2.html#packages",
    "href": "labs/lab-2.html#packages",
    "title": "Lab 2 - wrangling-data",
    "section": "Packages",
    "text": "Packages\nWe will use the tidyverse package to create and customize plots in R.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "labs/lab-2.html#data",
    "href": "labs/lab-2.html#data",
    "title": "Lab 2 - wrangling-data",
    "section": "Data",
    "text": "Data\n\nThe Greatest Crossover Event in the History of STA199 Labs\nThis data was originally collected for a FiveThirtyEight article. The version of the avengers data we will work with here can be uploaded from the avengers.csv file.\nThis dataset includes information about characters across the entire Marvel Cinematic Universe (MCU), so some of the names will be familiar if you are a fan of the films or comics. Don’t worry if you aren’t a Marvel fan; no background knowledge is needed to successfully complete this lab!\nWe will focus on the following variables in this lab:\n\n\n\nSee FiveThirtyEight’s GitHub repo for the full codebook."
  },
  {
    "objectID": "labs/lab-1.html",
    "href": "labs/lab-1.html",
    "title": "Lab 1 - Data visualization",
    "section": "",
    "text": "Important\n\n\n\nThis lab is due Friday, Sep 16 at 11:59pm."
  },
  {
    "objectID": "labs/lab-1.html#packages",
    "href": "labs/lab-1.html#packages",
    "title": "Lab 1 - Data visualization",
    "section": "Packages",
    "text": "Packages\nWe will use the tidyverse package to create and customize plots in R.\n\nlibrary(tidyverse)\nlibrary(viridis)"
  },
  {
    "objectID": "labs/lab-1.html#data-lets-take-a-trip-to-the-midwest",
    "href": "labs/lab-1.html#data-lets-take-a-trip-to-the-midwest",
    "title": "Lab 1 - Data visualization",
    "section": "Data: Let’s take a trip to the Midwest",
    "text": "Data: Let’s take a trip to the Midwest\nThe data in this lab is in the midwest data frame. It is part of the ggplot2 R package, so the midwest data set is automatically loaded when you load the tidyverse package.\nThe data contains demographic characteristics of counties in the Midwest region of the United States.\nBecause the data set is part of the ggplot2 package, you can read documentation for the data set, including variable definitions by typing ?midwest in the console."
  },
  {
    "objectID": "labs/lab-0.html",
    "href": "labs/lab-0.html",
    "title": "Lab 0 - Hello R!",
    "section": "",
    "text": "This lab will introduce you to the course computing workflow. The main goal is to reinforce our demo of R and RStudio, which we will be using throughout the course both to learn the statistical concepts discussed in the course and to analyze real data and come to informed conclusions.\nAn additional goal is to reinforce Git and GitHub, the collaboration and version control system that we will be using throughout the course.\nAs the labs progress, you are encouraged to explore beyond what the labs dictate; a willingness to experiment will make you a much better programmer. Before we get to that stage, however, you need to build some basic fluency in R. Today we begin with the fundamental building blocks of R and RStudio: the interface, reading in data, and basic commands.\nTo make versioning simpler, this and the next lab are solo labs. In the future, you’ll learn about collaborating on GitHub and producing a single lab report for your lab team, but for now, concentrate on getting the basics down.\nBy the end of the lab, you will…"
  },
  {
    "objectID": "labs/lab-0.html#log-in-to-rstudio",
    "href": "labs/lab-0.html#log-in-to-rstudio",
    "title": "Lab 0 - Hello R!",
    "section": "Log in to RStudio",
    "text": "Log in to RStudio\n\nGo to https://cmgr.oit.duke.edu/containers and login with your Duke NetID and Password.\nClick STA198-199 to log into the Docker container. You should now see the RStudio environment.\n\n\n\n\n\n\n\nWarning\n\n\n\nIf you haven’t yet done so, you will need to reserve a container for STA198-199 first."
  },
  {
    "objectID": "labs/lab-0.html#set-up-your-ssh-key",
    "href": "labs/lab-0.html#set-up-your-ssh-key",
    "title": "Lab 0 - Hello R!",
    "section": "Set up your SSH key",
    "text": "Set up your SSH key\nYou will authenticate GitHub using SSH. Below are an outline of the authentication steps; you are encouraged to follow along as your TA demonstrates the steps.\n\n\n\n\n\n\nNote\n\n\n\nYou only need to do this authentication process one time on a single system.\n\n\n\nType credentials::ssh_setup_github() into your console.\nR will ask “No SSH key found. Generate one now?” You should click 1 for yes.\nYou will generate a key. It will begin with “ssh-rsa….” R will then ask “Would you like to open a browser now?” You should click 1 for yes.\nYou may be asked to provide your GitHub username and password to log into GitHub. After entering this information, you should paste the key in and give it a name. You might name it in a way that indicates where the key will be used, e.g., sta199).\n\nYou can find more detailed instructions here if you’re interested."
  },
  {
    "objectID": "labs/lab-0.html#configure-git",
    "href": "labs/lab-0.html#configure-git",
    "title": "Lab 0 - Hello R!",
    "section": "Configure Git",
    "text": "Configure Git\nThere is one more thing we need to do before getting started on the assignment. Specifically, we need to configure your git so that RStudio can communicate with GitHub. This requires two pieces of information: your name and email address.\nTo do so, you will use the use_git_config() function from the usethis package. (And we also need to install a package called gert just for this step.)\nType the following lines of code in the console in RStudio filling in your name and the email address associated with your GitHub account.\n\ndevtools::install_github(\"r-lib/gert\")\n\nusethis::use_git_config(\n  user.name = \"Your name\", \n  user.email = \"Email associated with your GitHub account\"\n  )\n\nFor example, mine would be\n\ndevtools::install_github(\"r-lib/gert\")\n\nusethis::use_git_config(\n  user.name = \"Mine Çetinkaya-Rundel\", \n  user.email = \"cetinkaya.mine@gmail.com\"\n  )\n\nYou are now ready interact with GitHub via RStudio!"
  },
  {
    "objectID": "labs/lab-0.html#clone-the-repo-start-new-rstudio-project",
    "href": "labs/lab-0.html#clone-the-repo-start-new-rstudio-project",
    "title": "Lab 0 - Hello R!",
    "section": "Clone the repo & start new RStudio project",
    "text": "Clone the repo & start new RStudio project\n\nGo to the course organization at github.com/sta199-f22-1 organization on GitHub. Click on the repo with the prefix lab-0. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-0-datasaurus.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab."
  },
  {
    "objectID": "labs/lab-0.html#r-and-r-studio",
    "href": "labs/lab-0.html#r-and-r-studio",
    "title": "Lab 0 - Hello R!",
    "section": "R and R Studio",
    "text": "R and R Studio\nBelow are the components of the RStudio IDE.\n\nBelow are the components of a Quarto (.qmd) file."
  },
  {
    "objectID": "labs/lab-0.html#yaml",
    "href": "labs/lab-0.html#yaml",
    "title": "Lab 0 - Hello R!",
    "section": "YAML",
    "text": "YAML\nThe top portion of your R Markdown file (between the three dashed lines) is called YAML. It stands for “YAML Ain’t Markup Language”. It is a human friendly data serialization standard for all programming languages. All you need to know is that this area is called the YAML (we will refer to it as such) and that it contains meta information about your document.\n\n\n\n\n\n\nImportant\n\n\n\nOpen the Quarto (.qmd) file in your project, change the author name to your name, and render the document. Examine the rendered document."
  },
  {
    "objectID": "labs/lab-0.html#committing-changes",
    "href": "labs/lab-0.html#committing-changes",
    "title": "Lab 0 - Hello R!",
    "section": "Committing changes",
    "text": "Committing changes\nNow, go to the Git pane in your RStudio instance. This will be in the top right hand corner in a separate tab.\nIf you have made changes to your Quarto (.qmd) file, you should see it listed here. Click on it to select it in this list and then click on Diff. This shows you the difference between the last committed state of the document and its current state including changes. You should see deletions in red and additions in green.\nIf you’re happy with these changes, we’ll prepare the changes to be pushed to your remote repository. First, stage your changes by checking the appropriate box on the files you want to prepare. Next, write a meaningful commit message (for instance, “updated author name”) in the Commit message box. Finally, click Commit. Note that every commit needs to have a commit message associated with it.\nYou don’t have to commit after every change, as this would get quite tedious. You should commit states that are meaningful to you for inspection, comparison, or restoration.\nIn the first few assignments we will tell you exactly when to commit and in some cases, what commit message to use. As the semester progresses we will let you make these decisions.\nNow let’s make sure all the changes went to GitHub. Go to your GitHub repo and refresh the page. You should see your commit message next to the updated files. If you see this, all your changes are on GitHub and you’re good to go!"
  },
  {
    "objectID": "labs/lab-0.html#push-changes",
    "href": "labs/lab-0.html#push-changes",
    "title": "Lab 0 - Hello R!",
    "section": "Push changes",
    "text": "Push changes\nNow that you have made an update and committed this change, it’s time to push these changes to your repo on GitHub.\nIn order to push your changes to GitHub, you must have staged your commit to be pushed. click on Push."
  },
  {
    "objectID": "labs/lab-0.html#data-visualization-and-summary",
    "href": "labs/lab-0.html#data-visualization-and-summary",
    "title": "Lab 0 - Hello R!",
    "section": "Data visualization and summary",
    "text": "Data visualization and summary\n\nPlot y vs. x for the dino dataset. Then, calculate the correlation coefficient between x and y for this dataset.\n\nBelow is the code you will need to complete this exercise. Basically, the answer is already given, but you need to include relevant bits in your document and successfully render it and view the results.\nStart with the datasaurus_dozen and pipe it into the filter function to filter for observations where dataset == \"dino\". Store the resulting filtered data frame as a new data frame called dino_data.\n\ndino_data <- datasaurus_dozen |>\n  filter(dataset == \"dino\")\n\nThere is a lot going on here, so let’s slow down and unpack it a bit.\nFirst, the pipe operator: |>, takes what comes before it and sends it as the first argument to what comes after it. So here, we’re saying filter the datasaurus_dozen data frame for observations where dataset == \"dino\".\nSecond, the assignment operator: <-, assigns the name dino_data to the filtered data frame.\nNext, we need to visualize these data. We will use the ggplot function for this. Its first argument is the data you’re visualizing. Next we define the aesthetic mappings. In other words, the columns of the data that get mapped to certain aesthetic features of the plot, e.g. the x axis will represent the variable called x and the y axis will represent the variable called y. Then, we add another layer to this plot where we define which geometric shapes we want to use to represent each observation in the data. In this case we want these to be points, hence geom_point.\n\nggplot(data = dino_data, mapping = aes(x = x, y = y)) +\n  geom_point()\n\nFor the second part of this exercise, we need to calculate a summary statistic: the correlation coefficient. Correlation coefficient, often referred to as \\(r\\) in statistics, measures the linear association between two variables. You will see that some of the pairs of variables we plot do not have a linear relationship between them. This is exactly why we want to visualize first: visualize to assess the form of the relationship, and calculate \\(r\\) only if relevant. In this case, calculating a correlation coefficient really doesn’t make sense since the relationship between x and y is definitely not linear (it’s dinosaurial)!\nFor illustrative purposes only, let’s calculate the correlation coefficient between x and y.\n\n\n\n\n\n\nNote\n\n\n\nStart with `dino_data` and calculate a summary statistic that we will call `r` as the `cor`relation between `x` and `y`.\n\n\n\ndino_data |>\n  summarize(r = cor(x, y))\n\n\nThis is a good place to pause, render, and commit changes with the commit message “Added answer for Ex 2.”\nThen, push these changes when you’re done.\n\n\nPlot y vs. x for the circle dataset. You can (and should) reuse code we introduced above, just replace the dataset name with the desired dataset. Then, calculate the correlation coefficient between x and y for this dataset. How does this value compare to the r of dino?\n\n\nThis is another good place to pause, render, and commit changes with the commit message “Added answer for Ex 3.”\nThen, push these changes when you’re done.\n\n\nPlot y vs. x for the star dataset. You can (and should) reuse code we introduced above, just replace the dataset name with the desired dataset. Then, calculate the correlation coefficient between x and y for this dataset. How does this value compare to the r of dino?\n\n\nYou should pause again, render, commit changes with the commit message “Added answer for Ex 4”.\nThen, push.\n\nFinally, let’s plot all datasets at once. In order to do this we will make use of faceting, given by the code below:\n\n\n\n\n\n\nNote\n\n\n\nFacet by the dataset variable, placing the plots in a 3 column grid, and don’t add a legend.\n\n\n\nggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+\n  geom_point()+\n  facet_wrap(~ dataset, ncol = 3) +\n  theme(legend.position = \"none\")\n\nAnd we can use the group_by function to generate all the summary correlation coefficients. We’ll go through these functions next week when we learn about data wrangling.\n\ndatasaurus_dozen |>\n  group_by(dataset) |>\n  summarize(r = cor(x, y)) \n\n\nInclude the faceted plot and the summary of the correlation coefficients in your lab write-up by including relevant code in R chunks (and give them appropriate labels). In the narrative below the code chunks, briefly comment on what you notice about the plots and the correlations between x and y values within each of them (one or two sentences is fine!).\n\nYou’re done with the data analysis exercises, but we’d like to do one more thing to customize the look of the report."
  },
  {
    "objectID": "labs/lab-0.html#resize-your-figures",
    "href": "labs/lab-0.html#resize-your-figures",
    "title": "Lab 0 - Hello R!",
    "section": "Resize your figures",
    "text": "Resize your figures\nWe can customize the output from a particular R chunk by including options in the header that will override any global settings.\n\nIn the R chunks you wrote for Exercises 2-5, customize the settings by modifying the options in the R chunks used to create those figures.\n\nFor Exercises 2, 3, and 4, we want square figures. We can use fig.height and fig.width in the options to adjust the height and width of figures. Modify the chunks in Exercises 2-4 to be as follows:\n\n```{r}\n#| label: ex2-chunk-label\n#| fig-height: 5\n#| fig-width: 5\n\n# Your code that created the figure\n```\n\nFor Exercise 5, modify your figure to have fig-height of 10 and fig-width of 6.\nNow, save and render.\nOnce you’ve created this PDF file, you’re done!\n\nCommit all remaining changes with the commit message “Done with Lab 1!”.\nThen push."
  },
  {
    "objectID": "course-links.html",
    "href": "course-links.html",
    "title": "Useful links",
    "section": "",
    "text": "RStudio containers\n🔗 on Duke Container Manager\n\n\n\n\nCourse GitHub organization\n🔗 on GitHub\n\n\nGradescope\n🔗 on Sakai\n\n\nGradebook\n🔗 on Sakai\n\n\nOffice hours\n🔗 on Google docs\n\n\nClass recording request form\n🔗 on Google forms\n\n\nTexbooks\n🔗 R for Data Science\n🔗 Introduction to Modern Statistics\n\n\nPackage documentation\n🔗 ggplot2: ggplot2.tidyverse.org\n🔗 dplyr: dplyr.tidyverse.org"
  },
  {
    "objectID": "hw/hw-1.html",
    "href": "hw/hw-1.html",
    "title": "HW 1 - Data visualization",
    "section": "",
    "text": "Important\n\n\n\nThis homework is due Thursday, Sep 15 at 11:59pm."
  },
  {
    "objectID": "hw/hw-1.html#packages",
    "href": "hw/hw-1.html#packages",
    "title": "HW 1 - Data visualization",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(openintro)"
  },
  {
    "objectID": "hw/hw-1.html#guidelines-tips",
    "href": "hw/hw-1.html#guidelines-tips",
    "title": "HW 1 - Data visualization",
    "section": "Guidelines + tips",
    "text": "Guidelines + tips\nAs we’ve discussed in lecture, your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nRemember that continuing to develop a sound workflow for reproducible data analysis is important as you complete this homework and other assignments in this course. There will be periodic reminders in this assignment to remind you to knit, commit, and push your changes to GithHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment.\n\n\n\n\n\n\nNote\n\n\n\nNote: Do not let R output answer the question for you unless the question specifically asks for just a plot. For example, if the question asks for the number of columns in the data set, please type out the number of columns. You are subject to lose points if you do not."
  },
  {
    "objectID": "hw/hw-1.html#workflow-formatting",
    "href": "hw/hw-1.html#workflow-formatting",
    "title": "HW 1 - Data visualization",
    "section": "Workflow + formatting",
    "text": "Workflow + formatting\nMake sure to\n\nUpdate author name on your document.\nLabel all code chunks informatively and concisely.\nFollow the Tidyverse code style guidelines.\nMake at least 3 commits.\nResize figures where needed, avoid tiny or huge plots.\nTurn in an organized, well formatted document."
  },
  {
    "objectID": "hw/hw-1.html#data-1-duke-forest-houses",
    "href": "hw/hw-1.html#data-1-duke-forest-houses",
    "title": "HW 1 - Data visualization",
    "section": "Data 1: Duke Forest houses",
    "text": "Data 1: Duke Forest houses\n\n\n\n\n\n\nNote\n\n\n\nUse this dataset for Exercises 1 and 2.\n\n\nFor the following two exercises you will work with data on houses that were sold in the Duke Forest neighborhood of Durham, NC in November 2020. The duke_forest dataset comes from the openintro package. You can see a list of the variables on the package website or by running ?duke_forest in your console."
  },
  {
    "objectID": "hw/hw-1.html#exercise-1",
    "href": "hw/hw-1.html#exercise-1",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\nSuppose you’re helping some family friends who are looking to buy a house in Duke Forest. As they browse Zillow listings, they realize some houses have garages and others don’t, and they wonder: Does having a garage make a difference?\nLuckily, you can help them answer this question with data visualization!\n\nMake histograms of the prices of houses in Duke Forest based on whether they have a garage.\n\nIn order to do this, you will first need to create a new variable called garage (with levels \"Garage\" and \"No garage\").\nBelow is the code for creating this new variable. Here, we mutate() the duke_forest data frame to add a new variable called garage which takes the value \"Garage\" if the text string \"Garage\" is detected in the parking variable and takes the test string \"No garage\" if not.\n\n\n\nduke_forest |>\n  mutate(garage = if_else(str_detect(parking, \"Garage\"),   \"Garage\", \"No garage\"))\n\n\nThen, facet by garage and use different colors for the two facets.\nChoose an appropriate binwidth and decide whether a legend is needed, and turn it off if not.\nInclude informative title and axis labels.\nFinally, include a brief (2-3 sentence) narrative comparing the distributions of prices of Duke Forest houses that do and don’t have garages. Your narrative should touch on whether having a garage “makes a difference” in terms of the price of the house.\n\n\nNow is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceding."
  },
  {
    "objectID": "hw/hw-1.html#exercise-2",
    "href": "hw/hw-1.html#exercise-2",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\nIt’s expected that within any given marker larger houses will be priced higher. It’s also expected that the age of the house will have an effect on the price. However in some markets new houses might be more expensive while in others new construction might mean “no character” and hence be less expensive. So your family friends ask: “In Duke Forest, do houses that are bigger and more expensive tend to be newer ones than those that are smaller and cheaper?”\nOnce again, data visualization skills to the rescue!\n\nCreate a scatter plot to exploring the relationship between price and area, conditioning for year_built.\nUse geom_smooth() with the argument se = FALSE to add a smooth curve fit to the data and color the points by year_built.\nInclude informative title, axis, and legend labels.\nDiscuss each of the following claims (1-2 sentences per claim). Your discussion should touch on specific things you observe in your plot as evidence for or against the claims.\n\nClaim 1: Larger houses are priced higher.\nClaim 2: Newer houses are priced higher.\nClaim 3: Bigger and more expensive houses tend to be newer ones than smaller and cheaper ones.\n\n\n\nNow is a good time to render, commit, and push.\nMake sure that you commit and push all changed documents and your Git pane is completely empty before proceding."
  },
  {
    "objectID": "hw/hw-1.html#data-2-brfss",
    "href": "hw/hw-1.html#data-2-brfss",
    "title": "HW 1 - Data visualization",
    "section": "Data 2: BRFSS",
    "text": "Data 2: BRFSS\n\n\n\n\n\n\nNote\n\n\n\nUse this dataset for Exercises 3 to 5.\n\n\n\nThe Behavioral Risk Factor Surveillance System (BRFSS) is the nation’s premier system of health-related telephone surveys that collect state data about U.S. residents regarding their health-related risk behaviors, chronic health conditions, and use of preventive services. Established in 1984 with 15 states, BRFSS now collects data in all 50 states as well as the District of Columbia and three U.S. territories. BRFSS completes more than 400,000 adult interviews each year, making it the largest continuously conducted health survey system in the world.\nSource: cdc.gov/brfss\n\nIn the following exercises we will work with data from the 2020 BRFSS survey. The originally come from here, though we will work with a random sample of responses and a small number of variables from the data provided. These have already been sampled for you and the dataset you’ll use can be found in the data folder of your repo. It’s called brfss.csv.\n\nbrfss <- read_csv(\"data/brfss.csv\")"
  },
  {
    "objectID": "hw/hw-1.html#exercise-3",
    "href": "hw/hw-1.html#exercise-3",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 3",
    "text": "Exercise 3\n\nHow many rows are in the brfss dataset? What does each row represent?\nHow many columns are in the brfss dataset? Indicate the type of each variable.\nInclude the code and resulting output used to support your answer.\n\n\n Now is a good time to render, commit, and push."
  },
  {
    "objectID": "hw/hw-1.html#exercise-4",
    "href": "hw/hw-1.html#exercise-4",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 4",
    "text": "Exercise 4\nDo people who smoke more tend to have worse health conditions?\n\nUse a segmented bar chart to visualize the relationship between smoking (smoke_freq) and general health (general_health). Decide on which variable to represent with bars and which variable to fill the color of the bars by.\nPay attention to the order of the bars and, if need be, use the fct_relevel function to reorder the levels of the variables.\n\nBelow is sample code for releveling general_health. Here we first convert general_health to a factor (how R stores categorical data) and then order the levels from Excellent to Poor.\n\n\n\nbrfss |>\n  mutate(\n    general_health = as.factor(general_health),\n    general_health = fct_relevel(general_health, \"Excellent\", \"Very good\", \"Good\", \"Fair\", \"Poor\")\n  )\n\n\nInclude informative title, axis, and legend labels.\nComment on the motivating question based on evidence from the visualization: Do people who smoke more tend to have worse health conditions?\n\n\n Now is a good time to render, commit, and push."
  },
  {
    "objectID": "hw/hw-1.html#exercise-5",
    "href": "hw/hw-1.html#exercise-5",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 5",
    "text": "Exercise 5\nHow are sleep and general health associated?\n\nCreate a visualization displaying the relationship between sleep and general_health.\nInclude informative title and axis labels.\nModify your plot to use a different theme than the default.\nComment on the motivating question based on evidence from the visualization: How are sleep and general health associated?\n\n\n Now is a good time to render, commit, and push."
  },
  {
    "objectID": "hw/hw-1.html#exercise-6",
    "href": "hw/hw-1.html#exercise-6",
    "title": "HW 1 - Data visualization",
    "section": "Exercise 6",
    "text": "Exercise 6\n\nFill in the blanks:\n\nThe gg in the name of the package ggplot2 stands for ___.\nIf you map the same continuous variable to both x and y aesthetics in a scatterplot, you get a straight ___ line. (Choose between “vertical”, “horizontal”, or “diagonal”.)\n\nCode style: Fix up the code style by spaces and line breaks where needed. Briefly describe your fixes. (Hint: You can refer to the Tidyverse style guide.)\n\n\nggplot(data=mpg,mapping=aes(x=drv,fill=class))+geom_bar() +scale_fill_viridis_d()\n\n\nRead ?facet_wrap. What does nrow do? What does ncol do? What other options control the layout of the individual panels? Why doesn’t facet_grid() have nrow and ncol arguments?\n\n\n Render, commit, and push one last time.\nMake sure that you commit and push all changed documents and your Git pane is completely empty before proceding."
  },
  {
    "objectID": "hw/hw-1.html#submission",
    "href": "hw/hw-1.html#submission",
    "title": "HW 1 - Data visualization",
    "section": "Submission",
    "text": "Submission\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials Duke Net ID and log in using your Net ID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with exercise. All the pages of your homework should be associated with at least one question (i.e., should be “checked”). If you do not do this, you will be subject to lose points on the assignment.\nSelect the first page of your PDF submission to be associated with the “Workflow & formatting” question."
  },
  {
    "objectID": "hw/hw-1.html#grading",
    "href": "hw/hw-1.html#grading",
    "title": "HW 1 - Data visualization",
    "section": "Grading",
    "text": "Grading\n\nExercise 1: 7 points\nExercise 2: 9 points\nExercise 3: 5 points\nExercise 4: 9 points\nExercise 5: 7 points\nExercise 6: 8 points\nWorkflow + formatting: 5 points\nTotal: 50 points"
  },
  {
    "objectID": "prepare/09-05.html",
    "href": "prepare/09-05.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nR4DS: Chp 2 - Data visualization - Sections 2.1 and 2.4\n\nIf you haven’t yet done so:\n\nRead the syllabus!\nComplete the Getting to know you survey\nGet a GitHub account if you don’t have one (some advice for choosing a username here)\nJoin the course Slack using the invitation link in your email.\nReserve a STA 198-199 container at https://cmgr.oit.duke.edu/containers."
  },
  {
    "objectID": "prepare/09-12.html",
    "href": "prepare/09-12.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/09-06.html",
    "href": "prepare/09-06.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nR4DS: Chp 2 - Data visualization - Sections 2.5 - 2.10\n\n⌨️ Watch:\n\nData and visualization\nVisualising data with ggplot2"
  },
  {
    "objectID": "prepare/09-13.html",
    "href": "prepare/09-13.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/09-17.html",
    "href": "prepare/09-17.html",
    "title": "Prepare",
    "section": "",
    "text": "Note\n\n\n\nVideos use the “old school” pipe (%>%) but we’ll be using the newer (|>) pipe operator in class."
  },
  {
    "objectID": "prepare/09-01.html",
    "href": "prepare/09-01.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nR for Data Science (R4DS): Chp 1 - Introduction\nIntroduction to Modern Statistics (IMS): Chp 1 - Hello data\nThe syllabus!\n\n⌨️ Do:\n\nComplete the Getting to know you survey\nGet a GitHub account if you don’t have one (some advice for choosing a username here)\n\nIf you haven’t yet done so:\n\nJoin the course Slack using the invitation link in your email.\nReserve a STA 198-199 container at https://cmgr.oit.duke.edu/containers."
  },
  {
    "objectID": "prepare/08-30.html",
    "href": "prepare/08-30.html",
    "title": "Prepare",
    "section": "",
    "text": "Join the course Slack using the invitation link in your email.\nReserve a STA 198-199 container at https://cmgr.oit.duke.edu/containers."
  },
  {
    "objectID": "prepare/09-08.html",
    "href": "prepare/09-08.html",
    "title": "Prepare",
    "section": "",
    "text": "📖 Read:\n\nIMS: Chp 4 - Exploring categorical data\nIMS: Chp 5 - Exploring numerical data\n\n⌨️ Watch:\n\nVisualizing numerical data\nVisualizing categorical data\n\n📜Optional reading – Blog posts that might be of interest for those who want to dive deeper / go further:\n\n#barbarplots\nVisualizing distributions with raincloud plots"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights.html",
    "href": "ae/ae-03-wrangling-flights.html",
    "title": "AE 03: Wrangling flights",
    "section": "",
    "text": "Important\n\n\n\nGo to the course GitHub organization and locate the repo titled ae-03-YOUR_GITHUB_USERNAME to get started.\nThis AE is due Friday, Sep 16 at 11:59pm.\nTo demonstrate data wrangling we will use flights, a tibble in the nycflights13 R package. It includes characteristics of all flights departing from New York City (JFK, LGA, EWR) in 2013.\nThe data frame has over 336,000 observations (rows), 336776 observations to be exact, so we will not view the entire data frame. Instead we’ll use the commands below to help us explore the data.\nThe head() function returns “A tibble: 6 x 19” and then the first six rows of the flights data."
  },
  {
    "objectID": "ae/ae-03-wrangling-flights.html#select",
    "href": "ae/ae-03-wrangling-flights.html#select",
    "title": "AE 03: Wrangling flights",
    "section": "select()",
    "text": "select()\n\nDemo: Make a data frame that only contains the variables dep_delay and arr_delay.\n\n\n# add code here\n\n\nDemo: Make a data frame that keeps every variable except dep_delay.\n\n\n# add code here\n\n\nDemo: Make a data frame that includes all variables between year through dep_delay (inclusive). These are all variables that provide information about the departure of each flight.\n\n\n# add code here\n\n\nDemo: Use the select helper contains() to make a data frame that includes the variables associated with the arrival, i.e., contains the string \"arr\\_\" in the name.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights.html#the-pipe",
    "href": "ae/ae-03-wrangling-flights.html#the-pipe",
    "title": "AE 03: Wrangling flights",
    "section": "The pipe",
    "text": "The pipe\nBefore working with more data wrangling functions, let’s formally introduce the pipe. The pipe, |>, is an operator (a tool) for passing information from one process to another. We will use |> mainly in data pipelines to pass the output of the previous line of code as the first input of the next line of code.\nWhen reading code “in English”, say “and then” whenever you see a pipe.\n\nYour turn (4 minutes): Run the following chunk and observe its output. Then, come up with a different way of obtaining the same output.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights.html#slice",
    "href": "ae/ae-03-wrangling-flights.html#slice",
    "title": "AE 03: Wrangling flights",
    "section": "slice()",
    "text": "slice()\n\nDemo: Display the first five rows of the flights data frame.\n\n\n# add code here\n\n\nDemo: Display the last two rows of the flights data frame.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights.html#arrange",
    "href": "ae/ae-03-wrangling-flights.html#arrange",
    "title": "AE 03: Wrangling flights",
    "section": "arrange()",
    "text": "arrange()\n\nDemo: Let’s arrange the data by departure delay, so the flights with the shortest departure delays will be at the top of the data frame.\n\nQuestion: What does it mean for the dep_delay to have a negative value?\n\n# add code here\n\n\nDemo: Now let’s arrange the data by descending departure delay, so the flights with the longest departure delays will be at the top.\n\n\n# add code here\n\n\nYour turn (5 minutes): Create a data frame that only includes the plane tail number (tailnum), carrier (carrier), and departure delay for the flight with the longest departure delay. What is the plane tail number (tailnum) for this flight? Share your response on Slack on the relevant thread on #general using code formatting.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights.html#filter",
    "href": "ae/ae-03-wrangling-flights.html#filter",
    "title": "AE 03: Wrangling flights",
    "section": "filter()",
    "text": "filter()\n\nDemo: Filter the data frame by selecting the rows where the destination airport is RDU.\n\n\n# add code here\n\n\nDemo: We can also filter using more than one condition. Here we select all rows where the destination airport is RDU and the arrival delay is less than 0.\n\n\n# add code here\n\nWe can do more complex tasks using logical operators:\n\n\n\noperator\ndefinition\n\n\n\n\n<\nis less than?\n\n\n<=\nis less than or equal to?\n\n\n>\nis greater than?\n\n\n>=\nis greater than or equal to?\n\n\n==\nis exactly equal to?\n\n\n!=\nis not equal to?\n\n\nx & y\nis x AND y?\n\n\nx \\| y\nis x OR y?\n\n\nis.na(x)\nis x NA?\n\n\n!is.na(x)\nis x not NA?\n\n\nx %in% y\nis x in y?\n\n\n!(x %in% y)\nis x not in y?\n\n\n!x\nis not x?\n\n\n\nThe final operator only makes sense if x is logical (TRUE / FALSE).\n\nYour turn (4 minutes): Describe what the code is doing in words. Share your response on Slack on the relevant thread on #general.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights.html#count",
    "href": "ae/ae-03-wrangling-flights.html#count",
    "title": "AE 03: Wrangling flights",
    "section": "count()",
    "text": "count()\n\nDemo: Create a frequency table of the destination locations for flights from New York.\n\n\n# add code here\n\n\nDemo: In which month was there the fewest number of flights? How many flights were there in that month?\n\n\n# add code here\n\n\nYour turn (5 minutes): On which date (month + day) was there the largest number of flights? How many flights were there on that day? Share your response on Slack on the relevant thread on #general using code formatting.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights.html#mutate",
    "href": "ae/ae-03-wrangling-flights.html#mutate",
    "title": "AE 03: Wrangling flights",
    "section": "mutate()",
    "text": "mutate()\nUse mutate() to create a new variable.\n\nDemo: In the code chunk below, air_time (minutes in the air) is converted to hours, and then new variable mph is created, corresponding to the miles per hour of the flight.\n\n\n# add code here\n\n\nYour turn (4 minutes): Create a new variable to calculate the percentage of flights in each month. What percentage of flights take place in July?\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights.html#summarize",
    "href": "ae/ae-03-wrangling-flights.html#summarize",
    "title": "AE 03: Wrangling flights",
    "section": "summarize()",
    "text": "summarize()\nsummarize() collapses the rows into summary statistics and removes columns irrelevant to the calculation.\nBe sure to name your columns!\n\n# add code here\n\nQuestion: Why did this code return NA?\nLet’s fix it!\n\n# add code here"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights.html#group_by",
    "href": "ae/ae-03-wrangling-flights.html#group_by",
    "title": "AE 03: Wrangling flights",
    "section": "group_by()",
    "text": "group_by()\ngroup_by() is used for grouped operations. It’s very powerful when paired with summarise() to calculate summary statistics by group.\nHere we find the mean and standard deviation of departure delay for each month.\n\n# add code here\n\n\nYour turn (4 minutes): What is the median departure delay for each airports around NYC (origin)? Which airport has the shortest median departure delay? Share your response on Slack on the relevant thread.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-01-bechdel-dataviz.html",
    "href": "ae/ae-01-bechdel-dataviz.html",
    "title": "AE 01: Bechdel + data visualization",
    "section": "",
    "text": "Important\n\n\n\nGo to the course GitHub organization and locate the repo titled ae-01-YOUR_GITHUB_USERNAME to get started.\nThis AE is due Friday, Sep 9 at 11:59pm.\nIn this mini analysis we work with the data used in the FiveThirtyEight story titled “The Dollar-And-Cents Case Against Hollywood’s Exclusion of Women”.\nThis analysis is about the Bechdel test, a measure of the representation of women in fiction."
  },
  {
    "objectID": "ae/ae-01-bechdel-dataviz.html#getting-started",
    "href": "ae/ae-01-bechdel-dataviz.html#getting-started",
    "title": "AE 01: Bechdel + data visualization",
    "section": "Getting started",
    "text": "Getting started\n\nPackages\nWe start with loading the packages we’ll use: tidyverse for majority of the analysis and scales for pretty plot labels later on.\n\nlibrary(tidyverse)\nlibrary(scales)\n\n\n\nData\nThe data are stored as a CSV (comma separated values) file in the data folder of your repository. Let’s read it from there and save it as an object called bechdel.\n\nbechdel <- read_csv(\"data/bechdel.csv\")\n\n\n\n\n\n\n\nNote\n\n\n\nThis a modified version of the bechdel dataset from the previous application exercise. It’s been modified to include some new variables derived from existing variables as well as to limit the scope of the data to movies released between 1990 and 2013. For now we’re not going to discuss how these modifications were made (that’s next week’s topic) but if you’re curious, you can find the data prep script in the data/ folder of your repo. Don’t spend too long trying to decipher it, wait till next week when you have the right tools to do so!\n\n\n\n\nGet to know the data\nWe can use the glimpse function to get an overview (or “glimpse”) of the data.\n\n# add code here\n\n\nWhat does each observation (row) in the data set represent?\n\nEach observation represents a ___.\n\nHow many observations (rows) are in the data set?\n\nThere are 1615 movies in the dataset.\n\nHow many variables (columns) are in the data set?\n\nThere are ___ columns in the dataset.\n\n\nVariables of interest\nThe variables we’ll focus on are the following:\n\nbudget_2013: Budget in 2013 inflation adjusted dollars.\ngross_2013: Gross (US and international combined) in 2013 inflation adjusted dollars.\nroi: Return on investment, calculated as the ratio of the gross to budget.\nclean_test: Bechdel test result:\n\nok = passes test\ndubious\nmen = women only talk about men\nnotalk = women don’t talk to each other\nnowomen = fewer than two women\n\nbinary: Bechdel Test PASS vs FAIL binary\n\nWe will also use the year of release in data prep and title of movie to take a deeper look at some outliers.\nThere are a few other variables in the dataset, but we won’t be using them in this analysis."
  },
  {
    "objectID": "ae/ae-01-bechdel-dataviz.html#visualizing-data-with-ggplot2",
    "href": "ae/ae-01-bechdel-dataviz.html#visualizing-data-with-ggplot2",
    "title": "AE 01: Bechdel + data visualization",
    "section": "Visualizing data with ggplot2",
    "text": "Visualizing data with ggplot2\nggplot2 is the package and ggplot() is the function in this package that is used to create a plot.\n\nggplot() creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with data = bechdel.\n\n\nggplot(data = bechdel)\n\n\n\n\n\nThe mapping argument is paired with an aesthetic (aes()), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\n\nggplot(data = bechdel, \n       mapping = aes(x = budget_2013, y = gross_2013))\n\n\n\n\nAs we previously mentioned, we often omit the names of the first two arguments in R functions. So you’ll often see this written as:\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013))\n\n\n\n\nNote that the result is exactly the same.\n\nThe geom_xx function specifies the type of plot we want to use to represent the data. In the code below, we use geom_point which creates a plot where each observation is represented by a point.\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013)) +\n  geom_point()\n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\nNote that this results in a warning as well. What does the warning mean?"
  },
  {
    "objectID": "ae/ae-01-bechdel-dataviz.html#gross-revenue-vs.-budget",
    "href": "ae/ae-01-bechdel-dataviz.html#gross-revenue-vs.-budget",
    "title": "AE 01: Bechdel + data visualization",
    "section": "Gross revenue vs. budget",
    "text": "Gross revenue vs. budget\n\nStep 1 - Your turn\nModify the following plot to change the color of all points to a different color.\n\n\n\n\n\n\nTip\n\n\n\nSee http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf for many color options you can use by name in R or use the hex code for a color of your choice.\n\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013)) +\n  geom_point(color = \"deepskyblue3\") \n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\n\n\nStep 2 - Your turn\nAdd labels for the title and x and y axes.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013))+\n  geom_point(color = \"deepskyblue3\") + \n  labs(\n    x = \"___\", \n    y = \"___\", \n    title = \"___\"\n    )\n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\n\n\nStep 3 - Your turn\nAn aesthetic is a visual property of one of the objects in your plot. Commonly used aesthetic options are:\n\ncolor\nfill\nshape\nsize\nalpha (transparency)\n\nModify the plot below, so the color of the points is based on the variable binary.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013)) +\n  geom_point() + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by ___\"\n    )\n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\n\n\nStep 4 - Your turn\nExpand on your plot from the previous step to make the size of your points based on roi.\n\n# add code here\n\n\n\nStep 5 - Your turn\nExpand on your plot from the previous step to make the transparency (alpha) of the points 0.5.\n\n# add code here\n\n\n\nStep 6 - Your turn\nExpand on your plot from the previous step by using facet_wrap to display the association between budget and gross for different values of clean_test.\n\n# add code here\n\n\n\nStep 7 - Demo\nImprove your plot from the previous step by making the x and y scales more legible.\n\n\n\n\n\n\nTip\n\n\n\nMake use of the scales package, specifically the scale_x_continuous() and scale_y_continuous() functions.\n\n\n\n# add code here\n\n\n\nStep 8 - Your turn\nExpand on your plot from the previous step by using facet_grid to display the association between budget and gross for different combinations of clean_test and binary. Comment on whether this was a useful update.\n\n# add code here\n\nAdd comment here…\n\n\nStep 9 - Demo\nWhat other improvements could we make to this plot?\n\n# add code here\n\n\n\nRender, commit, and push\n\nIf you made any changes since the last render, render again to get the final version of the AE.\nCheck the box next to each document in the Git tab (this is called “staging” the changes). Commit the changes you made using a simple and informative message.\nUse the green arrow to push your changes to your repo on GitHub.\nCheck your repo on GitHub and see the updated files. Once your updated files are in your repo on GitHub, you’re good to go!"
  },
  {
    "objectID": "ae/ae-01-bechdel-dataviz.html#return-on-investment",
    "href": "ae/ae-01-bechdel-dataviz.html#return-on-investment",
    "title": "AE 01: Bechdel + data visualization",
    "section": "Return-on-investment",
    "text": "Return-on-investment\nFinally, let’s take a look at return-on-investment (ROI).\n\nStep 1 - Your turn\nCreate side-by-side box plots of roi by clean_test where the boxes are colored by binary.\n\n# add code here\n\nWhat are those movies with very high returns on investment?\n\nbechdel |>\n  filter(roi > 400) |>\n  select(title, roi, budget_2013, gross_2013, year, clean_test)\n\n# A tibble: 3 × 6\n  title                     roi budget_2013 gross_2013  year clean_test\n  <chr>                   <dbl>       <dbl>      <dbl> <dbl> <chr>     \n1 Paranormal Activity      671.      505595  339424558  2007 dubious   \n2 The Blair Witch Project  648.      839077  543776715  1999 ok        \n3 El Mariachi              583.       11622    6778946  1992 nowomen   \n\n\n\n\nStep 2 - Demo\nExpand on your plot from the previous step to zoom in on movies with roi < ___ to get a better view of how the medians across the categories compare.\n\n# add code here\n\nWhat does this plot say about return-on-investment on movies that pass the Bechdel test?"
  },
  {
    "objectID": "ae/ae-02-viz-data-types.html",
    "href": "ae/ae-02-viz-data-types.html",
    "title": "AE 02: Visualizing penguins",
    "section": "",
    "text": "Important\n\n\n\nGo to the course GitHub organization and locate the repo titled ae-02-YOUR_GITHUB_USERNAME to get started.\nThis AE is due Sunday, Sep 11 at 11:59pm.\nFor all analyses, we’ll use the tidyverse and palmerpenguins packages.\nThe dataset we will visualize is called penguins. Let’s glimpse() at it."
  },
  {
    "objectID": "ae/ae-02-viz-data-types.html#single-variable",
    "href": "ae/ae-02-viz-data-types.html#single-variable",
    "title": "AE 02: Visualizing penguins",
    "section": "Single variable",
    "text": "Single variable\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the a single variable is called univariate analysis.\n\n\nCreate visualizations of the distribution of weights of penguins.\n\nMake a histogram. Set an appropriate binwidth.\n\n\n# add code here\n\n\nMake a boxplot.\n\n\n# add code here\n\n\nBased on these, determine if each of the following statements about the shape of the distribution is true or false.\n\nThe distribution of penguin weights in this sample is left skewed. FALSE\nThe distribution of penguin weights in this sample is unimodal. TRUE"
  },
  {
    "objectID": "ae/ae-02-viz-data-types.html#two-variables",
    "href": "ae/ae-02-viz-data-types.html#two-variables",
    "title": "AE 02: Visualizing penguins",
    "section": "Two variables",
    "text": "Two variables\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the relationship between two variables is called bivariate analysis.\n\n\nCreate visualizations of the distribution of weights of penguins by species.\n\nMake a single histogram. Set an appropriate binwidth.\n\n\n# add code here\n\n\nUse multiple histograms via faceting, one for each species. Set an appropriate binwidth, add color as you see fit, and turn off legends if not needed.\n\n\n# add code here\n\n\nUse side-by-side box plots. Add color as you see fit and turn off legends if not needed.\n\n\n# add code here\n\n\nUse density plots. Add color as you see fit.\n\n\n# add code here\n\n\nUse violin plots. Add color as you see fit and turn off legends if not needed.\n\n\n# add code here\n\n\nMake a jittered scatter plot. Add color as you see fit and turn off legends if not needed.\n\n\n# add code here\n\n\nUse beeswarm plots. Add color as you see fit and turn off legends if not needed.\n\n\n# add code here\n\n\nUse multiple geoms on a single plot. Be deliberate about the order of plotting. Change the theme and the color scale of the plot. Finally, add informative labels.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-02-viz-data-types.html#multiple-variables",
    "href": "ae/ae-02-viz-data-types.html#multiple-variables",
    "title": "AE 02: Visualizing penguins",
    "section": "Multiple variables",
    "text": "Multiple variables\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the relationship between three or more variables is called multivariate analysis.\n\n\n\nFacet the plot you created in the previous exercise by island. Adjust labels accordingly.\n\n\n# add code here\n\nBefore you continue, let’s turn off all warnings the code chunks generate and resize all figures. We’ll do this by editing the YAML."
  },
  {
    "objectID": "ae/ae-02-viz-data-types.html#visualizing-other-variables---your-turn",
    "href": "ae/ae-02-viz-data-types.html#visualizing-other-variables---your-turn",
    "title": "AE 02: Visualizing penguins",
    "section": "Visualizing other variables - Your turn!",
    "text": "Visualizing other variables - Your turn!\n\nPick a single categorical variable from the data set and make a bar plot of its distribution.\n\n\n# add code here\n\n\nPick two categorical variables and make a visualization to visualize the relationship between the two variables. Along with your code and output, provide an interpretation of the visualization.\n\n\n# add code here\n\nInterpretation goes here…\n\nMake another plot that uses at least three variables. At least one should be numeric and at least one categorical. In 1-2 sentences, describe what the plot shows about the relationships between the variables you plotted. Don’t forget to label your code chunk.\n\n\n# add code here\n\nInterpretation goes here…"
  },
  {
    "objectID": "ae/ae-01-bechdel-dataviz-A.html",
    "href": "ae/ae-01-bechdel-dataviz-A.html",
    "title": "AE 01: Bechdel + data visualization",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as reference only, it’s not designed to be an exhaustive key.\nIn this mini analysis we work with the data used in the FiveThirtyEight story titled “The Dollar-And-Cents Case Against Hollywood’s Exclusion of Women”.\nThis analysis is about the Bechdel test, a measure of the representation of women in fiction."
  },
  {
    "objectID": "ae/ae-01-bechdel-dataviz-A.html#getting-started",
    "href": "ae/ae-01-bechdel-dataviz-A.html#getting-started",
    "title": "AE 01: Bechdel + data visualization",
    "section": "Getting started",
    "text": "Getting started\n\nPackages\nWe start with loading the packages we’ll use: tidyverse for majority of the analysis and scales for pretty plot labels later on.\n\nlibrary(tidyverse)\nlibrary(scales)\n\n\n\nData\nThe data are stored as a CSV (comma separated values) file in the data folder of your repository. Let’s read it from there and save it as an object called bechdel.\n\nbechdel <- read_csv(\"data/bechdel.csv\")\n\n\n\n\n\n\n\nNote\n\n\n\nThis a modified version of the bechdel dataset from the previous application exercise. It’s been modified to include some new variables derived from existing variables as well as to limit the scope of the data to movies released between 1990 and 2013. For now we’re not going to discuss how these modifications were made (that’s next week’s topic) but if you’re curious, you can find the data prep script in the data/ folder of your repo. Don’t spend too long trying to decipher it, wait till next week when you have the right tools to do so!\n\n\n\n\nGet to know the data\nWe can use the glimpse function to get an overview (or “glimpse”) of the data.\n\nglimpse(bechdel)\n\nRows: 1,615\nColumns: 7\n$ title       <chr> \"21 & Over\", \"Dredd 3D\", \"12 Years a Slave\", \"2 Guns\", \"42…\n$ year        <dbl> 2013, 2012, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013…\n$ gross_2013  <dbl> 67878146, 55078343, 211714070, 208105475, 190040426, 18416…\n$ budget_2013 <dbl> 13000000, 45658735, 20000000, 61000000, 40000000, 22500000…\n$ roi         <dbl> 5.221396, 1.206305, 10.585703, 3.411565, 4.751011, 0.81851…\n$ binary      <chr> \"FAIL\", \"PASS\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"P…\n$ clean_test  <chr> \"notalk\", \"ok\", \"notalk\", \"notalk\", \"men\", \"men\", \"notalk\"…\n\n\n\nWhat does each observation (row) in the data set represent?\n\nEach observation represents a movie.\n\nHow many observations (rows) are in the data set?\n\nThere are 1615 movies in the dataset.\n\nHow many variables (columns) are in the data set?\n\nThere are 7 columns in the dataset.\n\n\nVariables of interest\nThe variables we’ll focus on are the following:\n\nbudget_2013: Budget in 2013 inflation adjusted dollars.\ngross_2013: Gross (US and international combined) in 2013 inflation adjusted dollars.\nroi: Return on investment, calculated as the ratio of the gross to budget.\nclean_test: Bechdel test result:\n\nok = passes test\ndubious\nmen = women only talk about men\nnotalk = women don’t talk to each other\nnowomen = fewer than two women\n\nbinary: Bechdel Test PASS vs FAIL binary\n\nWe will also use the year of release in data prep and title of movie to take a deeper look at some outliers.\nThere are a few other variables in the dataset, but we won’t be using them in this analysis."
  },
  {
    "objectID": "ae/ae-01-bechdel-dataviz-A.html#visualizing-data-with-ggplot2",
    "href": "ae/ae-01-bechdel-dataviz-A.html#visualizing-data-with-ggplot2",
    "title": "AE 01: Bechdel + data visualization",
    "section": "Visualizing data with ggplot2",
    "text": "Visualizing data with ggplot2\nggplot2 is the package and ggplot() is the function in this package that is used to create a plot.\n\nggplot() creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with data = bechdel.\n\n\nggplot(data = bechdel)\n\n\n\n\n\nThe mapping argument is paired with an aesthetic (aes()), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\n\nggplot(data = bechdel, \n       mapping = aes(x = budget_2013, y = gross_2013))\n\n\n\n\nAs we previously mentioned, we often omit the names of the first two arguments in R functions. So you’ll often see this written as:\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013))\n\n\n\n\nNote that the result is exactly the same.\n\nThe geom_xx function specifies the type of plot we want to use to represent the data. In the code below, we use geom_point which creates a plot where each observation is represented by a point.\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013)) +\n  geom_point()\n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\nNote that this results in a warning as well. What does the warning mean?"
  },
  {
    "objectID": "ae/ae-01-bechdel-dataviz-A.html#gross-revenue-vs.-budget",
    "href": "ae/ae-01-bechdel-dataviz-A.html#gross-revenue-vs.-budget",
    "title": "AE 01: Bechdel + data visualization",
    "section": "Gross revenue vs. budget",
    "text": "Gross revenue vs. budget\n\nStep 1 - Your turn\nModify the following plot to change the color of all points to a different color.\n\n\n\n\n\n\nTip\n\n\n\nSee http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf for many color options you can use by name in R or use the hex code for a color of your choice.\n\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013)) +\n  geom_point(color = \"coral\") \n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\n\n\nStep 2 - Your turn\nAdd labels for the title and x and y axes.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013))+\n  geom_point(color = \"deepskyblue3\") + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget\"\n    )\n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\n\n\nStep 3 - Your turn\nAn aesthetic is a visual property of one of the objects in your plot. Commonly used aesthetic options are:\n\ncolor\nfill\nshape\nsize\nalpha (transparency)\n\nModify the plot below, so the color of the points is based on the variable binary.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013, color = binary)) +\n  geom_point() + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\n\n\nStep 4 - Your turn\nExpand on your plot from the previous step to make the size of your points based on roi.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point() + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\n\n\nStep 5 - Your turn\nExpand on your plot from the previous step to make the transparency (alpha) of the points 0.5.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\n\n\nStep 6 - Your turn\nExpand on your plot from the previous step by using facet_wrap to display the association between budget and gross for different values of clean_test.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  facet_wrap(~clean_test) +\n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\n\n\nStep 7 - Demo\nImprove your plot from the previous step by making the x and y scales more legible.\n\n\n\n\n\n\nTip\n\n\n\nMake use of the scales package, specifically the scale_x_continuous() and scale_y_continuous() functions.\n\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  facet_wrap(~clean_test) +\n  scale_x_continuous(labels = label_dollar(scale = 1/1000000)) +\n  scale_y_continuous(labels = label_dollar(scale = 1/1000000)) +\n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\n\n\nStep 8 - Your turn\nExpand on your plot from the previous step by using facet_grid to display the association between budget and gross for different combinations of clean_test and binary. Comment on whether this was a useful update.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  facet_grid(binary~clean_test) +\n  scale_x_continuous(labels = label_dollar(scale = 1/1000000)) +\n  scale_y_continuous(labels = label_dollar(scale = 1/1000000)) +\n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (geom_point).\n\n\n\n\n\nThis was not a useful update as one of the levels of clean_test maps directly to one of the levels of binary.\n\n\nStep 9 - Demo\nWhat other improvements could we make to this plot?\n\n# Answers may vary\n\n\n\nRender, commit, and push\n\nIf you made any changes since the last render, render again to get the final version of the AE.\nCheck the box next to each document in the Git tab (this is called “staging” the changes). Commit the changes you made using a simple and informative message.\nUse the green arrow to push your changes to your repo on GitHub.\nCheck your repo on GitHub and see the updated files. Once your updated files are in your repo on GitHub, you’re good to go!"
  },
  {
    "objectID": "ae/ae-01-bechdel-dataviz-A.html#return-on-investment",
    "href": "ae/ae-01-bechdel-dataviz-A.html#return-on-investment",
    "title": "AE 01: Bechdel + data visualization",
    "section": "Return-on-investment",
    "text": "Return-on-investment\nFinally, let’s take a look at return-on-investment (ROI).\n\nStep 1 - Your turn\nCreate side-by-side box plots of roi by clean_test where the boxes are colored by binary.\n\nggplot(bechdel, \n       aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    x = \"Detailed Bechdel result\",\n    y = \"Return-on-investment (gross / budget)\",\n    color = \"Bechdel\\nresult\"\n    )\n\nWarning: Removed 15 rows containing non-finite values (stat_boxplot).\n\n\n\n\n\nWhat are those movies with very high returns on investment?\n\nbechdel |>\n  filter(roi > 400) |>\n  select(title, roi, budget_2013, gross_2013, year, clean_test)\n\n# A tibble: 3 × 6\n  title                     roi budget_2013 gross_2013  year clean_test\n  <chr>                   <dbl>       <dbl>      <dbl> <dbl> <chr>     \n1 Paranormal Activity      671.      505595  339424558  2007 dubious   \n2 The Blair Witch Project  648.      839077  543776715  1999 ok        \n3 El Mariachi              583.       11622    6778946  1992 nowomen   \n\n\n\n\nStep 2 - Demo\nExpand on your plot from the previous step to zoom in on movies with roi < ___ to get a better view of how the medians across the categories compare.\n\nggplot(bechdel, \n       aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    x = \"Detailed Bechdel result\",\n    y = \"Return-on-investment (gross / budget)\",\n    color = \"Bechdel\\nresult\"\n    ) +\n  coord_cartesian(ylim = c(0, 18))\n\nWarning: Removed 15 rows containing non-finite values (stat_boxplot).\n\n\n\n\n\nWhat does this plot say about return-on-investment on movies that pass the Bechdel test?"
  },
  {
    "objectID": "ae/ae-02-viz-data-types-A.html",
    "href": "ae/ae-02-viz-data-types-A.html",
    "title": "AE 02: Visualizing penguins",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as reference only, it’s not designed to be an exhaustive key.\nFor all analyses, we’ll use the tidyverse and palmerpenguins packages.\nThe dataset we will visualize is called penguins. Let’s glimpse() at it."
  },
  {
    "objectID": "ae/ae-02-viz-data-types-A.html#single-variable",
    "href": "ae/ae-02-viz-data-types-A.html#single-variable",
    "title": "AE 02: Visualizing penguins",
    "section": "Single variable",
    "text": "Single variable\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the a single variable is called univariate analysis.\n\n\nCreate visualizations of the distribution of weights of penguins.\n\nMake a histogram. Set an appropriate binwidth.\n\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 250)\n\n\n\n\n\nMake a boxplot.\n\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_boxplot()\n\n\n\n\n\nBased on these, determine if each of the following statements about the shape of the distribution is true or false.\n\nThe distribution of penguin weights in this sample is left skewed. FALSE\nThe distribution of penguin weights in this sample is unimodal. TRUE"
  },
  {
    "objectID": "ae/ae-02-viz-data-types-A.html#two-variables",
    "href": "ae/ae-02-viz-data-types-A.html#two-variables",
    "title": "AE 02: Visualizing penguins",
    "section": "Two variables",
    "text": "Two variables\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the relationship between two variables is called bivariate analysis.\n\n\nCreate visualizations of the distribution of weights of penguins by species.\n\nMake a single histogram. Set an appropriate binwidth.\n\n\nggplot(penguins, \n       aes(x = body_mass_g, fill = species)) +\n  geom_histogram(binwidth = 250, alpha = 0.5, color = \"black\")\n\n\n\n\n\nUse multiple histograms via faceting, one for each species. Set an appropriate binwidth, add color as you see fit, and turn off legends if not needed.\n\n\nggplot(penguins, \n       aes(x = body_mass_g, fill = species)) +\n  geom_histogram(binwidth = 250, show.legend = FALSE) +\n  facet_wrap(~species, ncol = 1)\n\n\n\n\n\nUse side-by-side box plots. Add color as you see fit and turn off legends if not needed.\n\n\nggplot(penguins, \n       aes(x = species, y = body_mass_g, fill = species)) +\n  geom_boxplot(show.legend = FALSE)\n\n\n\n\n\nUse density plots. Add color as you see fit.\n\n\nggplot(penguins, \n       aes(x = body_mass_g, fill = species)) +\n  geom_density(alpha = 0.5)\n\n\n\n\n\nUse violin plots. Add color as you see fit and turn off legends if not needed.\n\n\nggplot(penguins, \n       aes(x = species, y = body_mass_g, fill = species)) +\n    geom_violin(alpha = 0.5, show.legend = FALSE)\n\n\n\n\n\nMake a jittered scatter plot. Add color as you see fit and turn off legends if not needed.\n\n\nggplot(penguins, \n       aes(x = species, y = body_mass_g, color = species)) +\n    geom_jitter(show.legend = FALSE)\n\n\n\n\n\nUse beeswarm plots. Add color as you see fit and turn off legends if not needed.\n\n\nlibrary(ggbeeswarm)\n\nggplot(penguins, \n       aes(x = species, y = body_mass_g, color = species)) +\n  geom_beeswarm(show.legend = FALSE)\n\n\n\n\n\nUse multiple geoms on a single plot. Be deliberate about the order of plotting. Change the theme and the color scale of the plot. Finally, add informative labels.\n\n\nggplot(penguins, \n       aes(x = species, y = body_mass_g, color = species)) +\n  geom_beeswarm(show.legend = FALSE) +\n  geom_boxplot(show.legend = FALSE, alpha = 0.5) +\n  scale_color_viridis_d(option = \"D\", end = 0.8) +\n  theme_minimal() +\n  labs(\n    x = \"Species\",\n    y = \"Body mass (g)\",\n    title = \"Body mass of penguins in Palmer Archipelago\",\n    subtitle = \"By species\"\n  )"
  },
  {
    "objectID": "ae/ae-02-viz-data-types-A.html#multiple-variables",
    "href": "ae/ae-02-viz-data-types-A.html#multiple-variables",
    "title": "AE 02: Visualizing penguins",
    "section": "Multiple variables",
    "text": "Multiple variables\n\n\n\n\n\n\nNote\n\n\n\nAnalyzing the relationship between three or more variables is called multivariate analysis.\n\n\n\nFacet the plot you created in the previous exercise by island. Adjust labels accordingly.\n\n\nggplot(penguins, \n       aes(x = species, y = body_mass_g, color = species)) +\n  geom_beeswarm(show.legend = FALSE) +\n  geom_boxplot(show.legend = FALSE, alpha = 0.5) +\n  facet_wrap(~island) +\n  scale_color_viridis_d(option = \"D\", end = 0.8) +\n  theme_minimal() +\n  labs(\n    x = \"Species\",\n    y = \"Body mass (g)\",\n    title = \"Body mass of penguins in Palmer Archipelago\",\n    subtitle = \"By species and island\"\n  )\n\n\n\n\nBefore you continue, let’s turn off all warnings the code chunks generate and resize all figures. We’ll do this by editing the YAML."
  },
  {
    "objectID": "ae/ae-02-viz-data-types-A.html#visualizing-other-variables---your-turn",
    "href": "ae/ae-02-viz-data-types-A.html#visualizing-other-variables---your-turn",
    "title": "AE 02: Visualizing penguins",
    "section": "Visualizing other variables - Your turn!",
    "text": "Visualizing other variables - Your turn!\n\nPick a single categorical variable from the data set and make a bar plot of its distribution.\n\n\n\n\n\nPick two categorical variables and make a visualization to visualize the relationship between the two variables. Along with your code and output, provide an interpretation of the visualization.\n\n\n\n\nInterpretation goes here…\n\nMake another plot that uses at least three variables. At least one should be numeric and at least one categorical. In 1-2 sentences, describe what the plot shows about the relationships between the variables you plotted. Don’t forget to label your code chunk.\n\n\n# add code here\n\nInterpretation goes here…"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights-A.html",
    "href": "ae/ae-03-wrangling-flights-A.html",
    "title": "AE 03: Wrangling flights",
    "section": "",
    "text": "Important\n\n\n\nGo to the course GitHub organization and locate the repo titled ae-03-YOUR_GITHUB_USERNAME to get started.\nThis AE is due Friday, Sep 16 at 11:59pm.\nTo demonstrate data wrangling we will use flights, a tibble in the nycflights13 R package. It includes characteristics of all flights departing from New York City (JFK, LGA, EWR) in 2013.\nThe data frame has over 336,000 observations (rows), 336776 observations to be exact, so we will not view the entire data frame. Instead we’ll use the commands below to help us explore the data.\nThe head() function returns “A tibble: 6 x 19” and then the first six rows of the flights data."
  },
  {
    "objectID": "ae/ae-03-wrangling-flights-A.html#select",
    "href": "ae/ae-03-wrangling-flights-A.html#select",
    "title": "AE 03: Wrangling flights",
    "section": "select()",
    "text": "select()\n\nDemo: Make a data frame that only contains the variables dep_delay and arr_delay.\n\n\nflights |>\n  select(dep_delay, arr_delay)\n\n# A tibble: 336,776 × 2\n   dep_delay arr_delay\n       <dbl>     <dbl>\n 1         2        11\n 2         4        20\n 3         2        33\n 4        -1       -18\n 5        -6       -25\n 6        -4        12\n 7        -5        19\n 8        -3       -14\n 9        -3        -8\n10        -2         8\n# … with 336,766 more rows\n\n\n\nDemo: Make a data frame that keeps every variable except dep_delay.\n\n\nflights |>\n  select(-dep_delay)\n\n# A tibble: 336,776 × 18\n    year month   day dep_time sched_dep…¹ arr_t…² sched…³ arr_d…⁴ carrier flight\n   <int> <int> <int>    <int>       <int>   <int>   <int>   <dbl> <chr>    <int>\n 1  2013     1     1      517         515     830     819      11 UA        1545\n 2  2013     1     1      533         529     850     830      20 UA        1714\n 3  2013     1     1      542         540     923     850      33 AA        1141\n 4  2013     1     1      544         545    1004    1022     -18 B6         725\n 5  2013     1     1      554         600     812     837     -25 DL         461\n 6  2013     1     1      554         558     740     728      12 UA        1696\n 7  2013     1     1      555         600     913     854      19 B6         507\n 8  2013     1     1      557         600     709     723     -14 EV        5708\n 9  2013     1     1      557         600     838     846      -8 B6          79\n10  2013     1     1      558         600     753     745       8 AA         301\n# … with 336,766 more rows, 8 more variables: tailnum <chr>, origin <chr>,\n#   dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>, minute <dbl>,\n#   time_hour <dttm>, and abbreviated variable names ¹​sched_dep_time,\n#   ²​arr_time, ³​sched_arr_time, ⁴​arr_delay\n\n\n\nDemo: Make a data frame that includes all variables between year through dep_delay (inclusive). These are all variables that provide information about the departure of each flight.\n\n\nflights |>\n  select(year:dep_delay)\n\n# A tibble: 336,776 × 6\n    year month   day dep_time sched_dep_time dep_delay\n   <int> <int> <int>    <int>          <int>     <dbl>\n 1  2013     1     1      517            515         2\n 2  2013     1     1      533            529         4\n 3  2013     1     1      542            540         2\n 4  2013     1     1      544            545        -1\n 5  2013     1     1      554            600        -6\n 6  2013     1     1      554            558        -4\n 7  2013     1     1      555            600        -5\n 8  2013     1     1      557            600        -3\n 9  2013     1     1      557            600        -3\n10  2013     1     1      558            600        -2\n# … with 336,766 more rows\n\n\n\nDemo: Use the select helper contains() to make a data frame that includes the variables associated with the arrival, i.e., contains the string \"arr\\_\" in the name.\n\n\nflights |>\n  select(contains(\"arr_\"))\n\n# A tibble: 336,776 × 3\n   arr_time sched_arr_time arr_delay\n      <int>          <int>     <dbl>\n 1      830            819        11\n 2      850            830        20\n 3      923            850        33\n 4     1004           1022       -18\n 5      812            837       -25\n 6      740            728        12\n 7      913            854        19\n 8      709            723       -14\n 9      838            846        -8\n10      753            745         8\n# … with 336,766 more rows"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights-A.html#the-pipe",
    "href": "ae/ae-03-wrangling-flights-A.html#the-pipe",
    "title": "AE 03: Wrangling flights",
    "section": "The pipe",
    "text": "The pipe\nBefore working with more data wrangling functions, let’s formally introduce the pipe. The pipe, |>, is an operator (a tool) for passing information from one process to another. We will use |> mainly in data pipelines to pass the output of the previous line of code as the first input of the next line of code.\nWhen reading code “in English”, say “and then” whenever you see a pipe.\n\nYour turn (4 minutes): Run the following chunk and observe its output. Then, come up with a different way of obtaining the same output.\n\n\nflights |>\n  select(dep_delay, arr_delay) |>\n  head()\n\n# A tibble: 6 × 2\n  dep_delay arr_delay\n      <dbl>     <dbl>\n1         2        11\n2         4        20\n3         2        33\n4        -1       -18\n5        -6       -25\n6        -4        12"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights-A.html#slice",
    "href": "ae/ae-03-wrangling-flights-A.html#slice",
    "title": "AE 03: Wrangling flights",
    "section": "slice()",
    "text": "slice()\n\nDemo: Display the first five rows of the flights data frame.\n\n\nflights |>\n  slice(1:5)\n\n# A tibble: 5 × 19\n   year month   day dep_time sched_dep…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n  <int> <int> <int>    <int>       <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n1  2013     1     1      517         515       2     830     819      11 UA     \n2  2013     1     1      533         529       4     850     830      20 UA     \n3  2013     1     1      542         540       2     923     850      33 AA     \n4  2013     1     1      544         545      -1    1004    1022     -18 B6     \n5  2013     1     1      554         600      -6     812     837     -25 DL     \n# … with 9 more variables: flight <int>, tailnum <chr>, origin <chr>,\n#   dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>, minute <dbl>,\n#   time_hour <dttm>, and abbreviated variable names ¹​sched_dep_time,\n#   ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n\n\n\nDemo: Display the last two rows of the flights data frame.\n\n\nflights |>\n  slice((n()-1):n())\n\n# A tibble: 2 × 19\n   year month   day dep_time sched_dep…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n  <int> <int> <int>    <int>       <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n1  2013     9    30       NA        1159      NA      NA    1344      NA MQ     \n2  2013     9    30       NA         840      NA      NA    1020      NA MQ     \n# … with 9 more variables: flight <int>, tailnum <chr>, origin <chr>,\n#   dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>, minute <dbl>,\n#   time_hour <dttm>, and abbreviated variable names ¹​sched_dep_time,\n#   ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights-A.html#arrange",
    "href": "ae/ae-03-wrangling-flights-A.html#arrange",
    "title": "AE 03: Wrangling flights",
    "section": "arrange()",
    "text": "arrange()\n\nDemo: Let’s arrange the data by departure delay, so the flights with the shortest departure delays will be at the top of the data frame.\n\nQuestion: What does it mean for the dep_delay to have a negative value?\n\nflights |>\n  arrange(dep_delay)\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013    12     7     2040       2123     -43      40    2352      48 B6     \n 2  2013     2     3     2022       2055     -33    2240    2338     -58 DL     \n 3  2013    11    10     1408       1440     -32    1549    1559     -10 EV     \n 4  2013     1    11     1900       1930     -30    2233    2243     -10 DL     \n 5  2013     1    29     1703       1730     -27    1947    1957     -10 F9     \n 6  2013     8     9      729        755     -26    1002     955       7 MQ     \n 7  2013    10    23     1907       1932     -25    2143    2143       0 EV     \n 8  2013     3    30     2030       2055     -25    2213    2250     -37 MQ     \n 9  2013     3     2     1431       1455     -24    1601    1631     -30 9E     \n10  2013     5     5      934        958     -24    1225    1309     -44 B6     \n# … with 336,766 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n\n\n\nDemo: Now let’s arrange the data by descending departure delay, so the flights with the longest departure delays will be at the top.\n\n\nflights |>\n  arrange(desc(dep_delay))\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013     1     9      641        900    1301    1242    1530    1272 HA     \n 2  2013     6    15     1432       1935    1137    1607    2120    1127 MQ     \n 3  2013     1    10     1121       1635    1126    1239    1810    1109 MQ     \n 4  2013     9    20     1139       1845    1014    1457    2210    1007 AA     \n 5  2013     7    22      845       1600    1005    1044    1815     989 MQ     \n 6  2013     4    10     1100       1900     960    1342    2211     931 DL     \n 7  2013     3    17     2321        810     911     135    1020     915 DL     \n 8  2013     6    27      959       1900     899    1236    2226     850 DL     \n 9  2013     7    22     2257        759     898     121    1026     895 DL     \n10  2013    12     5      756       1700     896    1058    2020     878 AA     \n# … with 336,766 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n\n\n\nYour turn (5 minutes): Create a data frame that only includes the plane tail number (tailnum), carrier (carrier), and departure delay for the flight with the longest departure delay. What is the plane tail number (tailnum) for this flight? Share your response on Slack on the relevant thread on #general using code formatting.\n\n\nflights |>\n  select(tailnum, carrier, dep_delay) %>%\n  arrange(dep_delay) |>\n  slice(1)\n\n# A tibble: 1 × 3\n  tailnum carrier dep_delay\n  <chr>   <chr>       <dbl>\n1 N592JB  B6            -43"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights-A.html#filter",
    "href": "ae/ae-03-wrangling-flights-A.html#filter",
    "title": "AE 03: Wrangling flights",
    "section": "filter()",
    "text": "filter()\n\nDemo: Filter the data frame by selecting the rows where the destination airport is RDU.\n\n\nflights |>\n  filter(dest == \"RDU\")\n\n# A tibble: 8,163 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013     1     1      800        810     -10     949     955      -6 MQ     \n 2  2013     1     1      832        840      -8    1006    1030     -24 MQ     \n 3  2013     1     1      851        851       0    1032    1036      -4 EV     \n 4  2013     1     1      917        920      -3    1052    1108     -16 B6     \n 5  2013     1     1     1024       1030      -6    1204    1215     -11 MQ     \n 6  2013     1     1     1127       1129      -2    1303    1309      -6 EV     \n 7  2013     1     1     1157       1205      -8    1342    1345      -3 MQ     \n 8  2013     1     1     1240       1235       5    1415    1415       0 MQ     \n 9  2013     1     1     1317       1325      -8    1454    1505     -11 MQ     \n10  2013     1     1     1449       1450      -1    1651    1640      11 MQ     \n# … with 8,153 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n\n\n\nDemo: We can also filter using more than one condition. Here we select all rows where the destination airport is RDU and the arrival delay is less than 0.\n\n\nflights |>\n  filter(dest == \"RDU\", arr_delay < 0)\n\n# A tibble: 4,232 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013     1     1      800        810     -10     949     955      -6 MQ     \n 2  2013     1     1      832        840      -8    1006    1030     -24 MQ     \n 3  2013     1     1      851        851       0    1032    1036      -4 EV     \n 4  2013     1     1      917        920      -3    1052    1108     -16 B6     \n 5  2013     1     1     1024       1030      -6    1204    1215     -11 MQ     \n 6  2013     1     1     1127       1129      -2    1303    1309      -6 EV     \n 7  2013     1     1     1157       1205      -8    1342    1345      -3 MQ     \n 8  2013     1     1     1317       1325      -8    1454    1505     -11 MQ     \n 9  2013     1     1     1505       1510      -5    1654    1655      -1 MQ     \n10  2013     1     1     1800       1800       0    1945    1951      -6 B6     \n# … with 4,222 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n\n\nWe can do more complex tasks using logical operators:\n\n\n\noperator\ndefinition\n\n\n\n\n<\nis less than?\n\n\n<=\nis less than or equal to?\n\n\n>\nis greater than?\n\n\n>=\nis greater than or equal to?\n\n\n==\nis exactly equal to?\n\n\n!=\nis not equal to?\n\n\nx & y\nis x AND y?\n\n\nx \\| y\nis x OR y?\n\n\nis.na(x)\nis x NA?\n\n\n!is.na(x)\nis x not NA?\n\n\nx %in% y\nis x in y?\n\n\n!(x %in% y)\nis x not in y?\n\n\n!x\nis not x?\n\n\n\nThe final operator only makes sense if x is logical (TRUE / FALSE).\n\nYour turn (4 minutes): Describe what the code is doing in words. Share your response on Slack on the relevant thread on #general.\n\n\nflights |>\n  filter(\n    dest %in% c(\"RDU\", \"GSO\"),\n    arr_delay < 0 | dep_delay < 0\n    )\n\n# A tibble: 6,203 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013     1     1      800        810     -10     949     955      -6 MQ     \n 2  2013     1     1      832        840      -8    1006    1030     -24 MQ     \n 3  2013     1     1      851        851       0    1032    1036      -4 EV     \n 4  2013     1     1      917        920      -3    1052    1108     -16 B6     \n 5  2013     1     1     1024       1030      -6    1204    1215     -11 MQ     \n 6  2013     1     1     1127       1129      -2    1303    1309      -6 EV     \n 7  2013     1     1     1157       1205      -8    1342    1345      -3 MQ     \n 8  2013     1     1     1317       1325      -8    1454    1505     -11 MQ     \n 9  2013     1     1     1449       1450      -1    1651    1640      11 MQ     \n10  2013     1     1     1505       1510      -5    1654    1655      -1 MQ     \n# … with 6,193 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights-A.html#count",
    "href": "ae/ae-03-wrangling-flights-A.html#count",
    "title": "AE 03: Wrangling flights",
    "section": "count()",
    "text": "count()\n\nDemo: Create a frequency table of the destination locations for flights from New York.\n\n\nflights |>\n  count(dest)\n\n# A tibble: 105 × 2\n   dest      n\n   <chr> <int>\n 1 ABQ     254\n 2 ACK     265\n 3 ALB     439\n 4 ANC       8\n 5 ATL   17215\n 6 AUS    2439\n 7 AVL     275\n 8 BDL     443\n 9 BGR     375\n10 BHM     297\n# … with 95 more rows\n\n\n\nDemo: In which month was there the fewest number of flights? How many flights were there in that month?\n\n\nflights |>\n  count(month) |>\n  filter(n == min(n))\n\n# A tibble: 1 × 2\n  month     n\n  <int> <int>\n1     2 24951\n\n\n\nYour turn (5 minutes): On which date (month + day) was there the largest number of flights? How many flights were there on that day? Share your response on Slack on the relevant thread on #general using code formatting.\n\n\nflights |>\n  count(month, day) |>\n  filter(n == min(n))\n\n# A tibble: 1 × 3\n  month   day     n\n  <int> <int> <int>\n1    11    28   634"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights-A.html#mutate",
    "href": "ae/ae-03-wrangling-flights-A.html#mutate",
    "title": "AE 03: Wrangling flights",
    "section": "mutate()",
    "text": "mutate()\nUse mutate() to create a new variable.\n\nDemo: In the code chunk below, air_time (minutes in the air) is converted to hours, and then new variable mph is created, corresponding to the miles per hour of the flight.\n\n\nflights |>\n  mutate(\n    hours = air_time / 60,\n    mph = distance / hours\n    ) |>\n  select(air_time, distance, hours, mph)\n\n# A tibble: 336,776 × 4\n   air_time distance hours   mph\n      <dbl>    <dbl> <dbl> <dbl>\n 1      227     1400 3.78   370.\n 2      227     1416 3.78   374.\n 3      160     1089 2.67   408.\n 4      183     1576 3.05   517.\n 5      116      762 1.93   394.\n 6      150      719 2.5    288.\n 7      158     1065 2.63   404.\n 8       53      229 0.883  259.\n 9      140      944 2.33   405.\n10      138      733 2.3    319.\n# … with 336,766 more rows\n\n\n\nYour turn (4 minutes): Create a new variable to calculate the percentage of flights in each month. What percentage of flights take place in July?\n\n\nflights |>\n  count(month) |>\n  mutate(perc = n / sum(n) * 100)\n\n# A tibble: 12 × 3\n   month     n  perc\n   <int> <int> <dbl>\n 1     1 27004  8.02\n 2     2 24951  7.41\n 3     3 28834  8.56\n 4     4 28330  8.41\n 5     5 28796  8.55\n 6     6 28243  8.39\n 7     7 29425  8.74\n 8     8 29327  8.71\n 9     9 27574  8.19\n10    10 28889  8.58\n11    11 27268  8.10\n12    12 28135  8.35"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights-A.html#summarize",
    "href": "ae/ae-03-wrangling-flights-A.html#summarize",
    "title": "AE 03: Wrangling flights",
    "section": "summarize()",
    "text": "summarize()\nsummarize() collapses the rows into summary statistics and removes columns irrelevant to the calculation.\nBe sure to name your columns!\n\nflights |>\n  summarize(mean_dep_delay = mean(dep_delay))\n\n# A tibble: 1 × 1\n  mean_dep_delay\n           <dbl>\n1             NA\n\n\nQuestion: Why did this code return NA?\nLet’s fix it!\n\nflights |>\n  summarize(mean_dep_delay = mean(dep_delay, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  mean_dep_delay\n           <dbl>\n1           12.6"
  },
  {
    "objectID": "ae/ae-03-wrangling-flights-A.html#group_by",
    "href": "ae/ae-03-wrangling-flights-A.html#group_by",
    "title": "AE 03: Wrangling flights",
    "section": "group_by()",
    "text": "group_by()\ngroup_by() is used for grouped operations. It’s very powerful when paired with summarise() to calculate summary statistics by group.\nHere we find the mean and standard deviation of departure delay for each month.\n\nflights |>\n  group_by(month) |>\n  summarize(\n    mean_dep_delay = mean(dep_delay, na.rm = TRUE), \n    sd_dep_delay = sd(dep_delay, na.rm = TRUE)\n    )\n\n# A tibble: 12 × 3\n   month mean_dep_delay sd_dep_delay\n   <int>          <dbl>        <dbl>\n 1     1          10.0          36.4\n 2     2          10.8          36.3\n 3     3          13.2          40.1\n 4     4          13.9          43.0\n 5     5          13.0          39.4\n 6     6          20.8          51.5\n 7     7          21.7          51.6\n 8     8          12.6          37.7\n 9     9           6.72         35.6\n10    10           6.24         29.7\n11    11           5.44         27.6\n12    12          16.6          41.9\n\n\n\nYour turn (4 minutes): What is the median departure delay for each airports around NYC (origin)? Which airport has the shortest median departure delay? Share your response on Slack on the relevant thread.\n\n\nflights |>\n  group_by(origin) |>\n  summarize(\n    med_dep_delay = median(dep_delay, na.rm = TRUE)\n    )\n\n# A tibble: 3 × 2\n  origin med_dep_delay\n  <chr>          <dbl>\n1 EWR               -1\n2 JFK               -1\n3 LGA               -3"
  },
  {
    "objectID": "project-tips-resources.html",
    "href": "project-tips-resources.html",
    "title": "Project tips + resources",
    "section": "",
    "text": "To be posted."
  },
  {
    "objectID": "computing-access.html",
    "href": "computing-access.html",
    "title": "Computing access",
    "section": "",
    "text": "If this is your first time accessing the containers, click on reserve STA198-199 on the Reservations available menu on the right. You only need to do this once, and when you do, you’ll see this container moved to the My reservations menu on the left.\nNext, click on STA198-199 under My reservations to access the RStudio instance you’ll use for the course."
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "Course overview",
    "section": "",
    "text": "Intro to data science and statistical thinking. Learn to explore, visualize, and analyze data to understand natural phenomena, investigate patterns, model outcomes, and make predictions, and do so in a reproducible and shareable manner. Gain experience in data wrangling and munging, exploratory data analysis, predictive modeling, and data visualization, and effective communication of results. Work on problems and case studies inspired by and based on real-world questions and data. The course will focus on the R statistical computing language. No statistical or computing background is necessary. Not open to students who have taken a 100-level Statistical Science course, Statistical Science 210, or a Statistical Science course numbered 300 or above."
  },
  {
    "objectID": "course-overview.html#class-meetings",
    "href": "course-overview.html#class-meetings",
    "title": "Course overview",
    "section": "Class meetings",
    "text": "Class meetings\n\n\n\n\n\n\n\n\nMeeting\nLocation\nTime\n\n\n\n\nLecture\nFrench Science 2231\nTue & Thur 10:15 - 11:30 am\n\n\nLab 01\nPerkins Link 087 (Classroom 3)\nMon 10:15 - 11:30 am\n\n\nLab 02\nPerkins Link 087 (Classroom 3)\nMon 1:45 - 3:00 pm\n\n\nLab 03\nPerkins Link 087 (Classroom 3)\nMon 3:30 - 4:45 pm\n\n\nLab 04\nPerkins Link 087 (Classroom 3)\nMon 5:15 - 6:30 pm\n\n\nLab 05\nPerkins Link 087 (Classroom 3)\nMon 12:00 - 1:15 pm"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STA 199: Introduction to Data Science",
    "section": "",
    "text": "week\n      dow\n      date\n      what\n      topic\n      prepare\n      slides\n      ae\n      ae_key\n      hw\n      lab\n      exam\n      project\n      notes\n    \n  \n  \n    1\nM\n29 August\nLab\nNo lab\n\n\n\n\n\n\n\n\n\n    \nT\n30 August\nLec 1\nWelcome to STA 199\n\n\n\n\n\n\n\n\n\n    \nTh\n1 September\nLec 2\nMeet the toolkit\n\n\n\n\n\n\n\n\n\n    2\nM\n5 September\nLab 0\nHello R!\n\n\n\n\n\n\n\n\nRelease: Lab 0\n    \nT\n6 September\nLec 3\nGrammar of graphics\n\n\n\n\n\n\n\n\n\n    \nTh\n8 September\nLec 4\nVisualizing various types of data\n\n\n\n\n\n\n\n\nRelease: HW 1\n    \nF\n9 September\n\n\n\n\n\n\n\n\n\n\nDue: Lab 0 + AE 1\n    \nSu\n11 September\n\n\n\n\n\n\n\n\n\n\nDue: AE 2\n    3\nM\n12 September\nLab 1\nData visualization\n\n\n\n\n\n\n\n\nRelease: Lab 1\n    \nT\n13 September\nLec 5\nGrammar of data wrangling\n\n\n\n\n\n\n\n\n\n    \nTh\n15 September\nLec 6\nWorking with multiple data frames\n\n\n\n\n\n\n\n\nDue: HW 1 / Release: HW 2\n    \nF\n16 September\n\n\n\n\n\n\n\n\n\n\nDue: Lab 1\n    4\nM\n19 September\nLab 2\nData wrangling\n\n\n\n\n\n\n\n\nRelease: Lab 3\n    \nT\n20 September\nLec 7\nTidying data\n\n\n\n\n\n\n\n\n\n    \nTh\n22 September\nLec 8\nData types and classes\n\n\n\n\n\n\n\n\nDue HW 2\n    \nF\n23 September\n\n\n\n\n\n\n\n\n\n\nDue: Lab 2\n    5\nM\n26 September\nLab 3\nData tidying\n\n\n\n\n\n\n\n\nRelease: Lab 3\n    \nT\n27 September\nLec 9\nImporting and recoding data\n\n\n\n\n\n\n\n\n\n    \nTh\n29 September\nLec 10\nTips: Effective data visualization + troubleshooting + debugging\n\n\n\n\n\n\n\n\nRelease: Exam 1 at 12pm\n    \nF\n30 September\n\n\n\n\n\n\n\n\n\n\nDue: Lab 3\n    6\nM\n3 October\nLab\nNo lab - Work on Exam 1\n\n\n\n\n\n\n\n\nDue: Exam 1 at 2pm\n    \nT\n4 October\nLec 11\nWeb scraping\n\n\n\n\n\n\n\n\n\n    \nTh\n6 October\nLec 12\nFunctions + iteration\n\n\n\n\n\n\n\n\nRelease: HW 3\n    7\nM\n10 October\nLab\nNo lab - Fall break\n\n\n\n\n\n\n\n\n\n    \nT\n11 October\nLecture\nNo Lec - Fall break\n\n\n\n\n\n\n\n\n\n    \nTh\n13 October\nLec 13\nData science ethics\n\n\n\n\n\n\n\n\nDue: HW 3\n    8\nM\n17 October\nLab\nWork on project proposal\n\n\n\n\n\n\n\n\n\n    \nT\n18 October\nLec 14\nProbability + Simpson's Paradox\n\n\n\n\n\n\n\n\n\n    \nTh\n20 October\nLec 15\nThe language of models\n\n\n\n\n\n\n\n\n\n    \nF\n21 October\n\n\n\n\n\n\n\n\n\n\nDue: Project proposal\n    9\nM\n24 October\nLab 4\nExploratory data analysis\n\n\n\n\n\n\n\n\nRelease: Lab 4\n    \nT\n25 October\nLec 16\nModels with a single predictor\n\n\n\n\n\n\n\n\n\n    \nTh\n27 October\nLec 17\nModels with multiple predictors\n\n\n\n\n\n\n\n\nRelease: HW 4\n    \nF\n28 October\n\n\n\n\n\n\n\n\n\n\nDue: Lab 4\n    10\nM\n31 October\nLab 5\nPredicting a numerical outcome\n\n\n\n\n\n\n\n\nRelease: Lab 5\n    \nT\n1 November\nLec 18\nLogistic regression\n\n\n\n\n\n\n\n\n\n    \nTh\n3 November\nLec 19\nPrediction and overfitting\n\n\n\n\n\n\n\n\nDue: HW 4 / Release: HW 5\n    \nF\n4 November\n\n\n\n\n\n\n\n\n\n\nDue: Lab 5\n    11\nM\n7 November\nLab 6\nPredicting a categorical outcome\n\n\n\n\n\n\n\n\nRelease: Lab 6\n    \nT\n8 November\nLec 20\nQuantifying uncertainty\n\n\n\n\n\n\n\n\n\n    \nTh\n10 November\nLec 21\nEstimation with bootstrap intervals\n\n\n\n\n\n\n\n\nDue: HW 5\n    \nF\n11 November\n\n\n\n\n\n\n\n\n\n\nDue: Lab 6\n    12\nM\n14 November\nLab 7\nBootstrapping\n\n\n\n\n\n\n\n\nRelease: Lab 7\n    \nT\n15 November\nLec 22\nHypothesis testing via simulation\n\n\n\n\n\n\n\n\n\n    \nTh\n17 November\nLec 23\nSimulation based inference overview\n\n\n\n\n\n\n\n\nRelease: Exam 2 at 12pm\n    \nF\n18 November\n\n\n\n\n\n\n\n\n\n\nDue: Lab 7\n    13\nM\n21 November\nLab\nNo lab - Work on Exam 1\n\n\n\n\n\n\n\n\nDue: Exam 2 at 2pm\n    \nT\n22 November\nLec 24\nInference with the Central Limit Theorem\n\n\n\n\n\n\n\n\n\n    \nTh\n24 November\nLecture\nNo lab - Thanksgiving\n\n\n\n\n\n\n\n\nDue: Project draft due\n    14\nM\n28 November\nLab\nProject peer review\n\n\n\n\n\n\n\n\n\n    \nT\n29 November\nLec 25\nCustomizing Quarto reports and presentations\n\n\n\n\n\n\n\n\n\n    \nTh\n1 December\nLec 26\nCommunicating data science results effectively\n\n\n\n\n\n\n\n\n\n    15\nM\n5 December\nLab\nProject presentations\n\n\n\n\n\n\n\n\n\n    \nT\n6 December\nLec 25\nLooking further topic 1\n\n\n\n\n\n\n\n\n\n    \nTh\n8 December\nLec 26\nLooking further topic 2\n\n\n\n\n\n\n\n\nDue: Project everything\n    \nF\n9 December\n\n\n\n\n\n\n\n\n\n\nDue: HW 6 / Statistics experience"
  },
  {
    "objectID": "course-team.html",
    "href": "course-team.html",
    "title": "Teaching team",
    "section": "",
    "text": "Dr. Mine Çetinkaya-Rundel (she/her) is Professor of the Practice and Director of Undergraduate Studies at the Department of Statistical Science at Duke University. Mine’s work focuses on innovation in statistics and data science pedagogy, with an emphasis on computing, reproducible research, student-centered learning, and open-source education as well as pedagogical approaches for enhancing retention of women and under-represented minorities in STEM. Mine also works with RStudio as a Developer Educator.\n\n\n\nOffice hours\nLocation\n\n\n\n\nTue 2 pm - 4 pm\nOld Chem 213"
  },
  {
    "objectID": "course-team.html#teaching-assistants",
    "href": "course-team.html#teaching-assistants",
    "title": "Teaching team",
    "section": "Teaching assistants",
    "text": "Teaching assistants\n\n\n\n\n\n\n\n\nName\nRole\nLab section\n\n\n\n\nBora Jin\nTA / Course organizer\nM 10:15AM - 11:30AM\n\n\nJordan Bryan\nHead TA\nM 1:45PM - 3:00PM\n\n\nRichard Fremgen\nTA\nM 3:30PM - 4:45PM\n\n\nLeah Johnson\nTA\nM 5:15PM - 6:30PM\n\n\nAlison Reynolds\nTA\nM 12:00PM - 1:15PM\n\n\nFoxx Hart\nTA\n\n\n\nAlonso Guerrero Castaneda\nTA\n\n\n\nJasmine Wen\nTA\n\n\n\nBrooke Harmon\nTA\n\n\n\nAmber Potter\nTA\n\n\n\nOne Chowdhury\nTA\n\n\n\n\nFor office hours, please see STA 199 - Ultimate Office Hours sheet."
  },
  {
    "objectID": "slides/01-welcome-199.html#meet-the-prof",
    "href": "slides/01-welcome-199.html#meet-the-prof",
    "title": "Welcome to STA 199",
    "section": "Meet the prof",
    "text": "Meet the prof\n\n\nDr. Mine Çetinkaya-Rundel\nProfessor of the Practice\nOld Chem 213"
  },
  {
    "objectID": "slides/01-welcome-199.html#meet-the-course-team",
    "href": "slides/01-welcome-199.html#meet-the-course-team",
    "title": "Welcome to STA 199",
    "section": "Meet the course team",
    "text": "Meet the course team\n\nFoxx Hart - Lecture helper\nBora Jin - Course organizer, lab leader\nJordan Bryan - Head TA, lab leader\nRichard Fremgen - Lab leader\nLeah Johnson - Lab leader\nAlison Reynolds - Lab leader\nBrooke Harmon - Lab helper\nJasmine Wen - Lab helper\nAmber Potter - Lab helper\nShawon (One) Chowdhury - Lab helper\nGaurav Sirdeshmukh - Lab helper"
  },
  {
    "objectID": "slides/01-welcome-199.html#meet-each-other",
    "href": "slides/01-welcome-199.html#meet-each-other",
    "title": "Welcome to STA 199",
    "section": "Meet each other!",
    "text": "Meet each other!\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/01-welcome-199.html#meet-data-science",
    "href": "slides/01-welcome-199.html#meet-data-science",
    "title": "Welcome to STA 199",
    "section": "Meet data science",
    "text": "Meet data science\n\nData science is an exciting discipline that allows you to turn raw data into understanding, insight, and knowledge.\nWe’re going to learn to do this in a tidy way – more on that later!\nThis is a course on introduction to data science, with an emphasis on statistical thinking."
  },
  {
    "objectID": "slides/01-welcome-199.html#excel---not",
    "href": "slides/01-welcome-199.html#excel---not",
    "title": "Welcome to STA 199",
    "section": "Excel - not…",
    "text": "Excel - not…"
  },
  {
    "objectID": "slides/01-welcome-199.html#r",
    "href": "slides/01-welcome-199.html#r",
    "title": "Welcome to STA 199",
    "section": "R",
    "text": "R"
  },
  {
    "objectID": "slides/01-welcome-199.html#rstudio",
    "href": "slides/01-welcome-199.html#rstudio",
    "title": "Welcome to STA 199",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/01-welcome-199.html#data-science-life-cycle-1",
    "href": "slides/01-welcome-199.html#data-science-life-cycle-1",
    "title": "Welcome to STA 199",
    "section": "Data science life cycle",
    "text": "Data science life cycle"
  },
  {
    "objectID": "slides/01-welcome-199.html#import",
    "href": "slides/01-welcome-199.html#import",
    "title": "Welcome to STA 199",
    "section": "Import",
    "text": "Import"
  },
  {
    "objectID": "slides/01-welcome-199.html#tidy-transform",
    "href": "slides/01-welcome-199.html#tidy-transform",
    "title": "Welcome to STA 199",
    "section": "Tidy + transform",
    "text": "Tidy + transform"
  },
  {
    "objectID": "slides/01-welcome-199.html#visualize",
    "href": "slides/01-welcome-199.html#visualize",
    "title": "Welcome to STA 199",
    "section": "Visualize",
    "text": "Visualize"
  },
  {
    "objectID": "slides/01-welcome-199.html#model",
    "href": "slides/01-welcome-199.html#model",
    "title": "Welcome to STA 199",
    "section": "Model",
    "text": "Model"
  },
  {
    "objectID": "slides/01-welcome-199.html#understand",
    "href": "slides/01-welcome-199.html#understand",
    "title": "Welcome to STA 199",
    "section": "Understand",
    "text": "Understand"
  },
  {
    "objectID": "slides/01-welcome-199.html#section",
    "href": "slides/01-welcome-199.html#section",
    "title": "Welcome to STA 199",
    "section": "",
    "text": "# A tibble: 5 × 2\n  date             season\n  <chr>            <chr> \n1 23 January 2017  winter\n2 4 March 2017     spring\n3 14 June 2017     summer\n4 1 September 2017 fall  \n5 ...              ..."
  },
  {
    "objectID": "slides/01-welcome-199.html#communicate",
    "href": "slides/01-welcome-199.html#communicate",
    "title": "Welcome to STA 199",
    "section": "Communicate",
    "text": "Communicate"
  },
  {
    "objectID": "slides/01-welcome-199.html#understand-communicate",
    "href": "slides/01-welcome-199.html#understand-communicate",
    "title": "Welcome to STA 199",
    "section": "Understand + communicate",
    "text": "Understand + communicate"
  },
  {
    "objectID": "slides/01-welcome-199.html#program",
    "href": "slides/01-welcome-199.html#program",
    "title": "Welcome to STA 199",
    "section": "Program",
    "text": "Program"
  },
  {
    "objectID": "slides/01-welcome-199.html#application-exercise",
    "href": "slides/01-welcome-199.html#application-exercise",
    "title": "Welcome to STA 199",
    "section": "Application exercise",
    "text": "Application exercise\n\nOr more like demo for today…\n📋 github.com/sta199-f22-1/ae-0-unvotes"
  },
  {
    "objectID": "slides/01-welcome-199.html#homepage",
    "href": "slides/01-welcome-199.html#homepage",
    "title": "Welcome to STA 199",
    "section": "Homepage",
    "text": "Homepage\nhttps://sta199-f22-1.github.io/\n\nAll course materials\nLinks to Sakai, GitHub, RStudio containers, etc.\nLet’s take a tour!"
  },
  {
    "objectID": "slides/01-welcome-199.html#course-toolkit",
    "href": "slides/01-welcome-199.html#course-toolkit",
    "title": "Welcome to STA 199",
    "section": "Course toolkit",
    "text": "Course toolkit\nAll linked from the course website:\n\nGitHub organization: github.com/sta199-f22-1\nRStudio containers: cmgr.oit.duke.edu/containers\nCommunication: Slack\nAssignment submission and feedback: Gradescope\n\n\n\n\n\n\n\nImportant\n\n\nReserve an RStudio Container (titled STA 198-199) before lab on Monday!"
  },
  {
    "objectID": "slides/01-welcome-199.html#activities-prepare-participate-practice-perform",
    "href": "slides/01-welcome-199.html#activities-prepare-participate-practice-perform",
    "title": "Welcome to STA 199",
    "section": "Activities: Prepare, Participate, Practice, Perform",
    "text": "Activities: Prepare, Participate, Practice, Perform\n\nPrepare: Introduce new content and prepare for lectures by watching the videos and completing the readings\nParticipate: Attend and actively participate in lectures and labs, office hours, team meetings\nPractice: Practice applying statistical concepts and computing with application exercises during lecture, graded for completion\nPerform: Put together what you’ve learned to analyze real-world data\n\nLab assignments x 7 (first individual, later team-based)\nHomework assignments x 5 (individual)\nThree take-home exams x 2\nTerm project presented in the last lab session"
  },
  {
    "objectID": "slides/01-welcome-199.html#cadence",
    "href": "slides/01-welcome-199.html#cadence",
    "title": "Welcome to STA 199",
    "section": "Cadence",
    "text": "Cadence\n\n\nLabs: Start and make large progress on Monday in lab section, finish up by Friday 5pm of that week\nHWs: Posted Thursday morning, due following Thursday\nExams: Exam released Thursday morning, no lab on Monday of following week, due Monday 2pm\nProject: Deadlines throughout the semester, with some lab and lecture time dedicated to working on them, and most work done in teams outside of class"
  },
  {
    "objectID": "slides/01-welcome-199.html#teams",
    "href": "slides/01-welcome-199.html#teams",
    "title": "Welcome to STA 199",
    "section": "Teams",
    "text": "Teams\n\nTeam assignments\n\nAssigned by me\nApplication exercises, labs, and project\nPeer evaluation during teamwork and after completion\n\nExpectations and roles\n\nEveryone is expected to contribute equal effort\nEveryone is expected to understand all code turned in\nIndividual contribution evaluated by peer evaluation, commits, etc."
  },
  {
    "objectID": "slides/01-welcome-199.html#grading",
    "href": "slides/01-welcome-199.html#grading",
    "title": "Welcome to STA 199",
    "section": "Grading",
    "text": "Grading\n\n\n\nCategory\nPercentage\n\n\n\n\nHomework\n30% (5% x 6)\n\n\nLabs\n14% (2% x 7)\n\n\nProject\n15%\n\n\nExam 01\n18%\n\n\nExam 02\n18%\n\n\nApplication Exercises\n2.5%\n\n\nTeamwork\n2.5%\n\n\n\nSee course syllabus for how the final letter grade will be determined."
  },
  {
    "objectID": "slides/01-welcome-199.html#support",
    "href": "slides/01-welcome-199.html#support",
    "title": "Welcome to STA 199",
    "section": "Support",
    "text": "Support\n\nAttend office hours\nAsk and answer questions on the discussion forum\nReserve email for questions on personal matters and/or grades\nRead the course support page"
  },
  {
    "objectID": "slides/01-welcome-199.html#announcements",
    "href": "slides/01-welcome-199.html#announcements",
    "title": "Welcome to STA 199",
    "section": "Announcements",
    "text": "Announcements\n\nPosted on Sakai (Announcements tool) and sent via email, be sure to check both regularly\nI’ll assume that you’ve read an announcement by the next “business” day\nI’ll (try my best to) send a weekly update announcement each Friday, outlining the plan for the following week and reminding you what you need to do to prepare, practice, and perform"
  },
  {
    "objectID": "slides/01-welcome-199.html#diversity-inclusion",
    "href": "slides/01-welcome-199.html#diversity-inclusion",
    "title": "Welcome to STA 199",
    "section": "Diversity + inclusion",
    "text": "Diversity + inclusion\nIt is my intent that students from all diverse backgrounds and perspectives be well-served by this course, that students’ learning needs be addressed both in and out of class, and that the diversity that the students bring to this class be viewed as a resource, strength and benefit.\n\n\nPlease let me know your preferred name and pronouns on the Getting to know you survey.\nIf you feel like your performance in the class is being impacted by your experiences outside of class, please don’t hesitate to come and talk with me. I want to be a resource for you. If you prefer to speak with someone outside of the course, your advisors and deans are excellent resources.\nI (like many people) am still in the process of learning about diverse perspectives and identities. If something was said in class (by anyone) that made you feel uncomfortable, please talk to me about it."
  },
  {
    "objectID": "slides/01-welcome-199.html#accessibility",
    "href": "slides/01-welcome-199.html#accessibility",
    "title": "Welcome to STA 199",
    "section": "Accessibility",
    "text": "Accessibility\n\nThe Student Disability Access Office (SDAO) is available to ensure that students are able to engage with their courses and related assignments.\nI am committed to making all course materials accessible and I’m always learning how to do this better. If any course component is not accessible to you in any way, please don’t hesitate to let me know."
  },
  {
    "objectID": "slides/01-welcome-199.html#covid-policies",
    "href": "slides/01-welcome-199.html#covid-policies",
    "title": "Welcome to STA 199",
    "section": "COVID policies",
    "text": "COVID policies\n\nWear a mask at all times!\nRead and follow university guidance"
  },
  {
    "objectID": "slides/01-welcome-199.html#late-work-waivers-regrades-policy",
    "href": "slides/01-welcome-199.html#late-work-waivers-regrades-policy",
    "title": "Welcome to STA 199",
    "section": "Late work, waivers, regrades policy",
    "text": "Late work, waivers, regrades policy\n\nWe have policies!\nRead about them on the course syllabus and refer back to them when you need it"
  },
  {
    "objectID": "slides/01-welcome-199.html#collaboration-policy",
    "href": "slides/01-welcome-199.html#collaboration-policy",
    "title": "Welcome to STA 199",
    "section": "Collaboration policy",
    "text": "Collaboration policy\n\nOnly work that is clearly assigned as team work should be completed collaboratively.\nHomeworks must be completed individually. You may not directly share answers / code with others, however you are welcome to discuss the problems in general and ask for advice.\nExams must be completed individually. You may not discuss any aspect of the exam with peers. If you have questions, post as private questions on the course forum, only the teaching team will see and answer."
  },
  {
    "objectID": "slides/01-welcome-199.html#sharing-reusing-code-policy",
    "href": "slides/01-welcome-199.html#sharing-reusing-code-policy",
    "title": "Welcome to STA 199",
    "section": "Sharing / reusing code policy",
    "text": "Sharing / reusing code policy\n\nWe are aware that a huge volume of code is available on the web, and many tasks may have solutions posted\nUnless explicitly stated otherwise, this course’s policy is that you may make use of any online resources (e.g. RStudio Community, StackOverflow, etc.) but you must explicitly cite where you obtained any code you directly use or use as inspiration in your solution(s).\nAny recycled code that is discovered and is not explicitly cited will be treated as plagiarism, regardless of source"
  },
  {
    "objectID": "slides/01-welcome-199.html#academic-integrity",
    "href": "slides/01-welcome-199.html#academic-integrity",
    "title": "Welcome to STA 199",
    "section": "Academic integrity",
    "text": "Academic integrity\n\nTo uphold the Duke Community Standard:\n\nI will not lie, cheat, or steal in my academic endeavors;\nI will conduct myself honorably in all my endeavors; and\nI will act if the Standard is compromised."
  },
  {
    "objectID": "slides/01-welcome-199.html#most-importantly",
    "href": "slides/01-welcome-199.html#most-importantly",
    "title": "Welcome to STA 199",
    "section": "Most importantly!",
    "text": "Most importantly!\nAsk if you’re not sure if something violates a policy!"
  },
  {
    "objectID": "slides/01-welcome-199.html#this-weeks-tasks",
    "href": "slides/01-welcome-199.html#this-weeks-tasks",
    "title": "Welcome to STA 199",
    "section": "This week’s tasks",
    "text": "This week’s tasks\n\nGet a GitHub account if you don’t have one (some advice for choosing a username here)\nComplete the Getting to know you survey if you haven’t yet done so!\nRead the syllabus"
  },
  {
    "objectID": "slides/01-welcome-199.html#midori-says",
    "href": "slides/01-welcome-199.html#midori-says",
    "title": "Welcome to STA 199",
    "section": "Midori says…",
    "text": "Midori says…"
  },
  {
    "objectID": "slides/01-welcome-199.html#its-the-r-community",
    "href": "slides/01-welcome-199.html#its-the-r-community",
    "title": "Welcome to STA 199",
    "section": "It’s the R community! 💛",
    "text": "It’s the R community! 💛\n\n\n\n\n\n\n\n\n🔗 sta199-f22-1.github.io"
  },
  {
    "objectID": "slides/04-visualizing-various-types-of-data.html#announcements",
    "href": "slides/04-visualizing-various-types-of-data.html#announcements",
    "title": "Visualizing various types of data",
    "section": "Announcements",
    "text": "Announcements\n\nHW 1 posted this evening, due 11:59pm on Thursday, Sep 15"
  },
  {
    "objectID": "slides/04-visualizing-various-types-of-data.html#wrap-up-ae-01",
    "href": "slides/04-visualizing-various-types-of-data.html#wrap-up-ae-01",
    "title": "Visualizing various types of data",
    "section": "Wrap up ae-01",
    "text": "Wrap up ae-01\n\nAny questions from Part 1?\nDemo: Part 2"
  },
  {
    "objectID": "slides/04-visualizing-various-types-of-data.html#identifying-variable-types",
    "href": "slides/04-visualizing-various-types-of-data.html#identifying-variable-types",
    "title": "Visualizing various types of data",
    "section": "Identifying variable types",
    "text": "Identifying variable types\n\nIdentify the type of each of the following variables.\n\nFavorite food\nNumber of classes you’re taking this semester\nZip code\nFull name\nAge\n\n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/04-visualizing-various-types-of-data.html#questions-from-the-prepare-materials",
    "href": "slides/04-visualizing-various-types-of-data.html#questions-from-the-prepare-materials",
    "title": "Visualizing various types of data",
    "section": "Questions from the prepare materials?",
    "text": "Questions from the prepare materials?"
  },
  {
    "objectID": "slides/04-visualizing-various-types-of-data.html#the-way-data-is-displayed-matters",
    "href": "slides/04-visualizing-various-types-of-data.html#the-way-data-is-displayed-matters",
    "title": "Visualizing various types of data",
    "section": "The way data is displayed matters",
    "text": "The way data is displayed matters\n\nWhat do these three plots show?\n\n\nSource: #barbarplots"
  },
  {
    "objectID": "slides/04-visualizing-various-types-of-data.html#ae-02",
    "href": "slides/04-visualizing-various-types-of-data.html#ae-02",
    "title": "Visualizing various types of data",
    "section": "ae-02",
    "text": "ae-02\n\n\nGo to the course GitHub org and find your ae-02 (repo name will be suffixed with your GitHub name).\nClone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\nRender, commit, and push your edits by the AE deadline – 3 days from today."
  },
  {
    "objectID": "slides/04-visualizing-various-types-of-data.html#recap-of-ae",
    "href": "slides/04-visualizing-various-types-of-data.html#recap-of-ae",
    "title": "Visualizing various types of data",
    "section": "Recap of AE",
    "text": "Recap of AE\n\nPick geoms based on data types.\nSet appropriate binwidths for histograms.\nTurn off legends when they provide redundant information with show.legend = FALSE.\nCreate plots with multiple geoms, and pay attention to order.\n\n\n\n\n🔗 sta199-f22-1.github.io"
  },
  {
    "objectID": "slides/03-grammar-of-graphics.html#announcements",
    "href": "slides/03-grammar-of-graphics.html#announcements",
    "title": "Grammar of graphics",
    "section": "Announcements",
    "text": "Announcements\n\nOffice hours start this week\n“Graded” AEs also start this week – commit and push to your repo within 3 days of AE"
  },
  {
    "objectID": "slides/03-grammar-of-graphics.html#examining-data-visualization",
    "href": "slides/03-grammar-of-graphics.html#examining-data-visualization",
    "title": "Grammar of graphics",
    "section": "Examining data visualization",
    "text": "Examining data visualization\n\n\nDiscuss the following for the visualization.\n\nWhat is the visualization trying to show?\nWhat is effective, i.e. what is done well?\nWhat is ineffective, i.e. what could be improved?\nWhat are you curious about after looking at the visualization?\n\n\n\n\n−+\n04:00\n\n\n\n\n\n\n\nSource: Twitter"
  },
  {
    "objectID": "slides/03-grammar-of-graphics.html#questions-from-the-prepare-materials",
    "href": "slides/03-grammar-of-graphics.html#questions-from-the-prepare-materials",
    "title": "Grammar of graphics",
    "section": "Questions from the prepare materials?",
    "text": "Questions from the prepare materials?"
  },
  {
    "objectID": "slides/03-grammar-of-graphics.html#ae-01",
    "href": "slides/03-grammar-of-graphics.html#ae-01",
    "title": "Grammar of graphics",
    "section": "ae-01",
    "text": "ae-01\n\n\nGo to the course GitHub org and find your ae-01 (repo name will be suffixed with your GitHub name).\nClone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\nRender, commit, and push your edits by the AE deadline – 3 days from today."
  },
  {
    "objectID": "slides/03-grammar-of-graphics.html#recap-of-ae",
    "href": "slides/03-grammar-of-graphics.html#recap-of-ae",
    "title": "Grammar of graphics",
    "section": "Recap of AE",
    "text": "Recap of AE\n\nConstruct plots with ggplot().\nLayers of ggplots are separated by +s.\nThe formula is (almost) always as follows:\n\n\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()\n\n\nAesthetic attributes of a geometries (color, size, transparency, etc.) can be mapped to variables in the data or set by the user, e.g. color = binary vs. color = \"pink\".\nUse facet_wrap() when faceting (creating small multiples) by one variable and facet_grid() when faceting by two variables.\n\n\n\n\n🔗 sta199-f22-1.github.io"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#while-you-wait-for-class-to-begin",
    "href": "slides/05-grammar-of-data-wrangling.html#while-you-wait-for-class-to-begin",
    "title": "Grammar of data wrangling",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nAny questions from prepare materials?\n\n\n\nClone your ae-03 repo."
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#announcements",
    "href": "slides/05-grammar-of-data-wrangling.html#announcements",
    "title": "Grammar of data wrangling",
    "section": "Announcements",
    "text": "Announcements\n\nTo be posted…"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#ae-03",
    "href": "slides/05-grammar-of-data-wrangling.html#ae-03",
    "title": "Grammar of data wrangling",
    "section": "ae-03",
    "text": "ae-03\n\n\nGo to the course GitHub org and find your ae-02 (repo name will be suffixed with your GitHub name).\nClone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\nRender, commit, and push your edits by the AE deadline – 3 days from today."
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#recap-of-ae",
    "href": "slides/05-grammar-of-data-wrangling.html#recap-of-ae",
    "title": "Grammar of data wrangling",
    "section": "Recap of AE",
    "text": "Recap of AE\n\nSomething about pipe…\nSomething about building pipelines\n…\n\n\n\n\n🔗 sta199-f22-1.github.io"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#five-tips-for-success",
    "href": "slides/02-meet-the-toolkit.html#five-tips-for-success",
    "title": "Meet the toolkit",
    "section": "Five tips for success",
    "text": "Five tips for success\n\nComplete all the preparation work before class.\nAsk questions.\nDo the readings and watch the videos.\nDo the homework and lab.\nDon’t procrastinate and don’t let a week pass by with lingering questions."
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#learning-during-a-pandemic",
    "href": "slides/02-meet-the-toolkit.html#learning-during-a-pandemic",
    "title": "Meet the toolkit",
    "section": "Learning during a pandemic",
    "text": "Learning during a pandemic\nI want to make sure that you learn everything you were hoping to learn from this class. If this requires flexibility, please don’t hesitate to ask.\n\n\nYou never owe me personal information about your health (mental or physical) but you’re always welcome to talk to me. If I can’t help, I likely know someone who can.\nI want you to learn lots of things from this class, but I primarily want you to stay healthy, balanced, and grounded."
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#course-faq",
    "href": "slides/02-meet-the-toolkit.html#course-faq",
    "title": "Meet the toolkit",
    "section": "Course FAQ",
    "text": "Course FAQ\nQ - What data science background does this course assume?\nA - None.\n\nQ - Is this an intro stat course?\nA - While statistics \\(\\ne\\) data science, they are very closely related and have tremendous of overlap. Hence, this course is a great way to get started with statistics. However this course is not your typical high school statistics course.\n\n\nQ - Will we be doing computing?\nA - Yes."
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#course-faq-1",
    "href": "slides/02-meet-the-toolkit.html#course-faq-1",
    "title": "Meet the toolkit",
    "section": "Course FAQ",
    "text": "Course FAQ\nQ - Is this an intro CS course?\nA - No, but many themes are shared.\n\nQ - What computing language will we learn?\nA - R.\n\n\nQ: Why not language X?\nA: We can discuss that over ☕."
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#course-toolkit",
    "href": "slides/02-meet-the-toolkit.html#course-toolkit",
    "title": "Meet the toolkit",
    "section": "Course toolkit",
    "text": "Course toolkit\n\n\nCourse operation\n\nMaterials: sta199-f22-1.github.io\nSubmission: Gradescope\nDiscussion: Slack\nGradebook: Sakai\n\n\nDoing data science\n\nComputing:\n\nR\nRStudio\ntidyverse\nQuarto\n\nVersion control and collaboration:\n\nGit\nGitHub"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#learning-goals",
    "href": "slides/02-meet-the-toolkit.html#learning-goals",
    "title": "Meet the toolkit",
    "section": "Learning goals",
    "text": "Learning goals\nBy the end of the course, you will be able to…\n\n\ngain insight from data\ngain insight from data, reproducibly\ngain insight from data, reproducibly, using modern programming tools and techniques\ngain insight from data, reproducibly and collaboratively, using modern programming tools and techniques\ngain insight from data, reproducibly (with literate programming and version control) and collaboratively, using modern programming tools and techniques"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#reproducibility-checklist",
    "href": "slides/02-meet-the-toolkit.html#reproducibility-checklist",
    "title": "Meet the toolkit",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nWhat does it mean for a data analysis to be “reproducible”?\n\n\nNear-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\n\n\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#toolkit-for-reproducibility",
    "href": "slides/02-meet-the-toolkit.html#toolkit-for-reproducibility",
    "title": "Meet the toolkit",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) Quarto\nVersion control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#r-and-rstudio-1",
    "href": "slides/02-meet-the-toolkit.html#r-and-rstudio-1",
    "title": "Meet the toolkit",
    "section": "R and RStudio",
    "text": "R and RStudio\n\n\n\n\n\n\n\n\nR is an open-source statistical programming language\nR is also an environment for statistical computing and graphics\nIt’s easily extensible with packages\n\n\n\n\nRStudio is a convenient interface for R called an IDE (integrated development environment), e.g. “I write R code in the RStudio IDE”\nRStudio is not a requirement for programming with R, but it’s very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#r-vs.-rstudio",
    "href": "slides/02-meet-the-toolkit.html#r-vs.-rstudio",
    "title": "Meet the toolkit",
    "section": "R vs. RStudio",
    "text": "R vs. RStudio\n\n\n\n\n\n\n\nSource: Modern Dive."
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#r-packages",
    "href": "slides/02-meet-the-toolkit.html#r-packages",
    "title": "Meet the toolkit",
    "section": "R packages",
    "text": "R packages\n\n\nPackages: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data1\nAs of September 2022, there are over 18,000 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe’re going to work with a small (but important) subset of these!\n\n\n\n\n1 Wickham and Bryan, R Packages.\n2 CRAN contributed packages."
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#tour-r-and-rstudio",
    "href": "slides/02-meet-the-toolkit.html#tour-r-and-rstudio",
    "title": "Meet the toolkit",
    "section": "Tour: R and RStudio",
    "text": "Tour: R and RStudio"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#a-short-list-for-now-of-r-essentials",
    "href": "slides/02-meet-the-toolkit.html#a-short-list-for-now-of-r-essentials",
    "title": "Meet the toolkit",
    "section": "A short list (for now) of R essentials",
    "text": "A short list (for now) of R essentials\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n\n\n\nPackages are installed with the install.packages() function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#r-essentials-continued",
    "href": "slides/02-meet-the-toolkit.html#r-essentials-continued",
    "title": "Meet the toolkit",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nColumns (variables) in data frames are accessed with $:\n\n\ndataframe$var_name\n\n\n\nObject documentation can be accessed with ?\n\n\n?mean"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#tidyverse",
    "href": "slides/02-meet-the-toolkit.html#tidyverse",
    "title": "Meet the toolkit",
    "section": "tidyverse",
    "text": "tidyverse\n\n\n\n\n\n\n\n\ntidyverse.org\n\nThe tidyverse is an opinionated collection of R packages designed for data science\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#quarto-1",
    "href": "slides/02-meet-the-toolkit.html#quarto-1",
    "title": "Meet the toolkit",
    "section": "Quarto",
    "text": "Quarto\n\n\nFully reproducible reports – each time you render the analysis is ran from the beginning\nCode goes in chunks narrative goes outside of chunks\nA visual editor for a familiar / Google docs-like editing experience"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#tour-quarto",
    "href": "slides/02-meet-the-toolkit.html#tour-quarto",
    "title": "Meet the toolkit",
    "section": "Tour: Quarto",
    "text": "Tour: Quarto"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#environments",
    "href": "slides/02-meet-the-toolkit.html#environments",
    "title": "Meet the toolkit",
    "section": "Environments",
    "text": "Environments\n\n\n\n\n\n\nImportant\n\n\nThe environment of your Quarto document is separate from the Console!\n\n\n\nRemember this, and expect it to bite you a few times as you’re learning to work with Quarto!"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#environments-1",
    "href": "slides/02-meet-the-toolkit.html#environments-1",
    "title": "Meet the toolkit",
    "section": "Environments",
    "text": "Environments\n\n\nFirst, run the following in the console:\n\nx <- 2\nx * 3\n\n\n\nAll looks good, eh?\n\n\nThen, add the following in an R chunk in your Quarto document\n\nx * 3\n\n\n\nWhat happens? Why the error?"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#how-will-we-use-quarto",
    "href": "slides/02-meet-the-toolkit.html#how-will-we-use-quarto",
    "title": "Meet the toolkit",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery assignment / report / project / etc. is an Quarto document\nYou’ll always have a template Quarto document to start with\nThe amount of scaffolding in the template will decrease over the semester"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#whats-with-all-the-hexes",
    "href": "slides/02-meet-the-toolkit.html#whats-with-all-the-hexes",
    "title": "Meet the toolkit",
    "section": "What’s with all the hexes?",
    "text": "What’s with all the hexes?"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#your-turn",
    "href": "slides/02-meet-the-toolkit.html#your-turn",
    "title": "Meet the toolkit",
    "section": "Your turn!",
    "text": "Your turn!\n\nae-0-bechdel-quarto\n\nThe Bechdel test asks whether a work of fiction features at least two women who talk to each other about something other than a man, and there must be two women named characters.\nGo to the course GitHub organization and clone ae-0-bechdel-quarto to your container.\nOpen and render the Quarto document bechdel.qmd, review the document, and fill in the blanks."
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#git-and-github",
    "href": "slides/02-meet-the-toolkit.html#git-and-github",
    "title": "Meet the toolkit",
    "section": "Git and GitHub",
    "text": "Git and GitHub\n\n\n\n\n\n\n\n\nGit is a version control system – like “Track Changes” features from Microsoft Word, on steroids\nIt’s not the only version control system, but it’s a very popular one\n\n\n\n\n\n\n\n\nGitHub is the home for your Git-based projects on the internet – like DropBox but much, much better\nWe will use GitHub as a platform for web hosting and collaboration (and as our course management system!)"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#versioning",
    "href": "slides/02-meet-the-toolkit.html#versioning",
    "title": "Meet the toolkit",
    "section": "Versioning",
    "text": "Versioning"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#versioning-1",
    "href": "slides/02-meet-the-toolkit.html#versioning-1",
    "title": "Meet the toolkit",
    "section": "Versioning",
    "text": "Versioning\nwith human readable messages"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#how-will-we-use-git-and-github",
    "href": "slides/02-meet-the-toolkit.html#how-will-we-use-git-and-github",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub",
    "text": "How will we use Git and GitHub"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#how-will-we-use-git-and-github-1",
    "href": "slides/02-meet-the-toolkit.html#how-will-we-use-git-and-github-1",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#how-will-we-use-git-and-github-2",
    "href": "slides/02-meet-the-toolkit.html#how-will-we-use-git-and-github-2",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#how-will-we-use-git-and-github-3",
    "href": "slides/02-meet-the-toolkit.html#how-will-we-use-git-and-github-3",
    "title": "Meet the toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#git-and-github-tips",
    "href": "slides/02-meet-the-toolkit.html#git-and-github-tips",
    "title": "Meet the toolkit",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\n\nThere are millions of git commands – ok, that’s an exaggeration, but there are a lot of them – and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\nWe will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line – skip that and move on to the next resource unless you feel comfortable trying it out.\nThere is a great resource for working with git and R: happygitwithr.com. Some of the content in there is beyond the scope of this course, but it’s a good place to look for help."
  },
  {
    "objectID": "slides/02-meet-the-toolkit.html#tour-git-github",
    "href": "slides/02-meet-the-toolkit.html#tour-git-github",
    "title": "Meet the toolkit",
    "section": "Tour: Git + GitHub",
    "text": "Tour: Git + GitHub\n\nIn Lab 0 next Monday!\nMake sure to create a GitHub account and fill out the Getting to know you survey!\n\n\n\n\n🔗 sta199-f22-1.github.io"
  },
  {
    "objectID": "course-faq.html",
    "href": "course-faq.html",
    "title": "FAQ",
    "section": "",
    "text": "Go to your Files tab, check the box next to the file you want to download, then click on the blue gear icon on the Files tab to reveal the drop down menu, and select Export… If you have selected multiple files to export, RStudio will zip them up into a single zip file for you. If you’ve selected just a single file, it will only download that. The downloaded file will go to wherever files you download off the internet goes on your computer (usually your Downloads folder)."
  },
  {
    "objectID": "course-faq.html#how-can-i-submit-my-assignment-to-gradescope",
    "href": "course-faq.html#how-can-i-submit-my-assignment-to-gradescope",
    "title": "FAQ",
    "section": "How can I submit my assignment to Gradescope?",
    "text": "How can I submit my assignment to Gradescope?\nThe instructions for submitting your assignment to Gradescope can be found here. In a nutshell, you’ll upload your PDF and them mark the page(s) where each question can be found. It’s OK if a question spans multiple pages, just mark them all. It’s also OK if a page includes multiple questions."
  },
  {
    "objectID": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-the-rstudio-containers",
    "href": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-the-rstudio-containers",
    "title": "FAQ",
    "section": "Can I use a local install of R and RStudio instead of using the RStudio containers?",
    "text": "Can I use a local install of R and RStudio instead of using the RStudio containers?\nThe short answer is, I’d rather you didn’t, to save yourself some headache. But, the long answer is, sure! But you will need to install a specific versions of R and RStudio for everything to work as expected. You will also need to install the R packages we’re using as well as have Git installed on your computer. These are not extremely challenging things to get right, but they are not trivial either, particularly on certain operating systems. Myself and the TAs are always happy to provide help with any computational questions when you’re working in the containers we have provided for you. If you’re working on your local setup, we can’t guarantee being able to resolve your issues, though we’re happy to try.\nIf you want to take this path, here is what you need to do:\n\nDownload and install R 4.2.1: https://cran.r-project.org/\nDownload and install the preview build of RStudio: https://www.rstudio.com/products/rstudio/download/preview/\nInstall Git: https://happygitwithr.com/install-git.html\nInstall any necessary packages with install.packages(\"___\")\n\nAnd I’d like to reiterate again that successful installation of these software is not a learning goal of this course. So if any of this seems tedious or intimidating in any way, just use the computing environment we have set up for you. More on that here."
  },
  {
    "objectID": "course-support.html",
    "href": "course-support.html",
    "title": "Course support",
    "section": "",
    "text": "Most of you will need help at some point and we want to make sure you can identify when that is without getting too frustrated and feel comfortable seeking help."
  },
  {
    "objectID": "course-support.html#lectures-and-labs",
    "href": "course-support.html#lectures-and-labs",
    "title": "Course support",
    "section": "Lectures and labs",
    "text": "Lectures and labs\nIf you have a question during lecture or lab, feel free to ask it! There are likely other students with the same question, so by asking you will create a learning opportunity for everyone."
  },
  {
    "objectID": "course-support.html#office-hours",
    "href": "course-support.html#office-hours",
    "title": "Course support",
    "section": "Office hours",
    "text": "Office hours\nThe teaching team is here to help you be successful in the course. You are encouraged to attend office hours during the times posted on the home page to ask questions about the course content and assignments. A lot of questions are most effectively answered in-person, so office hours are a valuable resource. I encourage each and every one of you to take advantage of this resource! Make a pledge to stop by office hours at least once during the first three weeks of class. If you truly have no questions to ask, just stop by and say hi and introduce yourself. You can find a list of everyone’s office hours here."
  },
  {
    "objectID": "course-support.html#slack",
    "href": "course-support.html#slack",
    "title": "Course support",
    "section": "Slack",
    "text": "Slack\nHave a question that can’t wait for office hours? Prefer to write out your question in detail rather than asking in person? The course Slack is the best venue for these! There is a chance another student has already asked a similar question, so please check the other posts on Slack before asking a new question. If you know the answer to a question that is posted, I encourage you to respond!"
  },
  {
    "objectID": "course-support.html#email",
    "href": "course-support.html#email",
    "title": "Course support",
    "section": "Email",
    "text": "Email\nPlease refrain from emailing any course content questions (those should go to Slack), and only use email for questions about personal matters that may not be appropriate for the public course forum (e.g., illness, accommodations, etc.). For such matters, you may email Dr. Mine Çetinkaya-Rundel at mc301@duke.edu.\nIf there is a question that’s not appropriate for the public forum, you are welcome to email me directly. If you email me, please include “STA 199” in the subject line. Barring extenuating circumstances, I will respond to STA 199 emails within 48 hours Monday - Friday. Response time may be slower for emails sent Friday evening - Sunday."
  },
  {
    "objectID": "course-support.html#academic-support",
    "href": "course-support.html#academic-support",
    "title": "Course support",
    "section": "Academic support",
    "text": "Academic support\nThere are times may need help with the class that is beyond what can be provided by the teaching team. In those instances, I encourage you to visit the Academic Resource Center. The Academic Resource Center (ARC) offers free services to all students during their undergraduate careers at Duke. Services include Learning Consultations, Peer Tutoring and Study Groups, ADHD/LD Coaching, Outreach Workshops, and more. Because learning is a process unique to every individual, they work with each student to discover and develop their own academic strategy for success at Duke. Contact the ARC to schedule an appointment. Undergraduates in any year, studying any discipline can benefit! Contact ARC@duke.edu, 919-684-5917."
  },
  {
    "objectID": "course-support.html#mental-health-and-wellness",
    "href": "course-support.html#mental-health-and-wellness",
    "title": "Course support",
    "section": "Mental health and wellness",
    "text": "Mental health and wellness\nIf your mental health concerns and/or stressful events negatively affect your daily emotional state, academic performance, or ability to participate in your daily activities, many resources are available to help you through difficult times.  Duke encourages all students to access these resources.\n\nCAPS: Duke Counseling & Pyschological Services (CAPS) helps Duke Students enhance strengths and develop abilities to successfully live, grow and learn in their personal and academic lives. CAPS recognizes that we are living in unprecedented times and that the changes, challenges and stressors brought on by the COVID-19 pandemic have impacted everyone, often in ways that are tax our well-being. CAPS offers many services to Duke undergraduate students, including brief individual and group counseling, couples counseling and more. CAPS staff also provides outreach to student groups, particularly programs supportive of at-risk populations, on a wide range of issues impacting them in various aspects of campus life. CAPS provides services to students via Telehealth. To initiate services, you can contact their front desk at 919-660-1000.\nDuWell: (919) 681-8421, provides Moments of Mindfulness (stress management and resilience building) and meditation programming to assist students in developing a daily emotional well-being practice. To see schedules for programs please see https://studentaffairs.duke.edu/duwell. All are welcome and no experience necessary.\nDukeReach: Provides comprehensive outreach services to identify and support students in managing all aspects of well-being. If you have concerns about a student’s behavior or health visit the website for resources and assistance: http://studentaffairs.duke.edu/dukereach.\nTimelyCare: (formerly known as Blue Devils Care) An online platform that is a convenient, confidential, and free way for Duke students to receive 24/7 mental health support through TalkNow and scheduled counseling: https://bluedevilscare.duke.edu.\nTwo-Click Support: Duke Student Government and DukeReach partnership that connects students to help in just two clicks: https://bit.ly/TwoClickSupport."
  },
  {
    "objectID": "course-support.html#course-costs",
    "href": "course-support.html#course-costs",
    "title": "Course support",
    "section": "Course costs",
    "text": "Course costs\n\nTextbooks: The textbooks for this course are freely available on the web.\nLaptops: Each student is expected to have a laptop they can bring to each lecture and lab.\n\nIf you are having difficulty with costs associated with this course, here are some resources:\n\nContact the financial aid office (whether or not you are on aid). They have loans and resources for connecting students with programs on campus that might be able to help alleviate these costs.\nDukeLIFE offers course materials assistance for eligible students. Please note that students who are eligible for DukeLIFE benefits are notified prior to the start of the semester; program resources are limited."
  },
  {
    "objectID": "course-support.html#assistance-with-zoom-or-sakai",
    "href": "course-support.html#assistance-with-zoom-or-sakai",
    "title": "Course support",
    "section": "Assistance with Zoom or Sakai",
    "text": "Assistance with Zoom or Sakai\nFor technical help with Sakai or Zoom, contact the Duke OIT Service Desk at oit.duke.edu/help. You can also access the self-service help documentation for Zoom here and for Sakai here.\nNote that we will be making minimal use of Sakai in this course (primarily for announcements and grade book). All assignment submission will take place on GitHub and conversation on Slack.\nZoom will be used for online office hours as well as as a backup option should we need to hold the course online instead of in person."
  },
  {
    "objectID": "project-description.html",
    "href": "project-description.html",
    "title": "Project description",
    "section": "",
    "text": "To be posted."
  },
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Click here to download a PDF copy of the syllabus."
  },
  {
    "objectID": "course-syllabus.html#office-hours",
    "href": "course-syllabus.html#office-hours",
    "title": "Syllabus",
    "section": "Office hours",
    "text": "Office hours\nClick here for the instructor and TA office hours locations and Zoom links. You are welcomed to attend the office hours for any STA 199 TA, regardless of section."
  },
  {
    "objectID": "course-syllabus.html#textbooks",
    "href": "course-syllabus.html#textbooks",
    "title": "Syllabus",
    "section": "Textbooks",
    "text": "Textbooks\nAll books are freely available online.\n\n\n\nR for Data Science, 2e\nGrolemund, Wickham\nO’Reilly, 2nd edition, 2022\nHard copy only available of 1st edition\n\n\nIntroduction to Modern Statistics\nÇetinkaya-Rundel, Hardin\nOpenIntro Inc., 1st Edition, 2021\nHard copy available on Amazon"
  },
  {
    "objectID": "course-syllabus.html#course-learning-objectives",
    "href": "course-syllabus.html#course-learning-objectives",
    "title": "Syllabus",
    "section": "Course learning objectives",
    "text": "Course learning objectives\nBy the end of the semester, you will…\n\nlearn to explore, visualize, and analyze data in a reproducible and shareable manner\ngain experience in data wrangling and munging, exploratory data analysis, predictive modeling, and data visualization\nwork on problems and case studies inspired by and based on real-world questions and data\nlearn to effectively communicate results through written assignments and project presentation"
  },
  {
    "objectID": "course-syllabus.html#course-community",
    "href": "course-syllabus.html#course-community",
    "title": "Syllabus",
    "section": "Course community",
    "text": "Course community\n\nDuke Community Standard\nAs a student in this course, you have agreed to uphold the Duke Community Standard as well as the practices specific to this course.\n\n\n\n\nInclusive community\nIt is my intent that students from all diverse backgrounds and perspectives be well-served by this course, that students’ learning needs be addressed both in and out of class, and that the diversity that the students bring to this class be viewed as a resource, strength, and benefit. It is my intent to present materials and activities that are respectful of diversity and in alignment with Duke’s Commitment to Diversity and Inclusion. Your suggestions are encouraged and appreciated. Please let me know ways to improve the effectiveness of the course for you personally, or for other students or student groups.\nFurthermore, I would like to create a learning environment for my students that supports a diversity of thoughts, perspectives and experiences, and honors your identities. To help accomplish this:\n\nIf you feel like your performance in the class is being impacted by your experiences outside of class, please don’t hesitate to come and talk with me. If you prefer to speak with someone outside of the course, your academic dean is an excellent resource.\nI (like many people) am still in the process of learning about diverse perspectives and identities. If something was said in class (by anyone) that made you feel uncomfortable, please let me or a member of the teaching team know.\n\n\n\nPronouns\nPronouns are meaningful tools to communicate identities and experiences, and using pronouns supports a campus environment where all community members can thrive. Please update your gender pronouns in Duke Hub. You can learn more at the Center for Sexual and Gender Diversity’s website.\n\n\nAccessibility\nIf there is any portion of the course that is not accessible to you due to challenges with technology or the course format, please let me know so we can make appropriate accommodations.\nThe Student Disability Access Office (SDAO) is available to ensure that students are able to engage with their courses and related assignments. Students should be in touch with the Student Disability Access Office to request or update accommodations under these circumstances.\n\n\nCommunication\nAll lecture notes, assignment instructions, an up-to-date schedule, and other course materials may be found on the course website: sta199-f22-1.github.io.\nAnnouncements will be emailed through Sakai Announcements periodically. Please check your email regularly to ensure you have the latest announcements for the course.\n\n\nWhere to get help\n\nIf you have a question during lecture or lab, feel free to ask it! There are likely other students with the same question, so by asking you will create a learning opportunity for everyone.\nThe teaching team is here to help you be successful in the course. You are encouraged to attend office hours to ask questions about the course content and assignments. Many questions are most effectively answered as you discuss them with others, so office hours are a valuable resource. Please use them!\nOutside of class and office hours, any general questions about course content or assignments should be posted on the course Slack. There is a chance another student has already asked a similar question, so please check the other posts on Slack before adding a new question. If you know the answer to a question posted on Slack, I encourage you to respond!\n\nCheck out the Help tab for more resources.\n\n\nEmail\nIf there is a question that’s not appropriate for the public forum, you are welcome to email me directly. If you email me, please include “STA 199” in the subject line. Barring extenuating circumstances, I will respond to STA 199 emails within 48 hours Monday - Friday. Response time may be slower for emails sent Friday evening - Sunday."
  },
  {
    "objectID": "course-syllabus.html#activities-assessment",
    "href": "course-syllabus.html#activities-assessment",
    "title": "Syllabus",
    "section": "Activities & Assessment",
    "text": "Activities & Assessment\nThe activities and assessments in this course are designed to help you successfully achieve the course learning objectives. They are designed to follow the Prepare, Practice, Perform format.\n\nPrepare: Includes short videos, reading assignments, and lectures to introduce new concepts and ensure a basic comprehension of the material. The goal is to help you prepare for the in-class activities during lecture.\nPractice: Includes in-class application exercises where you will begin to the concepts and methods introduced in the prepare assignment. the activities will graded for completion, as they are designed for you to gain experience with the statistical and computing techniques before working on graded assignments.\nPerform: Includes labs, homework, exams, and the project. These assignments build upon the prepare and practice assignments and are the opportunity for you to demonstrate your understanding of the course material and how it is applied to analyze real-world data.\n\n\nLectures (Prepare)\nPart of the class time will be lectures that introduce new concepts or review topics from the preparation videos. Lectures will not repeat everything in the videos, they will instead highlight important and known to be complex concepts and will be supplemented with live coding activities. You are expected to attend every lecture. Lectures will be recorded and made available to students with an excused absence upon request.\n\n\nApplication exercises (Practice)\nA majority of the in-class lectures will be dedicated to working on Application Exercises (AEs). These exercises which give you an opportunity to practice apply the statistical concepts and code introduced in the prepare assignment. These AEs are due within three days of the corresponding lecture period. Specifically, AEs from Tuesday lectures are due Friday by 11:59p ET, and AEs from Thursday lectures are due Sunday by 11:59p ET.\nBecause these AEs are for practice, they will be graded based on completion, i.e., a good-faith effort has been made in attempting all parts. Successful on-time completion of at least 80% of AEs will result in full credit for AEs in the final course grade.\nIn addition to AEs will be periodic activities help build a learning community. These will be short, fun activities that will help everyone in the class connect throughout the semester.\n\n\nLabs (Perform)\nIn labs, you will apply the concepts discussed in lecture to various data analysis scenarios, with a focus on the computation. Most lab assignments will be completed in teams, and all team members are expected to contribute equally to the completion of each assignment. You are expected to use the team’s Git repository on the course’s GitHub page as the central platform for collaboration. Commits to this repository will be used as a metric of each team member’s relative contribution for each lab, and there will be periodic peer evaluation on the team collaboration. Lab assignments will be completed using Quarto, correspond to an appropriate GitHub repository, and submitted for grading in Gradescope.\nThe lowest lab grade will be dropped at the end of the semester.\n\n\nHomework (Perform)\nIn homework, you will apply what you’ve learned during lecture and lab to complete data analysis tasks. You may discuss homework assignments with other students; however, homework should be completed and submitted individually. Similar to lab assignments, homework must be typed up using Quarto and GitHub and submitted as a PDF in Gradescope.\nOne homework assignment will be dedicated to a statistics experience. The statistics experience is an opportunity to engage with statistics and data science outside of the classroom through podcasts, books, seminars, data analysis competitions, and other activities. As you complete these experiences, the goal is to consider how the material you’re learning in the course connects with society more broadly.\nThe lowest homework grade will be dropped at the end of the semester.\n\n\nExams (Perform)\nThere will be two, take-home, open-note exams. Through these exams you have the opportunity to demonstrate what you’ve learned in the course thus far. Each exam will include small analysis and computational tasks related to the content in the prepare, practice, and perform assignments. More details about the content and structure of the exams will be discussed during the semester.\n\n\nProject (Perform)\nThe purpose of the project is to apply what you’ve learned throughout the semester to analyze an interesting data-driven research question. The project will be completed with your lab teams, and each team will present their work in video and in writing during the final exam period. More information about the project will be provided during the semester."
  },
  {
    "objectID": "course-syllabus.html#grading",
    "href": "course-syllabus.html#grading",
    "title": "Syllabus",
    "section": "Grading",
    "text": "Grading\nThe final course grade will be calculated as follows:\n\n\n\nCategory\nPercentage\n\n\n\n\nHomework\n30% (5% x 6)\n\n\nLabs\n14% (2% x 7)\n\n\nProject\n15%\n\n\nExam 01\n18%\n\n\nExam 02\n18%\n\n\nApplication Exercises\n2.5%\n\n\nTeamwork\n2.5%\n\n\n\nThe final letter grade will be determined based on the following thresholds:\n\n\n\nLetter Grade\nFinal Course Grade\n\n\n\n\nA\n>= 93\n\n\nA-\n90 - 92.99\n\n\nB+\n87 - 89.99\n\n\nB\n83 - 86.99\n\n\nB-\n80 - 82.99\n\n\nC+\n77 - 79.99\n\n\nC\n73 - 76.99\n\n\nC-\n70 - 72.99\n\n\nD+\n67 - 69.99\n\n\nD\n63 - 66.99\n\n\nD-\n60 - 62.99\n\n\nF\n< 60"
  },
  {
    "objectID": "course-syllabus.html#course-policies",
    "href": "course-syllabus.html#course-policies",
    "title": "Syllabus",
    "section": "Course policies",
    "text": "Course policies\n\nAcademic honesty\nTL;DR: Don’t cheat!\nPlease abide by the following as you work on assignments in this course:\n\nYou may discuss individual homework and lab assignments with other students; however, you may not directly share (or copy) code or write up with other students. For team assignments, you may collaborate freely within your team. You may discuss the assignment with other teams; however, you may not directly share (or copy) code or write up with another team. Unauthorized sharing (or copying) of the code or write up will be considered a violation for all students involved.\nYou may not discuss or otherwise work with others on the exams. Unauthorized collaboration or using unauthorized materials will be considered a violation for all students involved. More details will be given closer to the exam date.\nReusing code: Unless explicitly stated otherwise, you may make use of online resources (e.g. StackOverflow) for coding examples on assignments. If you directly use code from an outside source (or use it as inspiration), you must explicitly cite where you obtained the code. Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism.\n\nAny violations in academic honesty standards as outlined in the Duke Community Standard and those specific to this course will automatically result in a 0 for the assignment and will be reported to the Office of Student Conduct for further action.\n\n\nLate work & extensions\nThe due dates for assignments are there to help you keep up with the course material and to ensure the teaching team can provide feedback within a timely manner. We understand that things come up periodically that could make it difficult to submit an assignment by the deadline. Note that the lowest homework and lab assignment will be dropped to accommodate such circumstances.\n\n\nLate work\n\nHomework and labs may be submitted up to 3 days late. There will be a 5% deduction for each 24-hour period the assignment is late.\nThere is no late work accepted for application exercises, since these are designed to help you prepare for labs and homework.\nThe late work policy for exams will be provided with the exam instructions.\nThe late work policy for the project will be provided with the project instructions.\n\n\n\nWaiver for extenuating circumstances\nIf there are circumstances that prevent you from completing a lab or homework assignment by the stated due date, you may email the head TA before the deadline to waive the late penalty. In your email, you only need to request the waiver; you do not need to provide explanation. This waiver may only be used for once in the semester, so only use it for a truly extenuating circumstance.\nIf there are circumstances that are having a longer-term impact on your academic performance, please let your academic dean know, as they can be a resource. Please let Dr. Çetinkaya-Rundel know if you need help contacting your academic dean.\n\n\nRegrade requests\nRegrade requests must be submitted on Gradescope within a week of when an assignment is returned. Regrade requests will be considered if there was an error in the grade calculation or if you feel a correct answer was mistakenly marked as incorrect. Requests to dispute the number of points deducted for an incorrect response will not be considered. Note that by submitting a regrade request, the entire question will be graded which could potentially result in losing points.\nNo grades will be changed after the project presentations.\n\n\nClass recording requests\nLectures will be recorded on Panopto and will be made available to students with an excused absence upon request. Videos shared with such students will be available for a week. To request a particular lecture’s video, please fill out the form. Please also make sure that any official documentation, such as incapacitation forms, Dean’s excuses, NOVAPs, and quarantine/removal from class notices from student health are also uploaded to the form.\n\n\nAttendance policy\n\nCOVID Symptoms, Exposure, or Infection: Student health, safety, and well-being are the university’s top priorities. To help ensure your well-being and the well-being of those around you, please do not come to class if you have tested positive for COVID-19 or have possible symptoms and have not yet been tested. If any of these situations apply to you, you must follow university guidance related to the ongoing COVID-19 pandemic and current health and safety protocols. If you are experiencing any COVID-19 symptoms, contact student health (dshcheckin@duke.edu, 919-681-9355). Learn more about current university policy related to COVID-19 at https://coronavirus.duke.edu. To keep the university community’s safe and healthy as possible, you will be expected to follow these guidelines. Please reach out to me and your academic dean as soon as possible if you need to quarantine or isolate so that we can discuss arrangements for your continued participation in class.\nInclement weather: In the event of inclement weather or other connectivity-related events that prohibit class attendance, I will notify you how we will make up missed course content and work.  Asynchronous catch-up methods may apply.\nReligious accommodations: Students are permitted by university policy to be absent from class to observe a religious holiday. Accordingly, Trinity College of Arts & Sciences and the Pratt School of Engineering have established procedures to be followed by students for notifying their instructors of an absence necessitated by the observance of a religious holiday. Please submit requests for religious accommodations at the beginning of the semester so that we can work to make suitable arrangements well ahead of time. You can find the policy and relevant notification form here: https://trinity.duke.edu/undergraduate/academic-policies/religious-holidays.\n\nNote: If you’ve read this far in the syllabus, email me a picture of your pet if you have one or your favourite meme!"
  },
  {
    "objectID": "course-syllabus.html#important-dates",
    "href": "course-syllabus.html#important-dates",
    "title": "Syllabus",
    "section": "Important dates",
    "text": "Important dates\n\nAug 29: Classes begin\nSep 9: Drop/add ends\nSep 29: Exam 1 released\nOct 3: Exam 1 due (at 2pm)\nOct 10-11: Fall break\nNov 11: Last day to withdraw with W\nNov 17: Exam 2 released\nNov 21: Exam 2 due (at 2pm)\nNov 23-25: Thanksgiving recess\nDec 9: Classes end\nDec 10-13: Reading period\nDec 14-19: Final exams\n\nFor more important dates, see the full Duke Academic Calendar."
  },
  {
    "objectID": "computing-troubleshooting.html",
    "href": "computing-troubleshooting.html",
    "title": "Computing troubleshooting",
    "section": "",
    "text": "If the status shows something other than Operational, this means there is a known incident with the containers. Check back later to see if it’s been resolved. If there’s a deadline coming up soon, post on the course Slack to let us know that there’s an issue. We can look into how quickly it might get resolved and decide on what to do about the deadline accordingly. Note: We don’t anticipate this to happen regularly, the systems are Operational a huge majority of the time!\nIf the status shows Operational, this means the system is expected to be working. Check your internet connection, if need be, restart your computer to ensure a fresh new connection. If your issue persists, post on the course forum with details on what you’ve tried and the errors you see (including verbatim errors and/or screenshots)."
  }
]